<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='facility-type-viewer' inline='true' name='federated.1bipr070cl66dk10c05px0wytpf5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='facility-type-viewer' name='ogrdirect.0qjcykk0dvzrax18mftzx1y2wkj7'>
            <connection class='ogrdirect' directory='Z:/Data/Users/Sijia/MTC/github/travel-model-two-networks/data/interim' filename='facility-type-viewer.geojson' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2019.2\local\proj4' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation connection='ogrdirect.0qjcykk0dvzrax18mftzx1y2wkj7' name='facility-type-viewer.geojson' table='[facility-type-viewer.geojson]' type='table'>
          <columns>
            <column datatype='string' name='shstReferenceId' ordinal='0' />
            <column datatype='integer' name='drive_access' ordinal='1' />
            <column datatype='string' name='shstGeometryId' ordinal='2' />
            <column datatype='string' name='osm_ft' ordinal='3' />
            <column datatype='integer' name='tom_lanes' ordinal='4' />
            <column datatype='integer' name='tomtom_FRC' ordinal='5' />
            <column datatype='string' name='tom_name' ordinal='6' />
            <column datatype='string' name='tom_shield' ordinal='7' />
            <column datatype='string' name='tom_rtedir' ordinal='8' />
            <column datatype='integer' name='tm2_ft' ordinal='9' />
            <column datatype='integer' name='tm2_lanes' ordinal='10' />
            <column datatype='integer' name='marin_ft' ordinal='11' />
            <column datatype='integer' name='marin_lanes' ordinal='12' />
            <column datatype='string' name='sfcta_name' ordinal='13' />
            <column datatype='string' name='sfcta_min_lanes' ordinal='14' />
            <column datatype='string' name='sfcta_max_lanes' ordinal='15' />
            <column datatype='string' name='pems_ft' ordinal='16' />
            <column datatype='integer' name='pems_lanes' ordinal='17' />
            <column datatype='integer' name='osm_min_lanes' ordinal='18' />
            <column datatype='integer' name='osm_max_lanes' ordinal='19' />
            <column datatype='string' name='name' ordinal='20' />
            <column datatype='integer' name='one_way' ordinal='21' />
            <column datatype='string' name='tom_ft' ordinal='22' />
            <column datatype='real' name='osm_sfcta_names_dist' ordinal='23' />
            <column datatype='string' name='county_name' ordinal='24' />
            <column datatype='spatial' name='Geometry' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>shstReferenceId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shstReferenceId]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>shstReferenceId</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_access</remote-name>
            <remote-type>3</remote-type>
            <local-name>[drive_access]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>drive_access</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shstGeometryId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shstGeometryId]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>shstGeometryId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_ft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[osm_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_ft</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tom_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_lanes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tomtom_FRC</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tomtom_FRC]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tomtom_FRC</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_shield</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_shield]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_shield</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_rtedir</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_rtedir]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_rtedir</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tm2_ft</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tm2_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tm2_ft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tm2_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tm2_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tm2_lanes</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marin_ft</remote-name>
            <remote-type>3</remote-type>
            <local-name>[marin_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>marin_ft</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marin_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[marin_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>marin_lanes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfcta_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfcta_name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>sfcta_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfcta_min_lanes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfcta_min_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>sfcta_min_lanes</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfcta_max_lanes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfcta_max_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>sfcta_max_lanes</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pems_ft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pems_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>pems_ft</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pems_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[pems_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>pems_lanes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_min_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[osm_min_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_min_lanes</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_max_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[osm_max_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_max_lanes</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>one_way</remote-name>
            <remote-type>3</remote-type>
            <local-name>[one_way]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>one_way</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_ft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_ft</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_sfcta_names_dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[osm_sfcta_names_dist]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_sfcta_names_dist</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>25</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
      </column>
      <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
      </column>
      <column caption='Proposed and Existing Match' datatype='boolean' name='[Calculation_2292121124799283203]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([tm2_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([tm2_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([tm2_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([tm2_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([tm2_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
      </column>
      <column caption='Proposed and TAM Match' datatype='boolean' name='[Calculation_2292121124805189636]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([marin_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([marin_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([marin_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([marin_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([marin_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([marin_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([marin_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
      </column>
      <column caption='TM2 and Marin Match' datatype='boolean' name='[Calculation_2292121124805378053]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[tm2_ft]==[marin_ft]' />
      </column>
      <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
      </column>
      <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Drive Access' datatype='integer' name='[drive_access]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Freeway-to-Freeway (1)' />
          <alias key='2' value='Freeway (2)' />
          <alias key='3' value='Expressway (3)' />
          <alias key='4' value='Collector (4)' />
          <alias key='5' value='Ramp (5)' />
          <alias key='7' value='Major Arterial (6)' />
          <alias key='11' value='Minor Arterial' />
          <alias key='12' value='Major Collector' />
          <alias key='13' value='Minor Collector' />
          <alias key='14' value='Residential' />
        </aliases>
      </column>
      <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Two Way' />
          <alias key='1' value='One Way' />
        </aliases>
      </column>
      <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
      <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
      <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
      <column caption='Pems Ft' datatype='string' name='[pems_ft]' role='dimension' type='nominal' />
      <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
      <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
      <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
      <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
      <column caption='Shst Geometry Id' datatype='string' name='[shstGeometryId]' role='dimension' type='nominal' />
      <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Freeway-to-freeway (1)' />
          <alias key='2' value='Freeway (2)' />
          <alias key='3' value='Expressway (3)' />
          <alias key='4' value='Collector (4)' />
          <alias key='5' value='Ramp (5)' />
          <alias key='7' value='Major Arterial (7)' />
        </aliases>
      </column>
      <column caption='Tm2 Lanes' datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
      <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
      <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
      <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
      <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
      <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
      <column caption='tomtom FRC' datatype='integer' name='[tomtom_FRC]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2292121124799283203]' derivation='None' name='[none:Calculation_2292121124799283203:nk]' pivot='key' type='nominal' />
      <column-instance column='[osm_ft]' derivation='None' name='[none:osm_ft:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.519064' measure-ordering='alphabetic' measure-percentage='0.480936' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2292121124799283203:nk]' type='palette'>
            <map to='#64cdcc'>
              <bucket>true</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2292121123807895553:nk]' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;(4) Divided Arterial&quot;</bucket>
            </map>
            <map to='#00a2b3'>
              <bucket>&quot;Divided Arterial (3)&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;(4) Major Divided Arterial&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Expressway (2)&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;(5) Major Undivided Arterial&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;(6) Collector&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;(7) Collector&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Collector (6)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Major Divided Arterial (4)&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;(2) Expressway&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;(5) Undivided Arterial&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Undivided Arterial (4)&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;(6) Minor Arterial&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;(1) Freeway&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Freeway (1)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Collector (7)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ramp (3)&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;(3) Ramp&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;Ramp (5)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_2292121123807895553:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Freeway (1)&quot;</bucket>
            <bucket>&quot;Expressway (2)&quot;</bucket>
            <bucket>&quot;Divided Arterial (3)&quot;</bucket>
            <bucket>&quot;Undivided Arterial (4)&quot;</bucket>
            <bucket>&quot;Ramp (5)&quot;</bucket>
            <bucket>&quot;Collector (6)&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:osm_ft:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;motorway&quot;</bucket>
            <bucket>&quot;trunk&quot;</bucket>
            <bucket>&quot;motorway_link&quot;</bucket>
            <bucket>&quot;trunk_link&quot;</bucket>
            <bucket>&quot;primary&quot;</bucket>
            <bucket>&quot;primary_link&quot;</bucket>
            <bucket>&quot;secondary&quot;</bucket>
            <bucket>&quot;secondary_link&quot;</bucket>
            <bucket>&quot;tertiary&quot;</bucket>
            <bucket>&quot;tertiary_link&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Marin Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Proposed and TAM Match' datatype='boolean' name='[Calculation_2292121124805189636]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([marin_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([marin_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([marin_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([marin_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([marin_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([marin_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([marin_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
            </column>
            <column caption='TM2 and Marin Match' datatype='boolean' name='[Calculation_2292121124805378053]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tm2_ft]==[marin_ft]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='Attribute' name='[attr:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124805189636]' derivation='None' name='[none:Calculation_2292121124805189636:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124805378053]' derivation='None' name='[none:Calculation_2292121124805378053:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='None' name='[none:marin_ft:ok]' pivot='key' type='ordinal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2292121123807895553:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805189636:nk]'>
            <groupfilter function='member' level='[none:Calculation_2292121124805189636:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805378053:nk]'>
            <groupfilter function='member' level='[none:Calculation_2292121124805378053:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:county_name:nk]'>
            <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Marin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:marin_ft:ok]' member='1' />
              <groupfilter function='member' level='[none:marin_ft:ok]' member='5' />
              <groupfilter function='member' level='[none:marin_ft:ok]' member='7' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:county_name:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805378053:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805189636:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13631453.573672207' min='-13632650.356661692' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4562198.7515984057' min='4561245.3420715677' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123807895553:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]&gt; (TomTom)</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2430'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2430'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2430'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2430'> &#9;&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Goldman Sans' fontsize='15' italic='true'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EB6F83F8-60A6-4E08-B195-A47B1A7EACA9}' />
    </worksheet>
    <worksheet name='Proposed &amp; Existing Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Proposed and Existing Match' datatype='boolean' name='[Calculation_2292121124799283203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([tm2_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([tm2_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([tm2_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([tm2_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([tm2_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='Attribute' name='[attr:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124799283203]' derivation='None' name='[none:Calculation_2292121124799283203:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2292121123807895553:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13587970.094538232' min='-13650399.617403656' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4559989.7252982995' min='4516036.2306083404' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123807895553:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]&gt; (TomTom)</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2430'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#ff0000' fontname='Goldman Sans' fontsize='15' indent='2430'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2430'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2430'> &#9;&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Goldman Sans' fontsize='15' italic='true'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{42B31775-B556-44B2-B938-378829D2722B}' />
    </worksheet>
    <worksheet name='Proposed &amp; Existing Match Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Proposed and Existing Match' datatype='boolean' name='[Calculation_2292121124799283203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([tm2_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([tm2_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([tm2_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([tm2_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([tm2_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124799283203]' derivation='None' name='[none:Calculation_2292121124799283203:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='None' name='[none:tm2_ft:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]'>
            <groupfilter from='1' function='range' level='[none:tm2_ft:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='68' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='125' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='text-format' field='[federated.1bipr070cl66dk10c05px0wytpf5].[pcto:sum:Number of Records:qk]' value='p0.0%' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]' value='103' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='56' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='220' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='204' />
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]' value='44' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bipr070cl66dk10c05px0wytpf5].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</rows>
        <cols total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</cols>
        <percentages enabled='true' mode='row' />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{A44001AB-8F37-4888-8683-29E4FC554B16}' />
    </worksheet>
    <worksheet name='Proposed &amp; Existing Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Proposed and Existing Match' datatype='boolean' name='[Calculation_2292121124799283203]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([tm2_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([tm2_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([tm2_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([tm2_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([tm2_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([tm2_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124799283203]' derivation='None' name='[none:Calculation_2292121124799283203:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='None' name='[none:tm2_ft:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]'>
            <groupfilter function='member' level='[none:Calculation_2292121124799283203:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]'>
            <groupfilter from='1' function='range' level='[none:tm2_ft:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='68' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='125' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='56' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='168' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</rows>
        <cols total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{253DF0B6-8410-4B65-B5D7-A688F59E89D0}' />
    </worksheet>
    <worksheet name='Proposed &amp; Marin TM2 Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Proposed and TAM Match' datatype='boolean' name='[Calculation_2292121124805189636]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([marin_ft]==1 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;) &#10;OR&#10;([marin_ft]==2 and [Calculation_2292121123807895553]==&quot;(1) Freeway&quot;)&#10;OR&#10;([marin_ft]==3 and [Calculation_2292121123807895553]==&quot;(2) Expressway&quot;)&#10;OR&#10;([marin_ft]==4 and [Calculation_2292121123807895553]==&quot;(6) Collector&quot;)&#10;OR&#10;([marin_ft]==5 and [Calculation_2292121123807895553]==&quot;(3) Ramp&quot;)&#10;OR&#10;([marin_ft]==7 and [Calculation_2292121123807895553]==&quot;(4) Divided Arterial&quot;)&#10;OR&#10;([marin_ft]==7 and [Calculation_2292121123807895553]==&quot;(5) Undivided Arterial&quot;)' />
            </column>
            <column caption='TM2 and Marin Match' datatype='boolean' name='[Calculation_2292121124805378053]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tm2_ft]==[marin_ft]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124805189636]' derivation='None' name='[none:Calculation_2292121124805189636:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2292121124805378053]' derivation='None' name='[none:Calculation_2292121124805378053:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='None' name='[none:marin_ft:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805189636:nk]'>
            <groupfilter function='member' level='[none:Calculation_2292121124805189636:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805378053:nk]'>
            <groupfilter function='member' level='[none:Calculation_2292121124805378053:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:county_name:nk]'>
            <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Marin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:marin_ft:ok]' member='1' />
              <groupfilter function='member' level='[none:marin_ft:ok]' member='5' />
              <groupfilter function='member' level='[none:marin_ft:ok]' member='7' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:county_name:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805189636:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805378053:nk]</column>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='68' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]' value='104' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='168' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]' value='60' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</rows>
        <cols total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{5ACAAABB-BCD7-4FD7-9227-9B5A2D1109D4}' />
    </worksheet>
    <worksheet name='Proposed &amp; OSM Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[osm_ft]' derivation='None' name='[none:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='None' name='[none:tm2_ft:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]'>
            <groupfilter from='1' function='range' level='[none:tm2_ft:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='64' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='185' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]' value='56' />
            <format attr='width' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' value='168' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='height' field='[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]' value='88' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</rows>
        <cols total='true'>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{6E85D41D-25CB-47C2-B027-6179325ED424}' />
    </worksheet>
    <worksheet name='Proposed Arterial Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(4) Divided Arterial&quot;' />
              <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(5) Undivided Arterial&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13579252.453910233' min='-13664640.396088211' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4572090.1958334083' min='4525563.4003788466' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run indent='2340'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2340'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2340'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2340'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2340'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2340'> &#9;&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Goldman Sans' fontsize='15' indent='1620' italic='true'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run indent='1620'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B357184F-A0EE-4355-BA58-EE47D23AE025}' />
    </worksheet>
    <worksheet name='Proposed Collector Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(6) Collector&quot;' />
              <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(7) Collector&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13559554.948630959' min='-13591382.07171079' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4503416.9962538779' min='4481099.1971218623' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run indent='2340'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2340'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2340'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2340'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2340'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2340'> &#9;&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Goldman Sans' fontsize='15' indent='1620' italic='true'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run indent='1620'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DBB270AF-1C29-435A-8B7B-BC79D54686BF}' />
    </worksheet>
    <worksheet name='Proposed Expressway Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(2) Expressway&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13374063.212366465' min='-13781524.937338673' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4653057.9965909692' min='4431037.3242362011' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run indent='2340'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2340'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2340'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2340'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2340'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2340'> &#9;&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Goldman Sans' fontsize='15' indent='1620' italic='true'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run indent='1620'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AC766DDF-E18E-40EA-AD35-197083677350}' />
    </worksheet>
    <worksheet name='Proposed Freeway &amp; Freeway Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(1) Freeway&quot;' />
              <groupfilter function='member' level='[none:Calculation_2292121123807895553:nk]' member='&quot;(3) Ramp&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13271937.902321221' min='-13753700.120825248' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4692606.0772266416' min='4430100.0181000195' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]&gt; (TomTom)</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2430'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2430'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2430'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2430'> &#9;&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Goldman Sans' fontsize='15' indent='1620' italic='true'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run indent='1620'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD38C6D0-76BD-47B9-82C0-9E6B72E8200D}' />
    </worksheet>
    <worksheet name='Proposed Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Goldman Sans' fontsize='21' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.1bipr070cl66dk10c05px0wytpf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bipr070cl66dk10c05px0wytpf5'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2292121123807895553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4115445655606607874]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#13;&#10;ELSEIF (CONTAINS([osm_ft], &quot;residential&quot;)) then&#13;&#10;&quot;(7) Local&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Tom Label' datatype='string' name='[Calculation_2292121123810131970]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield] + &quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Calculation_4115445655606439937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes] and [osm_ft] == &quot;motorway&quot;) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot; or [osm_ft]==&quot;service&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4115445655606607874]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Calculation_4115445655606439937]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Calculation_2292121123810131970]' derivation='Attribute' name='[attr:Calculation_2292121123810131970:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_ft]' derivation='Attribute' name='[attr:marin_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[one_way]' derivation='Attribute' name='[attr:one_way:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_ft]' derivation='Attribute' name='[attr:osm_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tm2_ft]' derivation='Attribute' name='[attr:tm2_ft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_ft]' derivation='Attribute' name='[attr:tom_ft:nk]' pivot='key' type='nominal' />
            <column-instance column='[tom_name]' derivation='Attribute' name='[attr:tom_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Marin Ft' datatype='integer' name='[marin_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-Freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (6)' />
                <alias key='11' value='Minor Arterial' />
                <alias key='12' value='Major Collector' />
                <alias key='13' value='Minor Collector' />
                <alias key='14' value='Residential' />
              </aliases>
            </column>
            <column caption='Marin Lanes' datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2292121123807895553]' derivation='None' name='[none:Calculation_2292121123807895553:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Two Way' />
                <alias key='1' value='One Way' />
              </aliases>
            </column>
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column caption='Osm Max Lanes' datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column caption='Osm Min Lanes' datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column caption='Pems Lanes' datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Max Lanes' datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Min Lanes' datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Sfcta Name' datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4115445655606607874]' derivation='Sum' name='[sum:Calculation_4115445655606607874:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='TM2 FT' datatype='integer' name='[tm2_ft]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Freeway-to-freeway (1)' />
                <alias key='2' value='Freeway (2)' />
                <alias key='3' value='Expressway (3)' />
                <alias key='4' value='Collector (4)' />
                <alias key='5' value='Ramp (5)' />
                <alias key='7' value='Major Arterial (7)' />
              </aliases>
            </column>
            <column caption='Tom Ft' datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
            <column caption='Tom Lanes' datatype='integer' name='[tom_lanes]' role='measure' type='quantitative' />
            <column caption='Tom Name' datatype='string' name='[tom_name]' role='dimension' type='nominal' />
            <column caption='Tom Rtedir' datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column caption='Tom Shield' datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2292121123807895553:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]' field-type='quantitative' max='-13553997.335087571' min='-13589143.174486669' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]' field-type='quantitative' max='4497022.0311913779' min='4476319.6878460515' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Goldman Sans' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
              <lod column='[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]' />
              <tooltip column='[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]' />
              <geometry column='[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_name:nk]&gt; (TomTom)</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:Calculation_2292121123810131970:nk]&gt; (TomTom)</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2250'>Proposed FT:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Goldman Sans' fontsize='15' indent='2250'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2250'>Proposed Lanes:</run>
                <run bold='true' fontcolor='#004870' fontname='Goldman Sans' fontsize='15' indent='2250'> &lt;[federated.1bipr070cl66dk10c05px0wytpf5].[sum:Calculation_4115445655606607874:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>Legacy:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tm2_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>OSM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:osm_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TomTom:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:tom_ft:nk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Goldman Sans' fontsize='15' indent='1620'>TAM:&#9;</run>
                <run bold='true' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:marin_ft:qk]&gt;</run>
                <run indent='1620'>Æ&#10;</run>
                <run bold='true' fontcolor='#4e79a7' fontname='Goldman Sans' fontsize='15' indent='1620'>&lt;[federated.1bipr070cl66dk10c05px0wytpf5].[attr:one_way:qk]&gt;</run>
                <run indent='1620'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bipr070cl66dk10c05px0wytpf5].[Latitude (generated)]</rows>
        <cols>[federated.1bipr070cl66dk10c05px0wytpf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D58C669A-2F8E-426E-8104-C9560D356F4B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Proposed Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='color' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{31B3FE31-5FEA-4B15-B67E-811A93316FC5}' />
    </window>
    <window class='worksheet' name='Proposed Freeway &amp; Freeway Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='color' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7D74AA1C-10A0-4313-8D71-81CBEDB35A43}' />
    </window>
    <window class='worksheet' name='Proposed Expressway Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='color' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AF037347-7EB7-41D8-B38A-5D516EA3CF4A}' />
    </window>
    <window class='worksheet' name='Proposed Arterial Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='color' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{786C27E3-6911-4EDE-99C2-2BFD5F4BBCBA}' />
    </window>
    <window class='worksheet' name='Proposed Collector Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='color' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{8247E3C4-60C9-4931-9C43-48A9D0854E01}' />
    </window>
    <window class='worksheet' name='Proposed &amp; Existing Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28B63AA2-1F91-4952-BB18-9190DD90CF73}' />
    </window>
    <window class='worksheet' name='Proposed &amp; Existing Match Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BD67EFD-3A9B-47C6-A50B-396D0D680564}' />
    </window>
    <window class='worksheet' name='Proposed &amp; Existing Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]' type='color' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{DB63A046-2E06-46F4-9DD9-E793442FACAE}' />
    </window>
    <window class='worksheet' name='Proposed &amp; Marin TM2 Table'>
      <cards>
        <edge name='left'>
          <strip size='230'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]' type='filter' values='relevant' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805189636:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805378053:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:county_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3765205B-2E42-40D4-B160-736E03179B69}' />
    </window>
    <window class='worksheet' name='Marin Map'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]' type='filter' values='relevant' />
            <card param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[clct:Geometry:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123810131970:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805189636:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124805378053:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:county_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:marin_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:one_way_string:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:sfcta_name:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:shstReferenceId:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tom_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{B1153176-5B82-47F6-B3CC-F98CCE1E46AB}' />
    </window>
    <window class='worksheet' name='Proposed &amp; OSM Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121123807895553:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:Calculation_2292121124799283203:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:osm_ft:nk]</field>
            <field>[federated.1bipr070cl66dk10c05px0wytpf5].[none:tm2_ft:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58B848CC-525E-4803-A8DA-32BE353837F5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Marin Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Proposed &amp; Existing Map' width='192'>
      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
      VAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Proposed &amp; Existing Match Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dZ3Acd5rn+W+WN6hCASh47x1BAvQG9KQoUaKkVs/sdE/vjG5M7Jm4uHtz
      F/vi4i66d+/Fxby43rm9i+jp3o3uuNmRuuUoURSdCJIASQCEJQzhPVCFAgpAGZQ3mfcCEiR1
      kzN9rWILUuXnHQpZmQ+y8lf1L/wznxQkSZKQyZKQIAiC4psuQib7JskBkCU1OQA7TDQcwufz
      4fcHEMXEjk5j0TBx8fdbVoxFica2Fo6Egvh8Pnw+3/ZjAEgikWjsix8liXgsRjwWI/YvbEgS
      44QjUSRp63mRSIQvD8YlSSIWi335GZ8tk9h9Igdgh/nwH3/Gnc4uHty5xvWHgwldd8eHv2Bk
      7fdbdq7vJi19CwD8489+SkdfH319fax5g18sJIZZcbq/8rz33v4Nvk0X3kDkn11/eHWCf/u/
      /u+sBWJEPbP8b//+PxCJf2kBycU7v7n1pQdE3vnNr0n0F1ZVgtcn+7qUBg4da0a3Mc3lh1P8
      X//HVXadOM/KxAAagxFDThUT969SUFNHWJ1JQ0aYAVuAYCBCU6mJ8dUQqRkF1Jj9PJxyQVzk
      +N5S2nomWRwc4vWTW5t53PYJ42tRlhweXtubxpXHPrSRNS6+/gotN9uIrI9TeGbX1sKCAq1W
      ixYlasnHL37+LrnmOAWNhxgeWED0LpJiSaOyvoGe/j4K8tIJ6zPpvHeL4swUio6+ynLvXeJS
      mKVoFv/z374BSKQbtQyOzWPyzpCda8Ix0U3rwDy+VRtHzxygb3CU0twYC644Rks2wbVFPr5y
      Gcemin/zr19FSMDulj8BdpqYj7u3bvJobJVXL5zAlFPKmdp0Ng3lvPH6yyyMD2POq+B7b/wp
      OOfoGlnk1T/5HsVqP35jOn63B7VSSduDDkxmPSH3Gvc7e2i+8DpnDzd+aUMKYvEoS7YlJFHk
      4IkX2F2WRl/HA0qPvMTF8yfQfHaECUodpeXllJeXYk7N5HCZmnuLavYUpSKiwpqqxx8RMaTl
      UFleToZJhSRBSf0+Xj93gNGudnzGcl5/9RIW7RdDo5zSSuafdLMaBJMS4pICQYwS9K4ipOVS
      XlzC3JyTl197nVfOHkKTls+lV7+H4F0kRmLIAdhpVCmcfuECL5w9SXqKFqVSBSlWcM8zOTGO
      MSOHdfsc09MTRHSplGToGBmZxu6XyDSZOX32FLNDj8kvLiG3pIb8/GzqKkuYHBvlycT09mYm
      p+dpbGqCUIAooFQqAcgsLMM+MczIyCjR7fHG1ng8FosS9LnonvbRkOZnyukHSSS3fDf7q630
      DUxCPEIwvDWW+Xyd6tRsBN8y05Mj+KJfDDqU+gyEjTF0mcUALMxMUlzXiF4lEYtJxMJ+zClK
      Jqbm6O0fRlAqtutJFEGeB9hZnI5lUjOz0SgVIImsrK6TnZ3J5rqD2WU3VVUl/PLnP6f5xGlK
      qmowqkTGx8ZIyysjQw9jE9Ok55WQl25gfHSUlKxi8q0pzE5OEENJfmk1Rg343U6mFlYwm0xk
      pBtBnYoU3EBpTMfrmMMbFsnKLSbdrMM+P4Fj3QdARlY2Go2BzBQBpy+KAjVC1MXyRpDq2hpc
      tmkkjRm9wUA0FiPDqMTpDjA+Nko85MGtyuWNc4cQI35WPFH0BFGbs/Cur5CRZmZ8chpTqgWL
      NYf1pVlyigqZn5rCklOMUgyTlZWFY9lOdl7+1373FgRBkAPwbSOJzMzOU1paipCIQfAfhcT0
      k34cPoH9+/agVe2MgYccANkfldfrxWw2f9NlbJNngmVJTw6ALKnJAZAlNTkAsqQmzwTvYAtP
      OugYd2LSqajac5iK/PTt33V3PqLp8KFv5AWMR8N0tLUwvbhCRmY2DQeaKc76///ldnNjldb2
      HnySlnOnmrGatL/3c33rNobsUY40lPCkt4PeKQcAGQUVvHys4YsFJYlINIZGo95+KBJYp31o
      FZADsKM5bbMUNrzI0cp0kERG+zuZsa2z6+BxJscmyM42MTw6T3n9XrI0fjr7xyip20ttSc5z
      rUup1tJ89iWm/vPPOXX2BYTQKjevPiQ3Lw1d3i4M7lnIKsY50c+KX+DE8WYMmq8ONsTIJv/l
      N1c4cOYF9JuLfNr5hKMlOhbWA2RmZbM0PYEmo5DDNTk8Gpok6vdRvnsf5rib9oEp1BEPQmET
      ACVV9awuL7GgKuHormL6ujqxb4ocO7ibx50PGNtQ8ifNlXQMTFGxaw9m7xSOQAogD4F2NjFG
      z4MWrl27g8fvZtrmwqh088mtRwC032shNa8Eo1ri/Q+usqupiYfXP8Yf/xfWm2BBzxLOsIlM
      YZ3pFT/2yRGGHz+kdz5MTVqQj+4N/85z1m1zkFFOeaqAbVOipjiLro5OfOiR/GtIhlTu3mnB
      tjDN/e4xCLtpH5zgrV9fISM7jY7H05QXZAFgNJlwrnloqC3HNTtI2/gGxsgq1zsmcK2tUlNb
      zeTULCa9wM22XibnbFSUFAByAHY2hYr9zWe5ePEM2rCHObuT/OJihPjWEX7pB2+i8szx0fV7
      bPo2mZ+ZJTXD+o2UmpGehkIhEPvsdOhI0Ifbtc6SK0amRfc7ywsKgVDAT1yhJrA6x8zqBmsB
      FccbyxkamkQZ9xBTWXDYbBw+dRqNIFKYqWUtrKcq34oxLZe89K31SnE/i644RZmpOFaclFZU
      olVIqDVKPF6Rmjw1A7MuXKvLpKWnMrccoCTfAsgB2NFSrXmkGbfGrpqUDHJTNQyP2rBmGcnN
      z2O0rwuHJ0p9wy4uvXiaVecqaQVlGJR/nPryCwpRKgQ0ulSs6SlYK/bjHmllzh2nas9x6nPU
      rGwEqK0q/p3nWotq2Jev5B/fv05An8fJKis5VfUYNUrSzFpmF9bZVVdBVGGkrjiNmMJIbWUt
      R+tSee96O1UNteg+mwmP+PwUVNWTZlDSdPgY62MdjPtTuXioEku6gfHZNbSiD1dEQ3leBmml
      5Vg/O9NPngmW/dHIM8Ey2Q4jB0CW1OQAyJKaHABZUtueCBNFkVAo9E3WIvuOC4VCqFQ7a+71
      K9UI354rLGTfQoIg7LhjbDsACoUCvV7/TdYi+46LRqM77hiTvwPIkpocAFlSkwMgS2pyAGRJ
      TQ6ALKnJAZAlNTkAsqT21Gk5SYwyMb1IVUUp80+6MJYeIuKcxJRdilmvQhLj3LjyDpImFV1K
      FsdP7Ef9tBXJ/mCLi4sIgkBWVhYff/wxaWlpNDc3o1ar6evrY2VlhUAgwOHDh3n8+DEnT55k
      fX2d/Px81OrEvhqSJDE4OIjdbufYsWOYzWamp6dRq9UUFRUhiiI9PT24XC5Onz5NX18fCoWC
      pqYmbDYbJSUlCa1lYmoWk8lIqslEW0c3VRWlFOTl0N7VR1pqKnt21SAIAh7vJu1dfdRVV6BU
      KplbtHGwqQHn2gaft9V76ifAwmA761EdC8Od/Ozn/5m1IFj0Eq2dQ1tFiCLzK15evHiRMyf2
      Yx99Qsvd+2y4Vrh98yZTtnXikQAP796id2SGuckRfKEwff1DiMF1RmeWGe55yM3b93BtrDA8
      aSPsXWFycTVhO+rbbGlpiX/4h39gaWkJm82GXq/nyJEjqNVqBEFg37597Nq1i3g8Tm9vLwaD
      gfb2dmZnZ5/LqQbxeJyHDx9SUlJCZ2cnwWCQX/3qVywtLQFbpzgIgkBqaip9fX0MDg4yPDzM
      48eP0Wp//wvd/yWSJHHlegs/+9VbxGJxLn/yKRqNmg8/+ZSWtg5cbi83WtoIf3Yjjfev3ECt
      UnH5k0+5+6CTlRUn80t22rv7yczYajDw1AD0js5SXZxJfu0BLhzbDYAxu4z1uUE+v9x03TbF
      9WvXeDw2z2jvPTIrG7n+/vs0HDpKx/WPuHPtPVRF+1gbvE//4CCPR8Z57613GOjtwL6+yqIX
      wkuPuTNkp6O1heGeTnyxP9KlTDtcbm4uly5dAiAYDBKPx3n77bfZ2NjYXubu3bucO3eOpqYm
      1tbWiMVipKam8uTJk4TfRUUQBOLxOLdv3yYzM5PW1lb27du3/XuDwUBDQwN9fX2kp6dTWlpK
      Xl4ebrebiYkJNjc3E1bLgb27KS8pwqDXsWhbZn9jA5FIlKGRcQ7vb0SSJCQJPN5NNtwedtVW
      EYvFqK4ow5Jqpm/gCWUlhaw4t+4U8tQARMIRlILwW+8mShSI2wHIyK/gpYsXaawpRq02kZGR
      wrrTwaOHD0BrwLm6xvjAI9ZDEpW1VXS1tnDkUA1vt9moMPmZmXeQm59PHC05RoHOaSdVBelP
      KyfpfN5WHCA9PZ0XXniBwsJCnE4nsHXios/nIy0tjaKiIi5duoTBYKCnp4fBwUECgUBC6/H7
      /VgsFt588006Ozux2WzYbDZmZmaQJIlQKITb7eYv//IvefDgAefPn8dqtRKPxxFFkWvXriWk
      DkEQ0KjVGAx6FAoFarWKyek5SoryQZLweL2YTUZ0Wg2hcBitRsPU7DxV5aUcaGogFA5TU1nO
      1Mw8re1dwDMCUJ6fic3tB8Ccno1OBfHAKsqUvK2x/mdj08+Z061oFHDhhXNEIyEsOUVcuHgR
      TTSIymylrLyaNJ2Jo2eOUpydTUZGDmZ1hCn7OiYVHNiVR9RYjEG9s06U+ialpKRgNBqJx+N8
      8MEHbG5uUlBQwMLCAqFQiJKSEhSKrZdvamqKffv2kZubu3UnlwQOOwCMRiNGo5EbN25w5swZ
      /uZv/oYzZ86we/du7HY74XCYtrY2rl69yrlz54jFYoiiyN69e5mfn6empiZhtbg9XmqrKjCb
      TRQX5tM7MMzLL5xm355d3G5t57WL57l68w5qlYqMdAsTU7OcOXGY2flF8nOzKSspRK1SUV1R
      CjzjmuBYYI22/gXOHNu7/djUQAdCTj3l2Ym9plMUw9x87x2qz3yfMqshoeuW7Sw78Zpg+aJ4
      2R/NTgyAPA8gS2pyAGRJTQ6ALKnJAZAlNTkAsqQmB0CW1OQAyJKaHABZUvtKY6xwOPxN1iL7
      jotEIgSDwW+6jK/4yrmz8qSw7HnaOlNzZx1j8hBIltTkAMiSmhwAWVKTAyBLanIAZElNDoAs
      qckBkCW1ZwRAIhAIEA0HsNuXCUXihIIB4uLW/3AlScLp2Low2r7sIBrfWf/b/baLx+M4HA6C
      weDWvnY68Xg82/9Dj0aj2O12gsEgsViMlZWV7Tv8iKL4XGoKBAI4HA7in92k2+/3f+V/+j6f
      j5WVFSRJwuPx4PV6kSTpuUx8hcJhwuGt1icbLs92GxSPd5NA4IvtiaLIhstDJBIlEo3icm/V
      FIlGCX52N6SnNpHxr07TMR0g6hgjq6iYe+0DHK9LZ1VdyL7KXCQxxttv/RdOX3gFpVKNJS0N
      JDVSPIqgUBCLRUFQodcoCYTCqNQapHgEESV6nYZQIICkUKHTqgkGgihUGpSChEqtIhKNoVEp
      iIoCUixMTBTQa9XERAG1UiIqCmhU3+32KR0dHcTjcZaWljhy5Ah9fX0EAgHeeOMNjEYjN2/e
      JCcnhzt37pCfn4/D4aC6uhqPx8Px48e3L5ZPlFgsxuXLl8nNzUWv11NaWspPf/pTfvKTn6DT
      6QiFQrz//vtYrVby8vLo6+tDqVRy9uxZvF4v9fX1CatlbsHG+1dvcunCGTZcbvqHRjAZjexv
      aqClrQMkif/mr36IQqGgraOH0Ykp0tMspBgN+PwBTjcfoufxMPv37AKeEYCurgFqmi9ScGQ3
      8bCX/oFPyK8+TutvbrK38g0AIkEfjuVltHoLGYZpbnXNEnbaaKhIp9MOmZKXE8f38rPL3fzJ
      yXqGpx2k4Ke8vp7O/lkKc1Ipz9bzaNKNNT2V+MYCuw8f4Ze/vs5/daqU8UgWy/PzpMRcZNbu
      Zn7ezbEisKXsork2N2E7dCdqbm5mZGSE2dlZtFotLpcLURRRKBQIgsArr7xCPB6nv78ftVrN
      5uYmdrudurq659IYy+l04nA4MBgMVFZWEggEKC7+4u7vCoWCWCyG0+mkrKxs+5NhfHycM2fO
      JKwOSZKYXVhEqVCQbknl+u1W3vzB9/jl2x/Q+rCLl8+f4sqNFkLhCEqlgsEnY/zZ6xf59YfX
      KMzLQZIkhkcmKCnMJyszY6v2p21ozeXBpNUQC/u4/Jv3OP7iSwhKA2opSPSzZSw5JZw6fZpj
      h/eSVViDYuEBlvqTmDQpNJ8+zcmmYsbmVqnedRBpYwmfKKFWq3CF1KQIPlxuPwZrPqJ/Da/H
      R1mhlYfdwxSkaLkx4mVvZTpKKYpv082mlAr+VfpnV9ldlvW0kr9zqqurEQSBnp4ejh49SmZm
      JmtrW82cRFHk/fffp7m5mWPHjvFXf/VXGAwG7t+/zy9/+UsikUhCa4nH45SXl3P27FlaW1sp
      KytDp9Nt/97j8WA0Gjl58iTj4+P89V//NSdPnkSSJH7xi1/Q1taWkDoEQeDg3j2YTCkICgGF
      QoHPHyDFYCAQCqHTaZAkCb1Oi8e7iU6rZdPnx5pu4Xsvn6ehtgpBoWBkfIoPr90GnhEAi8mI
      Lxzkg1/9Ak1BLepYAOIhYoJ2+yMjuLnBzPQ00zOz2GeGEYuOsTnehje8SV93P31jy1QUWVEI
      Anll5aSbUknRazCn6CmqasAk+bCteaje1Uh4Y4WMskpGB8Y5erAIu0cgsrqI0pxHik4gFoXG
      AgNzYRMpmu/28Ae2ur51d3cDYLVasdvtRCIRVCoVbrebd955Z7v/jyiKzM7OUlZWBoBarU74
      94DMzExCoRD9/f0UFBR85XderxdBELa/l1gsFiRJYm5ujvz8fKxWa0IbdTlWnORkWjF+dq+x
      KzfucOrYQSxmEx9+cpuDe3fT3T8ECITCYW7de8ixg3tZXdtgwbZMfXUF8biI6rPmY9ttUb58
      m1T34hP6lhXU5acQisZRag1ofEtMhTI41lCMJEk4bPOEY4CgINWUgtZoRgxtMtHTil1fzsGa
      YrLMGjwhSDVq2XA6CKElN9PC6rINUWUkK8PEyvIyKoOFzLQUXBseUs16vIE4FpOWZbsdlc6A
      Vqtjqe82ntzjHK3KSNjO3KlisRjLy8ukpaVhNBpZXl5Gq9VisVjw+/0EAoHtW47m5eURDAYx
      GAx4vV5isRjp6ekJvRujJEn4/X7cbje5ubkolUrcbjdms5lAIIBOp8Pn8+Hz+cjLywO2+oXq
      dDqWl5fJyspCrVbj9/sxGo1fq5ZgKIwkieh1Onz+ANFYjLRUM6FwGJ8/QEaaBbd3k1RTCv5A
      EFEUSTWbCARDqFUqVGoVGy43JqOR9PQ04akBAAmXy01aWtr2hr0eF/oUC2rlP79j/e51YhoT
      qQbN1/pDv0yMR5ids1FaVoJih91mU/b7S0QAEsloND4rADJZ4u3EAMgTYbKkJgdAltTkAMiS
      mhwAWVKTAyBLanIAZElNDoAsqW2fOSX8zj3BZLLEUiqVO+4Y+0oANJrEzd7KZL9NpVLtuGNM
      HgLJkpocAFlSkwMgS2pyAGRJTQ6ALKnJAZAlNTkAsqQmB0CW1J46LSdGvHQOzGGR1hhdcpFT
      1kiOyoU+v568ND1iPMav/uHvySmpZWPDzflXv0+2WfvHrv07a3Fxkc7OTrRaLY2NjXR2dqJU
      Knn11VdRq9VMTk7S19dHeno6hYWFdHZ2cu7cOZxOJ/X19QmfbBJFkatXrxIIBDh+/DiTk5O4
      XC7cbjdvvvkmkUiETz75hFAoxLlz53j48CEKhYJz584xOztLQ0NDwmqJxmK0tLZTUVqMQa/j
      /as3adxVS0NdNe9duYE1PY3XLp5DEATmFpb4+OYdDjTtRqNRM79g4/ypY0zNzmNJNQPPCMBQ
      Rxum8mMYY2ZerjPw1odtHPreUd691cEPv3cGJImIMoUXL15koedT+scXSQvMsLruJrPmCGsj
      d0GlxxtRoxKDHGo+TmtLCykGPTWHzlFXlJ6wHfJddO/ePYqKilB+1rng9ddf5+rVq6ytrZGb
      m0tvby8nTpzg448/xu/3U1hYSG9vL1lZWc9lplWSJBobG1ldXWVhYYGTJ09y+fJlTp48iUKh
      QBRFmpubicVi3L9/n42NDdRqNd3d3Rw4cCChdfzTOx8xOjHNnvoaPrh6i4vnT/HelRvML9rZ
      XVdNa3sXwWAIrVbDR9dv8+LZk3x8o4XsLCtajYap2Xlsyyvs2VULPGMINDbvoCDdRHFxIZNP
      RhCUWhSGXKLu+e2+QOu2KT5695/4oHOBfVXZrK67UKtiPHjQjd2+wfHzZ/GHghyry6RveBKP
      ZObSpQt0tbUgN1L859ntdioqKhgeHiYjIwOXy8Xa2hpWqxVJkkhLS6O1tRWFQrF9EOp0OoLB
      ILdv3054WxSlUklOTg4LCwvEYjFCoRArKyuUlpYCYDAYSE9P55NPPuH48eMcO3aM2tpaotEo
      N27cYHZ2NmG1/OD7r1CYn4NarcLn92MxmxAQWLQvU1yYTzQaQ6VW4XJ7EEUJo0GPRq3m+OH9
      FBfmMzE9R0qKkb6BJ8AzAqBUKBClON2PuqhsOkTU4yAuikgIfN6TISO/gldeew2T5MPr3WBp
      PUxTXQWiJKJQqVApVOgNWkBAkiSikRCRkB+UO+tckJ2opKQEvV6PWq3G4XDw4Ycf8ud//ueo
      1Wpga4j02muvbZ9ctnv3biwWC1NTUzidzoT344xEIvT399Pc3MzCwgIOh4PCwsLt1iuRSIS3
      336bU6dOkZ2dTV1dHZFIBK1WS2ZmJo8ePUpIHYIgsOFyY7GkolarkYAHj3rZs6sGlVLJ4Mg4
      hQW5bG76icbiiHGRju5+GnfXkZeTxaLNzt7d9aw61xidnAZA+eMf//jHv70hVdDJciyNgpQo
      D7sG2HP4JBbWmPfq2FVRCGx1CysqLqO0IJ2ltThZ+ghL3hj5WTkU5WeRX1CAJEFOZgZqlZrH
      AwNEo3D87BlMOnVCdsh3VV5eHl1dXVRUVBAMBolGozgcDtLT01lbW6Ompob29naqqqooKipi
      eXmZ6upqFAoFRqORsrKyhPYFUigULC4uMjMzw+nTpxFFkczMTCwWCzabDb/fz8LCAsFgEIVC
      gdlsJh6PU11dzdjYGEeOHMFkMhEOh9Fqv953Re+mn+zMDHKystDpNMTjIqebD5FpTce5tsFL
      Z0/wZGySooJctFo1Go2GY4f2sbK6RmF+Lrk5WXi8m+yuq+Y//PT//Ml2W5Qvk+IhBkbmaGyo
      2X5sYWIYY14VGSl/wDt4yM2dvlnOHG36Wn+87NvN6/ViNpu/6TK2CYIgPDUAMtnzsBMDIM8D
      yJKaHABZUpMDIEtqcgBkSU0OgCypyQGQJTU5ALKktn0ynDwdIHveJEnaccfZVwIg3yBD9jxF
      IpHnct/gr0MeAsmSmhwAWVKTAyBLanIAZElNDoAsqckBkCU1OQCypCYHQJbUnhoASRKx2exI
      QMS7yvTiGk6HjVB0q9uAJIp03LvOrVuf8mTahiTGmJ1f+tIaRObm5rZ/WpiZIBD53U4FQZeD
      OYd7+2ffho3+JzNfWWbT7cQfjv9ujWKMufnFr3SYWF+awv0dmctzu92sra0xMzPDrVu3uHHj
      Bm731r4KhULcvXsXu92Oz+ejra2NSCTCysoKsVgs4bVIksT8/Dz3798nHA6zuLhIS0sLPp9v
      +/dPnjzh/v37xONxxsbGGB8fJx6Ps7y8nPBaVp3rrG24iMVi9A0+YW3dhSiKjIxPsWBb3p5t
      Dkci9A0+YcPtwe3xMjSyVZPb42XFuQ48IwDOyV5m1mMgRrn61n/iwfACmqibh32TnxURZ2Rm
      mXPnz+Kd7GBwbgOVUsH8/AISEgsLiyhVKqR4mN7ODlo+/RR3IMrUyGNGppeQJIm58UG6Htyl
      b8qxvd3e9lZut7Tgj8Hqio3Hfd289Z9+Tt/kMhvLszzqHSIajzM/Ncrg6AwqlYpowENXRzuz
      9nUWhh/h8Cd0f38jVlZW+Pu//3tmZmYoKyvj9OnTLC0tbV9QfvXqVWpqarhx4wb37t1DFEUe
      PnzIyMjIdi+hRIrH49y6dYvMzEza2tqYmJjgwIEDXL58GUmS8Hg8eDwesrKyuH37Nh0dHTx6
      9IjR0dGEB7Kto5uf/uxX+ANBPvm0lUWbg3c+vEZ7Vx+Ph0Z576MbRKMxJEnio+stLCwt895H
      N7h19wGzCzZsy6vcud9JqikFeEYAuoenqCnLYXawA0vRVgOh1IIqlif6+Mr7uKCgZlcVi5OT
      tLV309l6B9faIm1dT3hw/yGtVy9jKCwnsOlhfrCNsTUB9+h9Hjx6QM9cCJ0Q3V6VGHEzvabi
      4t5sesbsDNy9TsRSSGF+Nun6CJdv9VJsCXOl5RHXPvmUvFwr9zs66el8iM5k4p23fk2U7waL
      xcKFCxe2f+7p6aGxsRG9Xg9sdY24efMmAFVVVdhsNoLBIDk5OdhstoSfb6NQKJAkidbWVnJy
      cjh79izr6+sYjcbteo8cOYLNZiMzM5OMjAwsFgsrKyv4/f6EnWIjSRIFuTmUFOaTYtAzM7fI
      6eZDhCIR+gZHONV8CEEQiItxfP4AjhUnRw40EY5EyM3OQqNW83h4hOqKUgLBrZqeGoBIJIpS
      kAirrRyqL9p6UFCiIP7VAEgSyzYH6ZkZAByoK+CXb1+hvqkRkHD7I1gtZqwZqWy61pgcG2Js
      aobFJQcGswVrViafv1+Ndnei0ClY9Ij0tbci6SwU56Sj0aghHmRhZpqegRFWnGukZuaQkbJ1
      MLjX11hd3yDsD/C7A6VvJ61Wu30zOUmSmJiYoL6+fvvnsbEx3njjDQRBoKCggJdffhmr1UpX
      Vxetra2Ew+GE1hMMBlEqlVy6dInx8XEePXrEzMwML7/8MoIgEI1GuXfvHnq9nsbGRi5dukRh
      YSEajYaxsTFaWloSUocgCJjNKZhNKahUKgQB+gaeUF2+1aBrbmGJTGsaoXCEQDCEQqFgYHiU
      uuoKDu3fg8Ggo7gwn/GpWe7c7wS+1BdIkqTtjytVYI0VKY3d1cUIUpy4KgWryt9drnoAABRC
      SURBVMW8R0tdeQEAK/MTzC0uIxnzOLingnhcon7PLtYdPg4d2o0Ui3P4UCOdDzoR9BYOnziD
      KuQhJa+aF8+fwjM/zLI7QmFpBdlpRpaWVzl59jy1NTVoQ+voMvPJzcnGrFWwEUlhT3kavpie
      06eb0SoV5ObmEI2L5FpT2fCGyM3JprC4kDRrHsbvQO+teDxOSkoKqamphEIhSkpKiMVi2O12
      qqur6e7uprKykoKCApaXl6mqqgLAZDJRXFyc0L5AarWaeDzO3Nwc+/fvZ3h4GI1GQyAQQJIk
      /H7/9vDr875AwWCQqqoqFhcXaWpqwmQyEY1Gv3brRo93k6zMdHKyMlGr1QRDYc4cP0xGmgXH
      qpMXTjczMj5FQV4OKpUSBGg+vJ9V5zrpaRaKCvLwen3UVZfz//zf//GLvkCiKG5/VEnxEIOj
      8+zZVb294YXJEYy5FX9YXyCZDPD7/dvDpp3AaDQKTw2ATPY87MQAyPMAsqQmB0CW1OQAyJKa
      HABZUpMDIEtqcgBkSU0OgCypyQGQJbXtvkAKhQKDwfBN1iL7jovFYjvuGJM/AWRJTQ6ALKnJ
      AZAlNTkAsqQmB0CW1OQAyJKaHABZUpMDIEtqz+gLJGGz2XDZp7h27RpdQ1OsOpYIx77oCzQ+
      MYEEBFzLLHypt882McbYxBTLi/P4o19cru5enmUjsLWe3+4L9OXtT4yNb1+AL4kxHrV3EvlS
      twMxHsG57nrqH2VbnCMY+dIl8iEPU4tr/9x+2FGCwSB3795leXmrx01nZyfj4+Pbd1jp7e3l
      2rVr3L59G5fLxb1794hGo6ysrBCNJr43xufHw507dwiFQqyurnL79u0vLqGVJMbHx2lvb0cU
      RUZHR59vX6C1ddbWN4jF4vQODLO2sdUX6MnYJItf6gsUiUTpHRjG9VlfoIHh0e2+QI5VJ/Cl
      meAvc050MRHIRjnfTcPZf0WhSYl7fojWnk1eOFyLJMa5e/culVVVuG0j9DmzkAJOHCvrVO/Z
      hybqYujJJA/6x/jL77/EumMJIauA2KaDzagCswDz40PMjg2watmLRfAyvuSmcc8u4r41Bsbm
      6e7u5b+rqUYB+FYmaL1xGa+pjNOVeiYnp1l1THD3SYz/5b99lcHHwxRUNaCLeJixr5BqzURB
      nPGhAXxSCk35Ig8ee6kotCb0xXhe+vv7qa6u5qOPPmLfvn0IgsDAwADp6elkZmayb98+nE4n
      n3zyyfZlhq2trQCcPXs24fWEw2Fu3rzJ+fPn6e3t5fHjx/zwhz/k8uXL/OAHPyAQCLC4uIjB
      YKCnp4fHjx+jVCoJh8OYzeaE1nLv4SOuXG/hf/g3b9La3kU8HqetvZu9u+uYnlvEseLkf/rv
      /xa1WsW7V66jUipp7+ojzZKKXqclNdVMZ3c/r710DnjGJ0DnwAT1FXm4fT567n3Mb67cwVxU
      jX20h9/t7yZAPMxb735EUbaadz76lMvvXyUvPxOP28dA5wOmxvrpeDLHp1evMzv8gN6+Lton
      vajiIcSIi19/eJd8c4QPrrXywQfXKC5IZ8P1+a10JLoedHLpv/4fmWz/FP/6Ap/2jFNVWkhu
      VhbX3vs1hux8bn7wPo87brAcMTPU28bEcD8za2GGWt5maDmS0BfheTt69Chra2sIgsDCwgKV
      lZVYrVYcji+aiN2+fZsLFy5sd14IBoPk5uZit9sT3hfI6XRit9u5f/8+CoUClUqFVqtlYWEB
      URQxGo00NzfT29uL1Wrd7gvkcDgIh8MJ7QuUm51FSVE+KSkGJqbneOH0cUKhMN39Q7xwuhmF
      QkEsvtUXyL68wsljBwmFwuRmZ6JWqekbGKauuoJgaKt1zFMD4PcH0SgVnLz0r3j9lUv4lqeI
      iWpUQowYgMBW3xoJolEJY4qe3IJScnOyifmdBEQDBflF5GdZACit38P4oxY2FBYyNALrDhvZ
      BaVU1lQhBJwsLq4wOLGEDj8BhZHcvBIKskwAxMMehmbXmBl4jGt1lpXNCHlFpaSajGg0GhaX
      FhgfHkKhVhGTFJSUlaERBHybblZXneh0WoLhxLcLfJ68Xi/19fVotVqCwSDhcBhRFLc7w0mS
      xPr6OllZWdTW1vKjH/0Ig8FAe3v7V4YmiaJSqaivr+eVV15hdHSUpqYm2tvbMRgMCIJALBYj
      FovxF3/xF9y/f5/vf//7VFVVEY/HefLkyXYTr69LEARysqwY9HoUgoBapcK2vEJOtpVYPE4k
      GkWr1aDXafH5A+i0WmzLKxQX5nPm+BFSzSnk5WTzZHyKG3fagGcEoCDTwpo/SP/9m1z+6ArW
      0l2o4m5ETRpqQFCoqMpL4+OrV2kfX2dPdT5arQYEBVq9lao8Je9/+BEOTxiVRoPGlENqzEFh
      9R6UKg2luw6yNNjC9ZZONOllNFVnEgoGScuvpMoKH1z+EMfm1kG7OjNC6aEXefniRf78xX10
      Dy+gVatQ6lJxOeY5ePgQ0XAYQW8h1aBFqRBQazSolArisRBrHh/hcASt+qmjvR1paGiI9957
      D7VazdmzZ7l+/Tp2u53c3FwWFhYIBAKkp6dvt0EcGRlh9+7d2yeaJbo9YmZmJtFolKtXr9LU
      1MTc3Bwul4vDhw+zvLyMx+Ph3Xff5dq1a+zfv59YLMb6+jr19fU4nU4yMjISVotj1UlJYT5m
      01aDrBstbVw8f4rykiLe/fAaL509wdWbd1AqFSiVCh509HDmxBFm5hcRBIHqilKikSjZmVvD
      4e22KF8Wdi/S0u/g4ukD249N9rYSstbTUPztGEfLdh6v15vw7wRfhyAIwlMDABKSxFe6i32+
      WCI7jsmSy04MwDPGBQK/fZzLB77su0ieCJMlNTkAsqQmB0CW1OQAyJKaHABZUpMDIEtqcgBk
      SW17HkCSJCKRb9dJY7Jvl2g0mvD7l31dXwlAPP5duc2cbCcSRXHHHWPyEEiW1OQAyJKaHABZ
      UpMDIEtqcgBkSU0OgCypyQGQJTU5ALKk9tQrwsIeG62DK6SLyyy6YwRFPQdLjUQyaqkrTAdJ
      ouvedVZDCvwbThqaX6LuS9cKv/v225Tna1GVv8TufP3vbsC/wrutE/zpxePP7Q/7NhsYGGBg
      YICqqioyMzPp6OhAkiT+7M/+DI1GA0BXVxdjY2NUV1fT39/PiRMncDqdHD16FLVanfCaJEni
      7/7u7/jRj37EwMAAkUgErVbLSy+9RDQa5YMPPkAURerq6ujp6UGpVPLyyy9js9loampKWB3r
      G24+uHqL5sP7iMfj3Lhzn9KiAg40NfDB1VsYDHr+9l//KQqFgp7Hw9x7+Ijq8lL0eh3LK05e
      Pn+K/qERKsuKgWcEoLezm8q9R7n1606q6yrIyyylrDaT31x+QG3hK0hxLyOLAd78i+8TC/vZ
      DMa4+v7boNJgyK37fI8RD67zT/9vK1qtisajJxjqvIdaoyUtVc/joQWqM0TGbB6iMWgq0tM2
      7uH1114ix2JM2A77NlpcXESv16NSqSgsLMRisXD58mVEcasrk9/vZ3BwEIPBQCgUIi0tjZmZ
      GcrLy5/bwd/T07O97dnZWSorKyku3jqIlpaW8Pv9ZGdnk5OTgyAIKJVKhoaGOHHiRELreNjV
      h8vjwZqexm8+vMabf/Y9/um9K3i8Pi6eP8XNO/cJhsKoVSo6u/v54Ruv8P7HN8nLyUKn1TA6
      OY3ZlEJhfi7wjCGQzblBulZBRKHj6IkTPOl6QFyRihBxEwUkKYqAGgQBpVqLFNnAK1l45dXX
      mR/q4PPJbvtIJ7agErUiTOejNkgp55XX3uBYYy1FJWVMjM5y4fVL5Ake5lwBmo6cTPqDH+D4
      8eO8+uqrjI2NEQqF0Gq1WCwW1tfXkSSJa9euUV9fTzAY5PDhwzQ3N6PX6xkdHeXdd99NeHvE
      QCDAwMAAubm5eDwetFotp06d4v79+0iSRCgUIjs7m8OHD3Pv3j3eeOMNDh48iCRJvPXWW/T1
      9SWkDkEQeOHUMdItFhQKxdapFaKIVqPB490k1WwiFouj02pwezdRqdVEYzHMphRePHuCmspy
      Njd9ONc2aGnrBJ4RAKNeR1gwUJRlYN3lQlJqUQhR4qhQAQpVOmaVi/mVDQbbb9EzsU7Qu8aa
      YxalKYfPu9KkZuWSm1NIfVUlleWVeF3LuFYWmHZ4EGMRLClK5hZWWfHFSNerUarkrySwNQRy
      OBzE43HGx8eZn59HEAQkSSIWi7Fv3z5EUSQYDKJUKonH4+Tl5eH1ehFFMeEBUKlUHDp0iEAg
      gEKhICUlhY2NDbRaLfF4nKysLKLRKKurq6Smpm53hUtLSyM/P5+FhYWE1bKyto41Iw2dbmvb
      12+3cnh/Izqthtv3HlJXXc7E9NzW/gmFuN3azoG9uxFFkZn5RRrqqglHwni8XuBLfYFEUdzu
      KLY60c1YMIsjVWk8HhyhvL4J5cYk3ctqzh2qBkCMBhl4PIDakktdRTG+dRsjM6vsadqNa2UZ
      g06BYMxm0z7OakDJ7voq3I45ppZc7Gnazdz4KIWlZUyNDJNRXE2aKkJMa8Fi1CRsZ31bhUIh
      BgcHKS0tJSMjg/7+fjIyMsjPz2dtbY3c3FwikQhOp5P8/HycTidWqxWbzUY4HKasrOy5dPFw
      OBykpqYSjUYZGRmhsbFxu9XJxsYGy8vLNDU1IUkSbrcbi8XCwMAAtbW16PX67T6mX4fbs0lc
      jJNuSWXVuU4wFKK4MB+Pd5PVtQ3KS4pYtNnJz83Gue4iFotRmJ/LusuNXqtFr9cxPbdITpaV
      nOws4akBkCQJm91OQX7+9oadDhumjFx0avldWvaHSUQAEsloND49ADLZ87ATAyC/ncuSmhwA
      WVKTAyBLanIAZElNDoAsqckBkCU1OQCypPaVtijBYPCfW1Ym+1qi0eiOO8a2J8IkSdo+21Am
      ex42NzcxmUzfdBnbVCrVF3eI+fwUVpnseVEoFDvuGJO/A8iSmhwAWVKTAyBLanIAZElNDoAs
      qckBkCU1OQCypPaMO8WDfW6Ce4+GUJuzeOnsMVI0v39WFieG8OrzqS9M586Nj5ld25r9q95z
      iOaG4u3lJEkkEhPRqr8oY31xkmm/gYM1+b+z3mQRj4u0tj/C6dzglQunGZ2cZmJqlpdfOE2q
      2YQkSTzqHWB+0caLZ0/weGgUi8VMfXUFXX2DHNy7G5XqmS/tHyQQCPLJp/fIz81mX+MuPr37
      AK1Gw9mTR1Eoto6NYCjEnbYO6qormJie48iBJjxeL+FwlIqy4n9hC78fSZLoeTxMljUDs8nI
      9dut7KqtoqKsmJst98lIt3D8yAEEQWB1bZ3b9x7S1FCHSqVibnGJ5sP7sdlX0Gi32scof/zj
      H//4tzfic87zyyudXLhwFmFjnqWwDtfCBGPTi0jEaLvfgSuqxiT46Hw8zuCTCax5BazMjNDa
      M87U5CQFVfVYUzRk5eQx/bibkv2naSwy8+D+Q8YWN8hK0/Hx5Q8ZccbRBhzc6RzClJHN9MAj
      yCilMGPnXDr3xxYOh/F4NnE414hEorQ+fERpcSFLdgcVZcXYHatc/uQWFWXFhMIRnOsbLDtW
      Wd9wk5WZQaY1PaEXxUuSxJUbt4nH46QYDcwt2IhEo4xOzlBTWYZeryMajfGP73yIy+1lw+1B
      kiQEQeDx0AiH9zeiVCoJh8NotdqvVcdvLn/CrTv3OXpoL1dv3mFXbRW37z1kw+XGnJJCd/8Q
      +xp3oVQo+Md3PmJXbRV37nfg8niIx+OoVWpGxqfY39TAv/93/+4nT31bnxkfpXzPASSvA1dc
      S65Fw/37naTlFrLpXMGSmcadlodMPhlkxLZJ1GXjyfgYb13voSxbz5g9SP5nB7DRoGZ1U6S6
      OIfetlusKdIJLA3St+DB5fKzr6GEGdsGRsnLw4FJ5uweSvIy/uCd9F2g1+vIzrIyN79EZVkJ
      oXCE4dGJ7dsLjU/NgAQ9/cPkZGViTjGSnpZKJBJhfcOFP5DY821ESWJsYoa1dRfzS3aejE+y
      d88uotHYdn+e260PAagsL6GpoY40SypjkzMUFxYwPjXLZ2fcfG0vnG6mtLgAnVaDc22DsuJC
      4qLIxPQcu2qriMXjKAQFbs8mgUCQgrwcBKCpoY4sq5Xh0XFyc7KYnt1q1fLUAKhUKtwuN2qd
      AdvMGK4NJ1JGJXX5KXQNzxDZWEGTkcWc3cWLZw4QjcRIVUZQpGWTqlOQU1xKimrrHSi4vkxQ
      n0lGigrnuoeykkIioSg6IYZfY0HvXWTBE2Vp0YbVpGFDMJFlTO6vJlOz86hUKvR6PZ7NTc6e
      OEI0GqOyvIRYLIaAwP6mBvQ6LTqthoqyEiKRGKFIBLfHy8zcYsJr0mo1HDu0l1AoTDQaw+3x
      otGoMeh1LNkdtLS2Mzkzh2PFSXlpEYFgkIa6aqZm5+kfHCEW+/r3BhMEgVgsTkqKEaVSiVKp
      ZHh0ksqyYgRBYHlllYy0NJRKBZFoBJVKxcjYJLXVFdRWV7DhclNfU8XCkp3uvkHgGQGobjpC
      ZszOR7c7Kag7RFGqhn2NNahUGrLNGhybInuqC0m15pJjUJCSX0l9fS0VOh9tg4vs3V2zva7N
      QIR9TfWoBQVnzp2lv/Um5urDNJZYydRLrAaVSL4NdBlF5Fg07KqrZWedLfLHp1QquXKjhaMH
      m8iyZjAyPsXhA42kpZq5++AR+5saWLI7OLBvN2azianZeS6cOU55cSFKpZKK0qKE1qMQBF44
      fZyex8NcunCGcyeP8vBRLz984xUedvWh0aj5u5/8W04cOcAP3niZVec6+bnZVJQWY023UF9T
      iUqVmFfVHwzS2FBHqtnE7rpqFpZsXDx/ipNHD9I/NML3X73Ap/ceotVoKCsuYMPt4VTzIRYW
      bdRVV1BaXECK0UDT7q0Wnttng8pkz9vnTbR2CkEQ5LYosuQmB0CW1OQAyJKaHABZUpMDIEtq
      /x+1vd6+fFDXhgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Proposed &amp; Existing Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Proposed &amp; Marin TM2 Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Proposed &amp; OSM Table' width='192'>
      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
      9v8BZeEfINKsn0sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Proposed Arterial Map' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Proposed Collector Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Proposed Expressway Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Proposed Freeway &amp; Freeway Map' width='192'>
      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
      UAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Proposed Map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
