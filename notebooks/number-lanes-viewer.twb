<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='facility-type-viewer' inline='true' name='federated.0utmhg80katpnm1e6hdx50fvnunx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='facility-type-viewer' name='ogrdirect.003sy6y1c24ldf12jmo4t0mlov08'>
            <connection class='ogrdirect' directory='Z:/Data/Users/Sijia/MTC/github/travel-model-two-networks/data/interim' filename='facility-type-viewer.geojson' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2019.2\local\proj4' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation connection='ogrdirect.003sy6y1c24ldf12jmo4t0mlov08' name='facility-type-viewer.geojson' table='[facility-type-viewer.geojson]' type='table'>
          <columns>
            <column datatype='string' name='shstReferenceId' ordinal='0' />
            <column datatype='integer' name='drive_access' ordinal='1' />
            <column datatype='string' name='shstGeometryId' ordinal='2' />
            <column datatype='string' name='osm_ft' ordinal='3' />
            <column datatype='integer' name='tom_lanes' ordinal='4' />
            <column datatype='integer' name='tomtom_FRC' ordinal='5' />
            <column datatype='string' name='tom_name' ordinal='6' />
            <column datatype='string' name='tom_shield' ordinal='7' />
            <column datatype='string' name='tom_rtedir' ordinal='8' />
            <column datatype='integer' name='tm2_ft' ordinal='9' />
            <column datatype='integer' name='tm2_lanes' ordinal='10' />
            <column datatype='integer' name='marin_ft' ordinal='11' />
            <column datatype='integer' name='marin_lanes' ordinal='12' />
            <column datatype='string' name='sfcta_name' ordinal='13' />
            <column datatype='string' name='sfcta_min_lanes' ordinal='14' />
            <column datatype='string' name='sfcta_max_lanes' ordinal='15' />
            <column datatype='string' name='pems_ft' ordinal='16' />
            <column datatype='integer' name='pems_lanes' ordinal='17' />
            <column datatype='integer' name='osm_min_lanes' ordinal='18' />
            <column datatype='integer' name='osm_max_lanes' ordinal='19' />
            <column datatype='string' name='name' ordinal='20' />
            <column datatype='integer' name='one_way' ordinal='21' />
            <column datatype='string' name='tom_ft' ordinal='22' />
            <column datatype='real' name='osm_sfcta_names_dist' ordinal='23' />
            <column datatype='string' name='county_name' ordinal='24' />
            <column datatype='spatial' name='Geometry' ordinal='25' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>shstReferenceId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shstReferenceId]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>shstReferenceId</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive_access</remote-name>
            <remote-type>3</remote-type>
            <local-name>[drive_access]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>drive_access</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shstGeometryId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shstGeometryId]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>shstGeometryId</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_ft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[osm_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_ft</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tom_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_lanes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tomtom_FRC</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tomtom_FRC]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tomtom_FRC</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_shield</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_shield]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_shield</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_rtedir</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_rtedir]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_rtedir</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tm2_ft</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tm2_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tm2_ft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tm2_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[tm2_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tm2_lanes</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marin_ft</remote-name>
            <remote-type>3</remote-type>
            <local-name>[marin_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>marin_ft</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marin_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[marin_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>marin_lanes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfcta_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfcta_name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>sfcta_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfcta_min_lanes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfcta_min_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>sfcta_min_lanes</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfcta_max_lanes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfcta_max_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>sfcta_max_lanes</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pems_ft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pems_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>pems_ft</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pems_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[pems_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>pems_lanes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_min_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[osm_min_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_min_lanes</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_max_lanes</remote-name>
            <remote-type>3</remote-type>
            <local-name>[osm_max_lanes]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_max_lanes</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>one_way</remote-name>
            <remote-type>3</remote-type>
            <local-name>[one_way]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>one_way</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tom_ft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tom_ft]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>tom_ft</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>osm_sfcta_names_dist</remote-name>
            <remote-type>5</remote-type>
            <local-name>[osm_sfcta_names_dist]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>osm_sfcta_names_dist</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[facility-type-viewer.geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>25</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]&quot;' value='Share of Records' />
        </aliases>
      </column>
      <column caption='TM2 Freeway' datatype='integer' name='[Calculation_2449324890514726912]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([osm_ft] == &quot;motorway&quot;) then&#10;100&#10;ELSE&#10;0&#10;END' />
      </column>
      <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2694700701509636096]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
      </column>
      <column caption='tom_label' datatype='string' name='[Calculation_2778932093466193920]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[tom_shield]+&quot; &quot; + [tom_rtedir]' />
      </column>
      <column caption='Lanes Confidence' datatype='string' name='[Calculation_2778932093493178369]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then &quot;Very high&quot;&#10;when 2 then &quot;Very high&quot;&#10;when 3 then &quot;Very high&quot;&#10;when 4 then &quot;Very high&quot;&#10;when 5 then &quot;Very high&quot;&#10;when 6 then &quot;High&quot;&#10;when 7 then &quot;High&quot;&#10;when 8 then &quot;High&quot;&#10;when 9 then &quot;High&quot;&#10;when 10 then &quot;Medium high&quot;&#10;when 11 then &quot;Medium high&quot;&#10;when 12 then &quot;Medium&quot;&#10;when 13 then &quot;Medium&quot;&#10;when 14 then &quot;Medium&quot;&#10;when 15 then &quot;Medium&quot;&#10;when 16 then &quot;Medium&quot;&#10;when 17 then &quot;Medium low&quot;&#10;when 18 then &quot;Low&quot;&#10;else &quot;Missing&quot;&#10;END' />
      </column>
      <column aggregation='Sum' caption='TM2 Major Arterial' datatype='integer' name='[Calculation_3175178488384155648]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([osm_ft]==&quot;primary&quot; or [osm_ft]==&quot;primary_link&quot;) then&#10;100&#10;ELSE&#10;0&#10;END' />
      </column>
      <column caption='Match TomTom and OSM' datatype='boolean' name='[Calculation_4901745997637984256]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes]' />
      </column>
      <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
      </column>
      <column caption='Match SFCTA and Marin' datatype='boolean' name='[Calculation_5093078613100265472]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[sfcta_min_lanes]&lt;=[marin_lanes] and [sfcta_max_lanes]&gt;=[marin_lanes]' />
      </column>
      <column aggregation='None' caption='Lanes (bin)' datatype='integer' name='[Lanes (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_4901745997638209537]' peg='0' size='1' />
      </column>
      <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
      </column>
      <column caption='Match SFCTA and OSM' datatype='boolean' name='[Match TM2 and OSM (copy 2)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[sfcta_min_lanes]&lt;=[osm_min_lanes] and [sfcta_max_lanes]&gt;=[osm_min_lanes]' />
      </column>
      <column caption='Match Marin and TM2' datatype='boolean' name='[Match TM2 and OSM (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[marin_lanes]==[tm2_lanes] and [marin_lanes]&gt;0' />
      </column>
      <column caption='Match PeMS and OSM' datatype='boolean' name='[Match TomTom and OSM (copy 2)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]&lt;=[pems_lanes] and [osm_max_lanes]&gt;=[pems_lanes]' />
      </column>
      <column caption='Match TM2 and OSM' datatype='boolean' name='[Match TomTom and OSM (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='TM2 Collector' datatype='integer' name='[TM2 Expressway (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([osm_ft]==&quot;secondary&quot; OR &#10;[osm_ft]==&quot;tertiary&quot; OR&#10;[osm_ft]==&quot;secondary_link&quot; OR&#10;[osm_ft]==&quot;tertiary_link&quot;) then&#10;100&#10;ELSE&#10;0&#10;END' />
      </column>
      <column caption='TM2 Ramp' datatype='integer' name='[TM2 Freeway (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([osm_ft] == &quot;motorway_link&quot;) then&#10;100&#10;ELSE&#10;0&#10;END' />
      </column>
      <column aggregation='Sum' caption='TM2 Expressway' datatype='integer' name='[TM2 Major Arterial (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if ([osm_ft]==&quot;trunk&quot; OR [osm_ft]==&quot;trunk_link&quot;) then&#10;100&#10;ELSE&#10;0&#10;END' />
      </column>
      <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal' />
      <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
      <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
      <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
      <column aggregation='None' caption='tm2_lanes (bin)' datatype='integer' name='[tm2_lanes (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[tm2_lanes]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
      <column datatype='string' name='[tom_ft]' role='dimension' type='nominal' />
      <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2449324890514726912]' derivation='None' name='[none:Calculation_2449324890514726912:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2694700701509636096]' derivation='None' name='[none:Calculation_2694700701509636096:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2778932093493178369]' derivation='None' name='[none:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_3175178488384155648]' derivation='None' name='[none:Calculation_3175178488384155648:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4901745997637984256]' derivation='None' name='[none:Calculation_4901745997637984256:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5093078613100265472]' derivation='None' name='[none:Calculation_5093078613100265472:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lanes (copy)]' derivation='None' name='[none:Lanes (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Match TM2 and OSM (copy 2)]' derivation='None' name='[none:Match TM2 and OSM (copy 2):nk]' pivot='key' type='nominal' />
      <column-instance column='[Match TM2 and OSM (copy)]' derivation='None' name='[none:Match TM2 and OSM (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Match TomTom and OSM (copy 2)]' derivation='None' name='[none:Match TomTom and OSM (copy 2):nk]' pivot='key' type='nominal' />
      <column-instance column='[Match TomTom and OSM (copy)]' derivation='None' name='[none:Match TomTom and OSM (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[TM2 Expressway (copy)]' derivation='None' name='[none:TM2 Expressway (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM2 Freeway (copy)]' derivation='None' name='[none:TM2 Freeway (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[TM2 Major Arterial (copy)]' derivation='None' name='[none:TM2 Major Arterial (copy):ok]' pivot='key' type='ordinal' />
      <column-instance column='[osm_ft]' derivation='None' name='[none:osm_ft:nk]' pivot='key' type='nominal' />
      <column-instance column='[tom_ft]' derivation='None' name='[none:tom_ft:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.60052' measure-ordering='alphabetic' measure-percentage='0.39948' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:tom_ft:nk]' type='palette'>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Local Connecting Road&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Local Road&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Local Road of High Importance&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Local Road of Minor Importance&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Major Road Less Important than a Motorway&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Other Major Road&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Other Road&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;Secondary Road&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Motorway, Freeway, or Other Major Road&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2449324890514726912:ok]' type='palette'>
            <map to='#5c6068'>
              <bucket>0</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>100</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TM2 Major Arterial (copy):ok]' type='palette'>
            <map to='#a4a4d5'>
              <bucket>100</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TM2 Freeway (copy):ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>100</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3175178488384155648:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>100</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TM2 Expressway (copy):ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>100</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Lanes (copy):ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>7</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>13</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>15</bucket>
            </map>
            <map to='#e15759'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>6</bucket>
            </map>
            <map to='#edc948'>
              <bucket>10</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>12</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Match TomTom and OSM (copy):nk]' type='palette'>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>true</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5093078613100265472:nk]' type='palette'>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>true</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Match TM2 and OSM (copy 2):nk]' type='palette'>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>true</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Match TM2 and OSM (copy):nk]' type='palette'>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>true</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Match TomTom and OSM (copy 2):nk]' type='palette'>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>true</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4901745997637984256:nk]' type='palette'>
            <map to='#91dcea'>
              <bucket>true</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2778932093493178369:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Very high&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Medium high&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Missing&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;Medium low&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Calculation_2694700701509636096:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Freeway (1)&quot;</bucket>
            <bucket>&quot;Expressway (2)&quot;</bucket>
            <bucket>&quot;Divided Arterial (3)&quot;</bucket>
            <bucket>&quot;Undivided Arterial (4)&quot;</bucket>
            <bucket>&quot;Ramp (5)&quot;</bucket>
            <bucket>&quot;Collector (6)&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Calculation_2778932093493178369:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Very high&quot;</bucket>
            <bucket>&quot;High&quot;</bucket>
            <bucket>&quot;Medium high&quot;</bucket>
            <bucket>&quot;Medium&quot;</bucket>
            <bucket>&quot;Medium low&quot;</bucket>
            <bucket>&quot;Low&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:osm_ft:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;motorway&quot;</bucket>
            <bucket>&quot;trunk&quot;</bucket>
            <bucket>&quot;primary&quot;</bucket>
            <bucket>&quot;motorway_link&quot;</bucket>
            <bucket>&quot;trunk_link&quot;</bucket>
            <bucket>&quot;primary_link&quot;</bucket>
            <bucket>&quot;secondary&quot;</bucket>
            <bucket>&quot;secondary_link&quot;</bucket>
            <bucket>&quot;tertiary&quot;</bucket>
            <bucket>&quot;tertiary_link&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Arterial Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2694700701509636096]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='tom_label' datatype='string' name='[Calculation_2778932093466193920]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield]+&quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Confidence' datatype='string' name='[Calculation_2778932093493178369]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then &quot;Very high&quot;&#10;when 2 then &quot;Very high&quot;&#10;when 3 then &quot;Very high&quot;&#10;when 4 then &quot;Very high&quot;&#10;when 5 then &quot;Very high&quot;&#10;when 6 then &quot;High&quot;&#10;when 7 then &quot;High&quot;&#10;when 8 then &quot;High&quot;&#10;when 9 then &quot;High&quot;&#10;when 10 then &quot;Medium high&quot;&#10;when 11 then &quot;Medium high&quot;&#10;when 12 then &quot;Medium&quot;&#10;when 13 then &quot;Medium&quot;&#10;when 14 then &quot;Medium&quot;&#10;when 15 then &quot;Medium&quot;&#10;when 16 then &quot;Medium&quot;&#10;when 17 then &quot;Medium low&quot;&#10;when 18 then &quot;Low&quot;&#10;else &quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column-instance column='[Calculation_2778932093466193920]' derivation='Attribute' name='[attr:Calculation_2778932093466193920:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='Attribute' name='[attr:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lanes (copy)]' derivation='Attribute' name='[attr:Lanes (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2694700701509636096]' derivation='None' name='[none:Calculation_2694700701509636096:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='None' name='[none:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997638209537]' derivation='Sum' name='[sum:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;(4) Divided Arterial&quot;' />
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;(5) Undivided Arterial&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13602070.753315015' min='-13622192.111817516' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4559986.6483317213' min='4549032.4218471916' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Lanes (copy):ok]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]&gt; </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Confidence:&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Lanes (proposed):&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (MTC):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (Marin):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Tom Tom:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5B0F222E-734C-46DF-A832-8E9CFB216D18}' />
    </worksheet>
    <worksheet name='Collectors Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2694700701509636096]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='tom_label' datatype='string' name='[Calculation_2778932093466193920]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield]+&quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Confidence' datatype='string' name='[Calculation_2778932093493178369]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then &quot;Very high&quot;&#10;when 2 then &quot;Very high&quot;&#10;when 3 then &quot;Very high&quot;&#10;when 4 then &quot;Very high&quot;&#10;when 5 then &quot;Very high&quot;&#10;when 6 then &quot;High&quot;&#10;when 7 then &quot;High&quot;&#10;when 8 then &quot;High&quot;&#10;when 9 then &quot;High&quot;&#10;when 10 then &quot;Medium high&quot;&#10;when 11 then &quot;Medium high&quot;&#10;when 12 then &quot;Medium&quot;&#10;when 13 then &quot;Medium&quot;&#10;when 14 then &quot;Medium&quot;&#10;when 15 then &quot;Medium&quot;&#10;when 16 then &quot;Medium&quot;&#10;when 17 then &quot;Medium low&quot;&#10;when 18 then &quot;Low&quot;&#10;else &quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column-instance column='[Calculation_2778932093466193920]' derivation='Attribute' name='[attr:Calculation_2778932093466193920:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='Attribute' name='[attr:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lanes (copy)]' derivation='Attribute' name='[attr:Lanes (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2694700701509636096]' derivation='None' name='[none:Calculation_2694700701509636096:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='None' name='[none:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997638209537]' derivation='Sum' name='[sum:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;(6) Collector&quot;' />
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;(7) Collector&quot;' />
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;Collector (6)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13534522.577357547' min='-13661562.499625962' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4554381.2913540136' min='4476346.2838441161' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Lanes (copy):ok]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]&gt; </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Confidence:&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Lanes (proposed):&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (MTC):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (Marin):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Tom Tom:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9C20A7B1-B238-44BF-A1F8-09F903495D73}' />
    </worksheet>
    <worksheet name='Confidence Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Lanes Confidence' datatype='string' name='[Calculation_2778932093493178369]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then &quot;Very high&quot;&#10;when 2 then &quot;Very high&quot;&#10;when 3 then &quot;Very high&quot;&#10;when 4 then &quot;Very high&quot;&#10;when 5 then &quot;Very high&quot;&#10;when 6 then &quot;High&quot;&#10;when 7 then &quot;High&quot;&#10;when 8 then &quot;High&quot;&#10;when 9 then &quot;High&quot;&#10;when 10 then &quot;Medium high&quot;&#10;when 11 then &quot;Medium high&quot;&#10;when 12 then &quot;Medium&quot;&#10;when 13 then &quot;Medium&quot;&#10;when 14 then &quot;Medium&quot;&#10;when 15 then &quot;Medium&quot;&#10;when 16 then &quot;Medium&quot;&#10;when 17 then &quot;Medium low&quot;&#10;when 18 then &quot;Low&quot;&#10;else &quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column aggregation='None' caption='Lanes (bin)' datatype='integer' name='[Lanes (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_4901745997638209537]' peg='0' size='1' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_4901745997638209537]' derivation='Avg' name='[avg:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_ft]' role='measure' type='quantitative' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='None' name='[none:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lanes (bin)]' derivation='None' name='[none:Lanes (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[osm_ft]' derivation='None' name='[none:osm_ft:nk]' pivot='key' type='nominal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[marin_ft]' derivation='Sum' name='[pcto:sum:marin_ft:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[marin_lanes]' derivation='Sum' name='[pcto:sum:marin_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[pcto:sum:osm_max_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[pcto:sum:osm_min_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[pems_lanes]' derivation='Sum' name='[pcto:sum:pems_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[pcto:sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[pcto:sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tm2_ft]' derivation='Sum' name='[pcto:sum:tm2_ft:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[pcto:sum:tm2_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tom_lanes]' derivation='Sum' name='[pcto:sum:tom_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tomtom_FRC]' derivation='Sum' name='[pcto:sum:tomtom_FRC:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_ft]' role='measure' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[tomtom_FRC]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[avg:Calculation_4901745997638209537:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:marin_ft:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:marin_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:osm_max_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:osm_min_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:pems_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:sfcta_max_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:sfcta_min_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tm2_ft:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tm2_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tom_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tomtom_FRC:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]'>
            <groupfilter function='level-members' level='[none:Lanes (bin):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]'>
            <groupfilter function='level-members' level='[none:osm_ft:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]</column>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]</column>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]' value='159' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]' value='p0.0%' />
            <format attr='height' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
            <format attr='height' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]' value='88' />
            <format attr='width' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' value='156' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]</cols>
        <show-full-range>
          <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Lanes (bin)]</column>
        </show-full-range>
        <percentages enabled='true' mode='column' />
      </table>
      <simple-id uuid='{9C0B1E8E-507A-4E2B-BB18-F7CB5BE61EED}' />
    </worksheet>
    <worksheet name='Expressway Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2694700701509636096]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='tom_label' datatype='string' name='[Calculation_2778932093466193920]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield]+&quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Confidence' datatype='string' name='[Calculation_2778932093493178369]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then &quot;Very high&quot;&#10;when 2 then &quot;Very high&quot;&#10;when 3 then &quot;Very high&quot;&#10;when 4 then &quot;Very high&quot;&#10;when 5 then &quot;Very high&quot;&#10;when 6 then &quot;High&quot;&#10;when 7 then &quot;High&quot;&#10;when 8 then &quot;High&quot;&#10;when 9 then &quot;High&quot;&#10;when 10 then &quot;Medium high&quot;&#10;when 11 then &quot;Medium high&quot;&#10;when 12 then &quot;Medium&quot;&#10;when 13 then &quot;Medium&quot;&#10;when 14 then &quot;Medium&quot;&#10;when 15 then &quot;Medium&quot;&#10;when 16 then &quot;Medium&quot;&#10;when 17 then &quot;Medium low&quot;&#10;when 18 then &quot;Low&quot;&#10;else &quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column-instance column='[Calculation_2778932093466193920]' derivation='Attribute' name='[attr:Calculation_2778932093466193920:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='Attribute' name='[attr:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lanes (copy)]' derivation='Attribute' name='[attr:Lanes (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2694700701509636096]' derivation='None' name='[none:Calculation_2694700701509636096:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='None' name='[none:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997638209537]' derivation='Sum' name='[sum:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;(2) Expressway&quot;' />
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;Expressway (2)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13248312.071395406' min='-13756801.019047607' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4692409.9308544453' min='4414748.2012648312' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Lanes (copy):ok]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]&gt; </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Confidence:&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Lanes (proposed):&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (MTC):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (Marin):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Tom Tom:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{312AC4E1-EC71-4CCA-83FE-7B759AD02811}' />
    </worksheet>
    <worksheet name='Freeway Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Proposed Facility Type' datatype='string' name='[Calculation_2694700701509636096]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([osm_ft]==&quot;motorway&quot;) then&#10;&quot;(1) Freeway&quot;&#10;ELSEIF ([osm_ft]==&quot;motorway_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk_link&quot;) then&#10;&quot;(3) Ramp&quot;&#10;ELSEIF ([osm_ft]==&quot;trunk&quot; and [one_way]==1) then&#10;&quot;(2) Expressway&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==1 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(4) Divided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;primary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;secondary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;tertiary&quot; and [one_way]==0 and [Calculation_4901745997638209537]&gt;1) then&#10;&quot;(5) Undivided Arterial&quot;&#10;ELSEIF ([osm_ft] == &quot;trunk&quot; and [one_way]==0) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft], &quot;primary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (contains([osm_ft],&quot;secondary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSEIF (CONTAINS([osm_ft],&quot;tertiary&quot;)) then&#10;&quot;(6) Collector&quot;&#10;ELSE&#10;&quot;Missing&quot;&#10;END' />
            </column>
            <column caption='tom_label' datatype='string' name='[Calculation_2778932093466193920]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield]+&quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Lanes Confidence' datatype='string' name='[Calculation_2778932093493178369]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then &quot;Very high&quot;&#10;when 2 then &quot;Very high&quot;&#10;when 3 then &quot;Very high&quot;&#10;when 4 then &quot;Very high&quot;&#10;when 5 then &quot;Very high&quot;&#10;when 6 then &quot;High&quot;&#10;when 7 then &quot;High&quot;&#10;when 8 then &quot;High&quot;&#10;when 9 then &quot;High&quot;&#10;when 10 then &quot;Medium high&quot;&#10;when 11 then &quot;Medium high&quot;&#10;when 12 then &quot;Medium&quot;&#10;when 13 then &quot;Medium&quot;&#10;when 14 then &quot;Medium&quot;&#10;when 15 then &quot;Medium&quot;&#10;when 16 then &quot;Medium&quot;&#10;when 17 then &quot;Medium low&quot;&#10;when 18 then &quot;Low&quot;&#10;else &quot;Missing&quot;&#10;END' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column-instance column='[Calculation_2778932093466193920]' derivation='Attribute' name='[attr:Calculation_2778932093466193920:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='Attribute' name='[attr:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lanes (copy)]' derivation='Attribute' name='[attr:Lanes (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2694700701509636096]' derivation='None' name='[none:Calculation_2694700701509636096:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2778932093493178369]' derivation='None' name='[none:Calculation_2778932093493178369:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='One Way' datatype='integer' name='[one_way]' role='dimension' type='ordinal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997638209537]' derivation='Sum' name='[sum:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;(1) Freeway&quot;' />
              <groupfilter function='member' level='[none:Calculation_2694700701509636096:nk]' member='&quot;Freeway (1)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13410374.486619815' min='-13731728.846599745' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4614149.6699273391' min='4431434.4766963562' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Lanes (copy):ok]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]&gt; </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Confidence:&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093493178369:nk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>Lanes (proposed):&#9;</run>
                <run bold='true' fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]&gt;</run>
                <run indent='3240'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (MTC):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>TM2 (Marin):&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Tom Tom:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Min:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>SFCTA Max:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A7D1517E-834B-4268-BEE4-A70D0DE87C82}' />
    </worksheet>
    <worksheet name='Heuristics Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column aggregation='None' caption='Lanes (bin)' datatype='integer' name='[Lanes (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_4901745997638209537]' peg='0' size='1' />
            </column>
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_4901745997638209537]' derivation='Avg' name='[avg:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_ft]' role='measure' type='quantitative' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Lanes (bin)]' derivation='None' name='[none:Lanes (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Lanes (copy)]' derivation='None' name='[none:Lanes (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[osm_ft]' derivation='None' name='[none:osm_ft:nk]' pivot='key' type='nominal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[marin_ft]' derivation='Sum' name='[pcto:sum:marin_ft:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[marin_lanes]' derivation='Sum' name='[pcto:sum:marin_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[pcto:sum:osm_max_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[pcto:sum:osm_min_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[pems_lanes]' derivation='Sum' name='[pcto:sum:pems_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[pcto:sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[pcto:sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tm2_ft]' derivation='Sum' name='[pcto:sum:tm2_ft:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[pcto:sum:tm2_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tom_lanes]' derivation='Sum' name='[pcto:sum:tom_lanes:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[tomtom_FRC]' derivation='Sum' name='[pcto:sum:tomtom_FRC:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_ft]' role='measure' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[tomtom_FRC]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[avg:Calculation_4901745997638209537:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:marin_ft:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:marin_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:osm_max_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:osm_min_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:pems_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:sfcta_max_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:sfcta_min_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tm2_ft:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tm2_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tom_lanes:qk]&quot;</bucket>
              <bucket>&quot;[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:tomtom_FRC:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]'>
            <groupfilter function='level-members' level='[none:Lanes (bin):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]'>
            <groupfilter function='level-members' level='[none:osm_ft:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]</column>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]</column>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (copy):ok]' value='35' />
            <format attr='width' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]' value='159' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[pcto:sum:Number of Records:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
            <format attr='width' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (copy):ok]' value='188' />
            <format attr='height' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]' value='76' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (copy):ok]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]</cols>
        <show-full-range>
          <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Lanes (bin)]</column>
        </show-full-range>
        <percentages enabled='true' mode='column' />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{A9BE3175-021B-477D-8059-42D38C6CEE26}' />
    </worksheet>
    <worksheet name='Match Marin &amp; TM2'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Match Marin and TM2' datatype='boolean' name='[Match TM2 and OSM (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[marin_lanes]==[tm2_lanes] and [marin_lanes]&gt;0' />
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Match TM2 and OSM (copy)]' derivation='None' name='[none:Match TM2 and OSM (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[marin_lanes]' derivation='None' name='[none:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]'>
            <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Marin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:marin_lanes:qk]' included-values='in-range'>
            <min>1</min>
            <max>9</max>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:marin_lanes:qk]</column>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13589354.793749083' min='-13733591.51356037' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4626335.6728671864' min='4550296.5481557362' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Match TM2 and OSM (copy):nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>TM2 (Marin):&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>TM2 (MTC):&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>Tom Tom:&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EC374306-F671-4675-BEAA-225313425BEA}' />
    </worksheet>
    <worksheet name='Match PeMS &amp; OSM'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Match PeMS and OSM' datatype='boolean' name='[Match TomTom and OSM (copy 2)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]&lt;=[pems_lanes] and [osm_max_lanes]&gt;=[pems_lanes]' />
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Match TomTom and OSM (copy 2)]' derivation='None' name='[none:Match TomTom and OSM (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[pems_lanes]' derivation='None' name='[none:pems_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pems_lanes]' derivation='Sum' name='[sum:pems_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:pems_lanes:qk]' included-values='in-range'>
            <min>1</min>
            <max>7</max>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:pems_lanes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13357329.508596955' min='-13704299.969914136' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4639561.8715869151' min='4412453.9430467114' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-secondary-tertiary case' value='true' />
            <format attr='enabled' id='tunnel-street_limited case' value='true' />
            <format attr='enabled' id='tunnel-street case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-path' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-pedestrian case' value='true' />
            <format attr='enabled' id='tunnel-service-link-track case' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-minor' value='true' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-major' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='tunnel-oneway-arrows-white' value='true' />
            <format attr='enabled' id='ferry' value='true' />
            <format attr='enabled' id='ferry, auto' value='true' />
            <format attr='enabled' id='ferry-label' value='true' />
            <format attr='enabled' id='road-link case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-link' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-secondary-tertiary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-oneway-arrows-blue-minor' value='true' />
            <format attr='enabled' id='road-oneway-arrows-blue-major' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-oneway-arrows-white' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-secondary-tertiary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-minor' value='true' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-major' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='bridge-oneway-arrows-white' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-medium' value='true' />
            <format attr='enabled' id='road-label-large' value='true' />
            <format attr='enabled' id='road-label-xlarge' value='true' />
            <format attr='enabled' id='road-shields-black' value='true' />
            <format attr='enabled' id='road-shields-white' value='true' />
            <format attr='enabled' id='motorway-junction' value='true' />
            <format attr='enabled' id='admin-3-4-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-3-4-boundaries' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-boundaries offset' value='true' />
            <format attr='enabled' id='admin-2-boundaries-dispute' value='true' />
            <format attr='enabled' id='state-label-sm' value='true' />
            <format attr='enabled' id='state-label-md' value='true' />
            <format attr='enabled' id='state-label-lg' value='true' />
            <format attr='enabled' id='country-label-sm' value='true' />
            <format attr='enabled' id='country-label-md' value='true' />
            <format attr='enabled' id='country-label-lg' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Match TomTom and OSM (copy 2):nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:pems_lanes:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>PeMS:&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:pems_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2250'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16' indent='2250'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run indent='2250'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AB9B7408-E838-44AE-87FA-AB5B11121548}' />
    </worksheet>
    <worksheet name='Match SF &amp; TM2'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Match SFCTA and Marin' datatype='boolean' name='[Calculation_5093078613100265472]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[sfcta_min_lanes]&lt;=[marin_lanes] and [sfcta_max_lanes]&gt;=[marin_lanes]' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5093078613100265472]' derivation='None' name='[none:Calculation_5093078613100265472:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_max_lanes]' derivation='Sum' name='[sum:sfcta_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sfcta_min_lanes]' derivation='Sum' name='[sum:sfcta_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tm2_lanes]' derivation='Sum' name='[sum:tm2_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[tm2_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county_name:nk]' member='%null%' />
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;San Francisco&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13606650.124152899' min='-13642708.600442408' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4554442.4008235512' min='4534820.0613756748' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_5093078613100265472:nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>(SFCTA: &lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]&gt;)</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>SFCTA Min:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_min_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>SFCTA Max:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:sfcta_max_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>OSM Min:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>OSM Max:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>Tom Tom:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>TM2 (Marin):&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>TM2 (MTC):&#9;</run>
                <run bold='true' fontsize='16' indent='2610'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tm2_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DFF1D23F-4A0C-4107-838D-390B2EDC51B7}' />
    </worksheet>
    <worksheet name='Match Tom &amp; OSM'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='tom_label' datatype='string' name='[Calculation_2778932093466193920]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tom_shield]+&quot; &quot; + [tom_rtedir]' />
            </column>
            <column caption='Match TomTom and OSM' datatype='boolean' name='[Calculation_4901745997637984256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes]' />
            </column>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column-instance column='[Calculation_2778932093466193920]' derivation='Attribute' name='[attr:Calculation_2778932093466193920:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997637984256]' derivation='None' name='[none:Calculation_4901745997637984256:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997638209537]' derivation='Sum' name='[sum:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_max_lanes]' derivation='Sum' name='[sum:osm_max_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_min_lanes]' derivation='Sum' name='[sum:osm_min_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tom_lanes]' derivation='Sum' name='[sum:tom_lanes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[tom_rtedir]' role='dimension' type='nominal' />
            <column datatype='string' name='[tom_shield]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13599026.957421904' min='-13637947.637543015' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4561016.3572188942' min='4540522.3276397018' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_4901745997637984256:nk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:Calculation_2778932093466193920:nk]&gt;</run>
                <run indent='2790'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2790'>Lanes (proposed):&#9;</run>
                <run bold='true' fontsize='16' indent='2790'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]&gt;</run>
                <run indent='2790'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2790'>OSM Min Lanes:&#9;</run>
                <run bold='true' fontsize='16' indent='2790'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_min_lanes:qk]&gt;</run>
                <run indent='2790'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2790'>OSM Max Lanes:&#9;</run>
                <run bold='true' fontsize='16' indent='2790'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_max_lanes:qk]&gt;</run>
                <run indent='2790'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2790'>Tom Tom Lanes:&#9;</run>
                <run bold='true' fontsize='16' indent='2790'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:tom_lanes:qk]&gt;</run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{347B76A6-E95A-49C5-BB5B-1AE94A10AD56}' />
    </worksheet>
    <worksheet name='SFCTA &amp; OSM Name Match'>
      <table>
        <view>
          <datasources>
            <datasource caption='facility-type-viewer' name='federated.0utmhg80katpnm1e6hdx50fvnunx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0utmhg80katpnm1e6hdx50fvnunx'>
            <column caption='Lanes' datatype='integer' name='[Calculation_4901745997638209537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Lanes (copy)]&#10;when 1 then [pems_lanes]&#10;when 2 then [sfcta_min_lanes]&#10;when 3 then [pems_lanes]&#10;when 4 then [osm_min_lanes]&#10;when 5 then [marin_lanes]&#10;when 6 then [sfcta_min_lanes]&#10;when 7 then [osm_min_lanes]&#10;when 8 then [osm_min_lanes]&#10;when 9 then [pems_lanes]&#10;when 10 then [sfcta_min_lanes]&#10;when 11 then [osm_min_lanes]&#10;when 12 then [osm_min_lanes]&#10;when 13 then [osm_min_lanes]&#10;when 14 then [osm_min_lanes]&#10;when 15 then [marin_lanes]&#10;when 16 then [tom_lanes]&#10;when 17 then 1&#10;when 18 then 1&#10;else 0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Lanes Heuristic' datatype='integer' name='[Lanes (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [osm_min_lanes]==[pems_lanes]) then&#10;1&#10;elseif ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt; 0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos; and [osm_min_lanes]&gt;=[sfcta_min_lanes] and [osm_min_lanes]&lt;=[sfcta_max_lanes]) then&#10;2&#10;ELSEIF ([pems_lanes]&gt;0 and [osm_min_lanes]&gt;0 and [pems_lanes]&gt;=[osm_min_lanes] and [pems_lanes]&lt;=[osm_max_lanes]) then&#10;3&#10;ELSEif (([osm_ft]==&apos;motorway&apos; or [osm_ft]==&apos;motorway_link&apos;) and [osm_min_lanes]&lt;=[tom_lanes] and [osm_max_lanes]&gt;=[tom_lanes] and [osm_min_lanes]&gt;0) then&#10;4&#10;ELSEIF ([county_name]!=&apos;San Francisco&apos; and [osm_min_lanes]&gt; 0 and [osm_min_lanes]&lt;=[marin_lanes] and [osm_max_lanes]&gt;=[marin_lanes]) then&#10;5&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [sfcta_min_lanes]==[sfcta_max_lanes] and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;6&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and [osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;7&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;8&#10;elseif ([osm_ft]==&quot;motorway&quot; and [pems_lanes]&gt;0) then&#10;9&#10;ELSEIF ([county_name]==&apos;San Francisco&apos; and [osm_sfcta_names_dist]&lt;6 and [sfcta_min_lanes]&gt;0 and [osm_ft]!=&apos;motorway&apos; and [osm_ft]!=&apos;motorway_link&apos;) then&#10;10&#10;ELSEIF ([osm_min_lanes]==[osm_max_lanes] and [osm_min_lanes]&gt;0) then&#10;11&#10;ELSEIF (([osm_ft]==&quot;motorway&quot; or [osm_ft]==&quot;motorway_link&quot;) and ([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;12&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])==1 and [osm_min_lanes]&gt;0) then&#10;13&#10;ELSEIF (([osm_max_lanes]-[osm_min_lanes])&gt;=2 and [osm_min_lanes]&gt;0) then&#10;14&#10;ELSEif ([marin_lanes]&gt;0) then&#10;15&#10;elseif ([tom_lanes]&gt;0) then&#10;16&#10;elseif([osm_ft]==&quot;residential&quot;) then&#10;17&#10;ELSE&#10;18&#10;END' />
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sfcta_name]' derivation='Attribute' name='[attr:sfcta_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[shstReferenceId]' derivation='Attribute' name='[attr:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[marin_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[osm_sfcta_names_dist]' derivation='None' name='[none:osm_sfcta_names_dist:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shstReferenceId]' derivation='None' name='[none:shstReferenceId:nk]' pivot='key' type='nominal' />
            <column caption='OSM FT' datatype='string' name='[osm_ft]' role='dimension' type='nominal' />
            <column datatype='integer' name='[osm_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[osm_min_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[osm_sfcta_names_dist]' role='measure' type='quantitative' />
            <column datatype='integer' name='[pems_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_max_lanes]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[sfcta_min_lanes]' role='measure' type='quantitative' />
            <column datatype='string' name='[sfcta_name]' role='dimension' type='nominal' />
            <column caption='Shst Reference Id' datatype='string' name='[shstReferenceId]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4901745997638209537]' derivation='Sum' name='[sum:Calculation_4901745997638209537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[marin_lanes]' derivation='Sum' name='[sum:marin_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[osm_sfcta_names_dist]' derivation='Sum' name='[sum:osm_sfcta_names_dist:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[tom_lanes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county_name:nk]' member='%null%' />
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;San Francisco&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_sfcta_names_dist:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>10.0</max>
          </filter>
          <slices>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_sfcta_names_dist:qk]</column>
            <column>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]' field-type='quantitative' max='-13611903.116094816' min='-13648749.307055099' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]' field-type='quantitative' max='4554810.4725611787' min='4534738.9947385602' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_sfcta_names_dist:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_sfcta_names_dist:qk]' />
              <size column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
              <lod column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:marin_lanes:qk]' />
              <tooltip column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]' />
              <geometry column='[federated.0utmhg80katpnm1e6hdx50fvnunx].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>Æ </run>
                <run bold='true' fontsize='16'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:shstReferenceId:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16' italic='true'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[attr:sfcta_name:nk]&gt; (SFCTA)</run>
                <run indent='3240'>Æ&#10;</run>
                <run fontcolor='#004870' fontsize='18' indent='3240'>&lt;[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_sfcta_names_dist:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Latitude (generated)]</rows>
        <cols>[federated.0utmhg80katpnm1e6hdx50fvnunx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7021872E-8ACF-4061-A94E-F858417FC46B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Heuristics Table'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]' type='filter' />
            <card param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (copy):ok]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97F961FC-8D0E-4C26-9314-AFC0D8264E79}' />
    </window>
    <window class='worksheet' maximized='true' name='Confidence Table'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]' type='filter' />
            <card param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[:Measure Names]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (bin):ok]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Lanes (copy):ok]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD51ED56-FEE4-4665-80D2-1CE65152E1C1}' />
    </window>
    <window class='worksheet' name='SFCTA &amp; OSM Name Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_sfcta_names_dist:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' type='size' />
            <card param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_sfcta_names_dist:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093466193920:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_sfcta_names_dist:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:osm_sfcta_names_dist:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{096CC9E5-8223-4425-B82C-B16A09B24594}' />
    </window>
    <window class='worksheet' name='Match Tom &amp; OSM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093466193920:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_4901745997637984256:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{3CC24689-E8BB-433B-89DA-7EC39F6C8EE7}' />
    </window>
    <window class='worksheet' name='Match SF &amp; TM2'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_5093078613100265472:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_ft:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AF21C413-287F-4880-94E9-0B5FD2FA94C1}' />
    </window>
    <window class='worksheet' name='Match Marin &amp; TM2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Match TM2 and OSM (copy):nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:marin_lanes:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_ft:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{FB02FB82-108A-4FC5-96B4-4F991D24F7EF}' />
    </window>
    <window class='worksheet' name='Match PeMS &amp; OSM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Match TomTom and OSM (copy 2):nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:county_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:marin_lanes:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:pems_lanes:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_ft:qk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BBFF824F-67FA-46AE-A5C3-5F84CB3D2F9E}' />
    </window>
    <window class='worksheet' name='Freeway Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093466193920:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{ED780A31-33A8-4FE3-B760-8A883F9DDC19}' />
    </window>
    <window class='worksheet' name='Expressway Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093466193920:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{7AD6F8A7-5D3A-446C-89B6-B84995F9C9B1}' />
    </window>
    <window class='worksheet' name='Arterial Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093466193920:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{1D47A1A3-7F68-44AC-B896-1B4D1E49EE19}' />
    </window>
    <window class='worksheet' name='Collectors Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0utmhg80katpnm1e6hdx50fvnunx].[sum:Calculation_4901745997638209537:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2694700701509636096:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093466193920:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:Calculation_2778932093493178369:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:name_list:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:osm_ft:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:sfcta_name:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:shstReferenceId:nk]</field>
            <field>[federated.0utmhg80katpnm1e6hdx50fvnunx].[none:tom_tom_ft:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{3754C35C-2C36-4403-BFD4-1AB1F24DD25A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Arterial Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Collectors Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Confidence Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Expressway Map' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Freeway Map' width='192'>
      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
      Av8/GLFsw0ynv6wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Heuristics Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Match Marin &amp; TM2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Match PeMS &amp; OSM' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Match SF &amp; TM2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Match Tom &amp; OSM' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Ak2X3f+XnvZVZWlm/vxu7MGuwudhceNABICgREgTrweKRIAhQhik4i
      aBRS8EKn+0MRkk6Kk0SRwaDoJIE8SiIvgkZHB5GiCIgEBEPCEViswZrZmenpae/KZ+Z77/7I
      yqys6uqZntmZ3e3e+m70TndV+vz9fu9nvu/3xNramqUHay1CCKSUqN0vsYVHrXYfANpoAKSw
      eF/5RYL7fxhjLFJKAIwxCCEQQsTbSUmxWOQ4YHd3Fyllev/D/yb3Zq3F8zx833+5L/lI2Nza
      xHEcrLEgwGiDtXbg/rJQjkrfZ4IwDJmZnnkpL/slhQOxsCYvGoiVQDeIbDggGPGXEuHP4K5/
      jGjuHQBEUYRSKn2grusipcTzvJfhlm4ds7OzXL9+nXw+P/AMEiHJCoXW+hV1X8kzT9/P0Ofx
      l/Hfyb0d+L73t440VsX3m9yztRYL5F9B93wnIYHUKiilMoIuoPd5FsZYukv/C+71P0KGOxhj
      UuFPlCiKopf8Rl4MhBDMzc0hhMDzvFTpR40IURTRaDRe7ktOsbe3x/Ly8oBwAxhrCIIAOCj8
      o5Dcn470wOeu69LptO/sRb+CII3pD4taxzcfK4HA2t532HQbsAjHJ7j/g3hP/CSKKFWSRIla
      rdaxcX8SKKWo1WpYa8nlcrHrkB35ILWMe3t7bG1tvYxXG8NaS6PRQErJzs5O+v4AlFRUyhWg
      5/qY/kiRdVWzyI56xhiMMUgpCcPwpbmhlwHSGIPWOvVzgdRaWBs/gKxVUFJhjCH0FohOvxfv
      qZ9CEA+bSsXf5XI59vf3X5YbejEQQlCpVFBKpW6h1npghBNCkMvl6HQ6tFqtl/V6wzAkCII0
      NqnX66kSNBoNdG80TowcHHR9RiGrCADdTvdI+x1HpC6Q1pogCAiCoKfxApuxAgCu45JsL4Qg
      mHgjunSB3OVfT62GEALXdWm1WjSbzZftxl4MCoUCvu8jpcRxHLTWA3FA4ip1u106nc7Lco3W
      WtbW1nBdF2stzWYTL59nf3+fzc1Nmq0mQbeL0f2YJrvvjQQ6m9BIlOflVva7BTnqQyEECEEc
      /vQ2FDL17RNLb4yhe+p/RXXXcTY+Hm/XE5R8Ps/e3h6NRuNYDqG5XI7Jycl0NBz+F2JBqtfr
      L4sSRFFEt9tNBTUIArY2N2m1WnQ6HYJu7P8f5u7cCEabVHGstbg5l929vTt+D68EjFQAay2I
      HEIHg58xGDADCCHp3vcj5K7/Earx/IBl8TyPzc3NY6kAEAvP9PQ0rusOBPbJM4iiCCEEOzs7
      dLvdl/TaWq0WjuMc+Dz7/LO/38j3H4VE0aWIXcEoCk+kGzRSAQCsW4KonmaGEp84/b6XHjTG
      gPKITn8L3uP/DLqbA8fxCz7b29tEUUSr1WJ9ff3u3c1dQq1WI5/P0263B1yhJFvkOA6bm5s3
      OMKdReKSDCvAsMBnP0uU9paFWHBL8cNxw6EKQH4WWtchI/zJQ80+XCEEzvqfIfefJHzsn5B/
      4l9jw3pqIQEc12V7extjDJ7ncfXq1WP1MIUQ1Go1ZmdnCYLggHAN/363Ya094HZlA9dsCjfZ
      /lavz9jB2EEpNZBlOik4oADJDWunwoTdZy8yAwFuMiIk2+XqTyCCXYLz34MunCG68AHyT/wr
      rO5ie8dzHScNjK21VKvVgZd1HJAEvgsLC2lmBfoxTxKMvhSo1+u4rjtwbdnfRynokeOA3mbW
      2DgW6N2n67ovuZv3UiBVgGFrEUURxcmH2Nv4/IERINleSonc/DTh0nuIoijOJJXuJ1r8Jvwn
      /m9ydBD0LZPjOJRKJYQQtNtt1tbWWFlZYXV1leXlZVZWVl7xCiGEYH5+nnw+TxiGaSGwWCy+
      JBbSWnskQcz6/IcJ/6jvht3cbNDfbDVPnBIc6gJprTFz76B8/Y9oZIplWQghECbEItPRQUpJ
      MPlmwrPfTv5L/wS3+VymrmDZ3d1lb2+Pzc2Yp+L7PrlcDtd1KZfLt5yxeLlQrVapVqu0Wq30
      /l4KBeh2uyPPczvPbZSxyRbMssdOYr56o87q6irtlyn9e6chb2QhOtplauGtbD3/+0jXTVOf
      WQhMmidPCmoAYel+Og/9I9wXfp3c8u9gdJTWFPL5PL7vpxYmiiIKhQLlcvmu3/CdRLFYZGlp
      iU6nQ7PZvGsUkOQ51et1NjY3U2Ji9vsXc+xREFIciHGSdyWkYHNzg53dnds+7ysFEg5PkVlr
      Caa+lrNmjS+vPYd0nLQ4orWOLZGJcESEd/W3cKOtNDMCYNwq7Yf+T4QQ+F/6x3irf4jc+gxu
      4ys47au4ppEGV8nPK90FGobjOCwtLeF53si05ItFt9tlfWODy5cvs729HbvodrTFv52c/8C+
      UiCVRKq+YzBAtrP9c0gh6XaDww53bCCuX78+QIceDpxibozDJ9uSrjF8VTmH37P61lqc1iWc
      zU8ho32ipfegC2cHRoSEU6NMG7nzRUR7BaHb8U93B6J9yM8SnPk2WkyglErpxqVSKa03vJoQ
      RRH79X3CMERH+uCo2xPWpFg1jFFU5xtByCTy7WX2Mn9L1ae4ZFPAzWaTarXK5MTkrd3cKwwD
      CpBglK/vuDk+0TJsBpoHCg73+wqReTHeM79AcPH7iczhAVfy7zDJTLWuoK7+Dtabonv6f8PJ
      FXAdh3q9zsTEBPl8/o7c7HGAtZZLL1wil8v1PhjaQICI/5f664ehz+wdcZxDzp3uK0U/0dGr
      92TnfnS7XRYXF1N6zHGFWFlZsUcZNoUQBAg+2YkfzPzWn3Fx8jS2dIHKpV/BFM8SzLwjfVDJ
      Q8tSiRNSWRRF6cPMZp+cxjPkrn+YaP6dmIlH0Vrjui6O4xw7dumLQafbYW11DalUkpUcmdo8
      DLeU8rSDf2eVSsi+AsQ57fjYnU6Hudm5V9S8iNuFWFlZsXAwDTpc7EqwbiWzOUVLB7Sf/mX2
      /LOcOfMOPOEdqBVkXaosuSprUbLEqzAKkUKQX/2vqMZzBGe+A3/6IlJKWq0WlUrlwIylk4jk
      ue3v79MNuoRBn0oynKbM4kiCnwh9sukIfRqeTJNk99LqvzbMz88f/YZewRDXrl1LFWBU5fCw
      oooQgtDJsfuV/8hE7Ty56bemM8Oy9OHssJkgySgMzzbL+q5Cd8iv/H/x9ue/g1JthpWVFSYm
      JigUCiNvZthPPQmo1+vU6/WUmJh9RsMu0I0U4FaVZdgdytLDJ2qHv4PjhjQLlAhlVnAPE6Zk
      WxV0qN37PnY3/pJc+9LANDpgQPgHhFuINGOSnUqZFJUAhFugdeo7iOb+CuLpXyR49rcp+B6t
      Vot2++AMpTAMuXLlyrHLIt0M5XKZWq0WB7y2P7nlKML/Yvg/Usk4DpCDc0SAEyP8MFQIy/JJ
      kpz/zR6gE0Woe/8W9ed+k7wM0xeRTYcmx06GUuiT6bITTWLWYTQQMwTuNJ2Lf5e2nCb3xL8m
      t/J7NPe32MvQc6MoYmtri0KhcOIUAGKBm5qaSlm1NxTseDLfLTNB0+3FYMIi6yIZY3Dd3Iu+
      n1cS0kLYMNtzGIc9QGstkyrH1um/gf7Kvyfn9C1/Qo9IJtwME7WyLynrvmRfbnqswllAgL+A
      //yHYPVjrK+vE0UROzs7OI5DLpc7cS5Qgnw+PyCYB8iJop+5GcZR2Zyjvk9GgIQb1KjXj92c
      7xshlZasAtxqQUVrzUL1LFemvo7w8Z/CCdbTKZJZBUsKaNkRJjk3MBAXSCkHRgNv/SMEZ7+L
      YOKNtO/9YWSwhb/+31hbW0vdqLtRiHqlYLjZgBD9olVW8K21Nw9sb+G7eIPBP4/rTL9RGDCX
      NwqUbuYK6Shicephts79Ta49818wT/wMzsbHcEwDx3EOtBtJfs8yTbPuU1JES4pqMtzBFBbT
      /Trzfw3rVqis/27KjblZ54PjjpyXGyCjZUfU9P3YEQXNESPD8KiQur+mN1qbTCIkEwu4rku9
      Xj8xz1om1jmxulnm56ifG0FHIbXcJFMP/hBb9/xtVo3H9af+E8EX/yVu+1Jq/YfPOSplmk2R
      ApiwjRCD24bTX4MtXyC38ntA7HKdxBgA4mRB3sv3n0navWbw3Qxn71LhFwcD5cMyfYKD7zmp
      PgspaHfaIxMRxxFOkptPcNgDHa4PZJF9kMYYCLqUhYOaeSPOwlex1qkjvvIhFk59NXryjUPt
      VwbPm40PkrQbgHT9dLvsNuHEG8jtfImgsc7M0r23zYU5DnBzLo7rYrFIMRjrDLs+WaEfRW8Z
      3vfAu5Cjn6NAoKQ6MXHAARdolBuUDZKzKdLhgHOYPRhFEZ1Om0nlkX/oR/jv3SmayAMZoux5
      kheUbKOUQkmJiBq4134PETUHFCCKIqKlbya38uETa/0TVMoVFubn03RxoVA48A4SK51Y/iRl
      mqZNRZxVSp5fSmpkcCRIJsMYYwbcIeDAHOnjjLQOkGA4BZrFKDfoSK6R1vhGc0/B5fL2CwNC
      npxz+JjJv1JKjLW0Ln4QPfE63K/8PMrEQVgSaOvcFL4T4ZzMBBDQfxb5fJ6J2gR5L4+SiqnJ
      KYqFYv8d9B5lIrQDRgmLtfFzm52d5dSpU5w5c4bp6WmUo+h2u2khUwhB8l963N6h0rngJwAH
      0iYDlcZMgWrYQg8Pq9ntR0FrzXkn4soLv0VQ+n5ct5K6TKmfP5QKTVygZPSJ8ouYc+/HXf0T
      ukvvHfieXBVhA+D481NuhmTehLXx5HgpJV7Oo9PtpIKadYmS91IsFqlVawdGjWKxSLFYxFqb
      zmtIeqAaawi6QT/47rlV2XjuOMOBg351guG/b6uqmEHgLXGm/Qw8/6uYB340PYfWekC5AJSS
      EOyhOptI08H48xhnAuvPocKtQeEnDsA54S7QMIQQAyTBbrfL7t5u2jEuMTC1Wo2JiYmb1kiE
      EJRKJSA2WEm6s1gsUqlUaDSbBEEXgSAMQ1qtVupOHVc4cDAISpAI5VGGu2FXaJSyaK0x/hKd
      nScptK5gCmcQQvTpD6aLs/kJZOMF0F3wJjFuFZufxbn+31FRC+tNE+XmDnCItDaEYcAJICje
      NjzPY252Lo2Nmq0meS9/WwVCpRSVStxbNOmA5yhFvlyh2WyilGJnZwfXdfvU7WMIZ5Qrk/39
      di1+1pqnymENoYnwu2u4X/oXBK/75xi3lo4A3vqfIoQivPABIs3AqKQmXofa+zK5Z36J8L6/
      e2BkktbinuBC2K1AiLg9ZbVSvSPW2fM8PM9LXa6kAXI2gD6ucLKWNEs/GBUEHxWj0mwxBNz3
      4+wryScaEW9/4mcpPvCDRGoSrTX5zjq68hoiTToqJEE5gK4+ROsNPx1fXximwZrWGm0MR5r1
      8SrCnXZNEperUCjELlGjMdCe5Tji8NaIt4nDFCdxibT0ccnz1okpPn7mR9l96j/g179I5YVf
      Qpcu0q08OhAUJ6lQ6HddSDo2Z7sxuG7uxKdBXykQImbz1mq1Y08/SRUg67O/GEG6GY06+dfX
      IW+rVfnsmR+mc+k36Vz4AcLJN6cPNNtKJck4DM8PTuYbd7tdcrQQ7smh6Y7x0mBghZgELzbb
      ky2cZY+XLaZZa1E64k21Gh9b+F7E7uOpgCd1iCQAT1yd4T73CfXBVx3cfBnpvHrmDo9xZ5AW
      woY5OTdSgsOKX8OU6uxxs9XfrIvj6ZBi9QKN1upAbjlRhoQVmo1Pkv2T+QWFjY/iXPiWO/VM
      xngVIXXghiexw42DqOGUJxzOxhxWruzEGK01s66gaaGYcZ0OsBQzlj+lUXc3cC/9Gk5pHllc
      uvW7H+NVDyeb6z8sJZqFHCGkR0F226Tim5zbbbW4JE9RaLawva5nSbvELGs0yyQFUJ1VzNK7
      aJQeYOz8jHE7GDkfYNgNyrpDLyY9CoPuT/IznXdpTTzCruNRLpeZmppKS+/ZmWTZKZrGGDAR
      1nIgOB5jjKNCZoV7mAY9HAccNk/4MJLcjZAIcTLx5UzY4LPNiE8/8TRhGA6wTkfRpqWUvfmv
      cqwAY9w2nKzwj8Lw4nCjUqWJa3IjLtHweYb3OVcukLOKz4vzbFt5kKXXQzZQtjrESgi63RNB
      zBrjpYcc7uKWFeBh4b/ZxPksjpJKtTaex5ssOTrRafAGz/Kx7TYNrzigIEnxRSmVKb5YpA0p
      FApsbGy8bCs2jnF8IVZXV202s5J+cQSe/63gRiNNkvZMBH0LxSf3Av5KLUdRDI402R5DyrTJ
      rfwBQrch2KVZeJDivX/9VdVGcYwXhwEFGJWrv1M4ynGdXvt1IQSfbGp8KXjMH6wqJ93nhucO
      AHiX/h86s99IcebiiWreNMbdw0AQnPXLbwVHCXgPK65l9822TJl1JevdaKCVSnJ9ySigtSYM
      w/TzcOk95Hc+dWKm641x9zEwIeYw3Kw+cLP9bxQMD58nsfBVJQmAtjYoHaUxQLaAll2HIAxD
      pCiT62wQHXOK7hgvHVI69I0IbDey2jfCqMzMqIkz2X8Ty15x4pbcdSQToj8BPnHTsnWBBMaC
      UGNW6BhHxw3XCBtVIzjMch+2f7YD3GGzxkYV11wBBSnY1xwg0Q1TNhIo08ZwsOPEGGMcBnmY
      +3JU4U+2HYXh7bNxQDbtOurYURQxmVNsR/01B0Y17cpC7XweU76QNpEdY4ybQY6iQWct8q0E
      xUepBmeFflQnuux2NQm7UT/teSOFAXBaV4jyp09My44x7j7SguthhathGsLNgt3kWDCaHXoU
      pmmCgrCECEIL8ghxiPEXEM0rBEyls8bGGONGkFnLOowbCekoPtCo/Yet+zDf6LAmXABJd75R
      XfpGjQTh1FvJ7fwFjuOws3P817Ad4+4jbYsyjOFe/aMC0WGXZXiESDI22SA4+/vNimP7RlCS
      oABzg9EnvS5RAKtxCNjfD3Ac51WzrtgYt4e0O/TNAtxRsUGC7JyCUdma4WPBoHs0MqBViufa
      EffmVdo25TBkGaImv4jqrpHP56nX68e+bccYdxcjTWPWbRmmJI8Kjg9Lb96IEJfdfpQLtK4F
      VggWnMPjhgPHthbZWQF/HiklYRjSbrfHQfEYh0IOC9GwoI/CYWlTYCBHf5jVHh51hkcMpRTP
      BpYHfIXuzQc+EHNgUO2rqGgXRYDSLfLLv4EpnMaomAeUz+fZ2dkZjwJjHIoD8wHuBAkuiRmy
      xaphpRn+e4CIJyV7YchUIYfQg9dljcFf/TCq8QzGX4j3tfEEmrD6KEH1kXieTE8B2+12usbw
      nSb4jXH84WT59jdzMQ7L9AzvM7wK/PDv2UD40GMJMNgDcxW8nU8hpKB1/99PY4OEI2SthSFr
      7/s+Ozs7aXu/sRKMkYUEDmRJDnNfhtOayTZJT/kbNcU67PijzmW0ZsqRbGsGhF9KSW7nL4hO
      vzc9V7aXUPZehjNVjUZj7AqNcQAvqjViQlHI/g2jg9pR1IrDYIzhQl7xlVaEzBzfGI10S8SG
      Xg90kcueczhod12XRqMxzgqNcQDyRoJ4WHp0WNCGU5rJNsOcn+y+ybaHnX8SjSslq3qQqWrb
      a2mjrOHRIXvM4TqD1pput0ur1RqT5cZIcSALlOCwPP4BCnJmimK2WJZsnyArkEcRQGMMD/mS
      x1sa2WuNiLUQtQYabSUxQPb64GCPUt/3abVadLvdF93aZYyTg0Md9lGFruG/kyA0m/UZToMO
      1xTg6C7WpDD4SnAtShpoXcL4Sweqztl6Rfb4SU/RBNbGjXYbjcZRn88YJxwHFslL/h4ugo0K
      fpPZWNk8/nDRaVQm6ajUBK01D+UlX26FeM2naC//Pp0L3z9wjdlzZCvSWSVIfkqlEu12e+Qq
      lWO8OuGMajx1GLJClfw9bHWHhSvrqtwOqmjevP4brLeW2bz/H3BRxqvSZ33+7PGzRbbhjFDy
      fbY36RivbqR06KMIaCJoSSYlaWUyitV5WBxwqzBGM9d5lnbjMkIZoiieJG+MwXGcdF5wItDZ
      mCSroAmKxeJ4wswYKQ41g9nendmfrLBHUZT+ZBdbHpXjvxEv6MYQ4C9SjPYorP3xAOUiDMP0
      WrId47KuW1ZZb6VWMcarAwc6EGYteoIjk9FGbDMchI76/maK0Tr9XZQ6G5Sf+UXCygU63lmM
      7i2PZHSqAK7rDiydlBw/GRUS4c/nx72kx4ghVldXbdZKDxeKhmkSN0txHubmJMceztcf+UIF
      2K1PkH/2l7H3fh+t2ltoa4svetMkpURKQd7LY4xJl+601qbNdiEOrGdmZo583jFONsTKyoqF
      wdRm8vco/31UVuewkWHY/RkeDUZlY26mFMrsoJ/+D1x3pmmcez+v8f2B2MQYw/z8/IFzra2t
      kcvliKKI2dnZIzyaMV4NSNuiZIPGrJW+0cT1W/HxR+2breRmffv04oYyVNZajJrEffQfUVl4
      O6ef/3lUtJ/69koppqam2N3dPXBu3/fT9cbGGCNBGg1m247A0Qhxw8ha+pv5/tCv1g4r2Shl
      SI5jjCEMAirVe5EX/xadZ/8z9NwrIQS7u7tpX1BrLUEQsLGxQaPRIAgCfN+/nec0xglF2hox
      wbAQHiXQHf7swOSVEaPEYZmYUa7XsAuVKEbJn2avcj/ezl9iyg/FN+Q4eJ6X7tvtdpmamhpn
      fsYYiUO7QtxOzn44WB61wstRj30U3pDWmtzsWzE7X0w7S09OTg5sUy6Xx8I/xqEYWCh7OM8/
      6rubpSxvlg1KtrlZvHAzBbA27hWac4vU23WstZTL5Rte2xhjDOOAaRyu7CbICvSN2JQ3oj0M
      M0tvpAiHxRjDFAcpBIZB12eMMY6KQ7tCDP89igwHL6bCe3MlSLY5rKuDED2KtHQJOq3buoYx
      Xt2QMFqIb9Qr6EZFrBtVdm80Moxikma5/cMs0mywLrwqYWvrRSnjGK9ODMQALwbZeQA3UoBR
      RbOsS5U9zo2UMAmwrbWIXBXHttJzjPHi0Gq3Yo6XPvkr7TijGJO3gmGBG26ZeDMYaxEMxg7D
      9OabKmeugm6Pe4HeKezs7LC3v0exWKRcLlMtV09sAVFmyWI3w3CmKIssL/+oaU8hBI5S/SmP
      h5xzFAYW3shVcWiNJ7zfISwuLFIsxLTxzY1NNjY3TuxokM4Iu1maM1vASoT8Ru3Ph/cdrjAn
      P1EUoTOUaq01nU6HRqNBu92m0+kQBMEAkW74fMKt4pgmrdY4EL4TEEIwPz+PMQa/4LNf3+fK
      lSvs7O6cuAUI00rwqNz7sE8/HITCwSa3h2FUZVhrzdzcHK7rptskrNEgCAiCANd18TwPYwyN
      RiMlvWX3IVeFsD4OgO8gcm6OhfkFNjY2KBQKaK1Z31gnCANmp2dPTKw1MB9gmPGZBJk3oi3c
      7oPodDpMTk6mtOXs+ZVSA58nkFKysbGBEIJCoYDneYRhSLcpMVEDMW6Ce8cghKBcKmO0YXt3
      O11wZHNzk2KhROmELEZ+YEIMHN7S8ChV3qMgCAI8z7vlFd1zuRyLi4tAPHq0222iKCLvOLSj
      iMlxIeyOo1qtUiqV2NnbodPp4Ps+nnfQOB1XOK7rHpnmcCeGvWSF91qtdlvZp+QaHMdJ+wGF
      UcSe1mOm512CUoqpiSm0iRm3Sp6cjJCTcOUTiwoHOzvc0RM6DtPT08Cdy9krpbAMtksc484i
      ztidvGfrlEqllENTq9VotVq0Wq00uL1Ti0tYa2m1Wpw/f/6OszMFIBwfE7bBGRPixjg6Dqh0
      oVCgUCjQ7XbpdDp0u907QjHodrssLCzcNWqy8KoQ7IE/VoAxjo5DpdHzPKrVKlNTUwdyv7fq
      ugRBwOzsbDpT605DCIHMVTHdvbty/DFOLm5qjpVSTExMpPEBHF6dDYIgTZtm6wS1Wu2uCX8C
      ma9hurs333CMMTI4UlTj+z6+76ertYxCLpejUChQqVQGPr/R/IA7CenVMN31u36eMU4WjuSQ
      CyHI5/NYa+l2u7Tb7bQFSfJ9uVweSZh6qSqG0quhxyPAGLeII+e1KpUKGxsbaVOphJ6ws7OT
      8nheTiqC8ibGLtAYt4wjp2SklMzNzaVZIqUUrusyNTWFtZbt7e2XlSjl5AqEwZgMN8at4UVX
      NqSUzM/PE0XRy8oZzyuHzWjc9XmMW8OLVgAhRNp5+eVEznGIMrPJxhjjKDgxDXOklCDEeFLM
      GLeEE6MAAhBuEROM1/8a4+g4MQoA8dRIG4yrwWMcHSdGAYQQSK86ToWOcUs4MQoAIPPjWsAY
      t4aTpQC5GqYzVoAxjo6TpQD5GqY77g80xtFxohRgTIcY41ZxohQg53h0w+7LfRljHCOcKAXI
      Ow6dE9rBbIy7gxOlAI7jYEd0mR5jjMNwohRACAFCosejwBhHxMlSAEDkKtig/nJfyhjHBCdK
      AQCEV8GOJ8ePcUScKAVI6BDjqZF3F+12+7Zb5QRBcBeu6PZxohQAQHoTmO7OuFP0XUSn02F5
      eZnt7W263aOnncMwZGNjg3r9leOinjgFEG6VTn2d1dXVsRLcJUxMTFCpVGi1WmxubtJoNG66
      0GH23yiKXjGZuhOlANZaIllE6gaO61Cv19nb23vFPOzjilHuTrVapVar4TgO29vbrK+v31QJ
      XNdFKUW5XKbRGJy3kawJ8VLjxCmAVYWUDuG4DpVKhUajwf7+/lgRbhOHrQNRLpfxfZ98Pg/A
      ysrKyFV6sisCJWs6OI5DGPbncHe7XTY2Nu7eTRyCE9Xut9VqMVubYvXpBhUB9XqdZrNJLpdD
      Ssn6xjqu41Kr1V72OcwvB6y16fNot9tUq9Uj72uMYW9vL12dE+KGablcDmstQRDg+z57e3up
      scnn82mzhDAMKZVKCCHodDoUCgVarVZ6DUnbfIhdpOx57iZOlAIAWGOw069HbHwSOf1VaK1p
      Npvxd9aiI82lFy6Rz+eZmpoi7+WP5ST6ZMWWo6Jer1MsFtnc3GRmZoZGo3FkBUiEP2mRmfSE
      ajab6RxsrTXlchnCJrJ1FdleRjav4na2wJ8j5/iY3CSmeA5ROkO73cb3fZrNJmFpeBEAACAA
      SURBVMVivCCf53lEUcTW1halUumWF1C5HZwoBUjWti3Nfw07T/witfwclO4ZWNDPGJMK/dra
      Gq7rMj+/gHoJrM3tIIqi1K3odDpEUTSwxsJR0Ww2UUpRLBVpNBqEYcj+/j7dbpcgCBBSgOVA
      H1djDPv7+9RqNdrtdroqD1ETs/McTvsKTmcN33SJLmtc4WD9RWzpHN3JtyC9Srxug7TY/eeQ
      +8+g1j+G7azz8dM/xNl8gclul263i+/76fUka8AlCna3RmzR6XSsd0KWFtrY2MDYuDVKS0g+
      s7vHw9UJJonSRT+01lhjsdj0oRpjKJfKlMvll200SNwTYwxRFKVL0QohcBwHKSWe53HYu7LW
      0mg0iKIIIQS1Wm3g+739PYQQNOoNPM9DG91f9tZYhIwXJvfzsVuTz+dTy1+r1Wi2WjSbDfI7
      n8HZ+Bh400T5BSifwxROY1TxwMqhiVuT3Ed2zTlrLXvdOs9sXeKNzU+jTr8HVTlHGIY0Gg3m
      5ubodrvs7+8zNTWF7/uEYZgqxp3CiVEAay3rG+tpxkIpxQuh4PruVWrV05SXf5uZ+Tdz3T1F
      VRiKOg7AHDceBIuFYupWJL7q3UJi5YYXB08UNFGCfD6f/gzfaxiGNJtNoigijEKiSON5HkKA
      67pIIalUKunx9/f3iXQ0sL5ydr3nfqAryLkuvu/T6XQolorU6/VUKb2dv0A6PmHtsXTp2uTa
      E2FXvXWfEwUQYR3RuopsXIrdozCu1Fu3gvEXCb0ZVvauc9r36E5+DbixMZJS0mg0mJycpNFo
      sLOzQ7FYZGpq6o69ixOjAMaYNPcvhEA5CivA//Mf5vPT70VNPMhctEW39hgbRmGt4YKKyIn+
      8Jo0+dJak/fyL3pE0FpTr9eRUhKEAVEYIaSgWCiilCII4/WPhYjdj06nQy6Xw/f9A+3ktdZs
      bm4ShmHsFghw8z77BupWEAQNdo2gIYqc9QTnpCbodllaWkqD0PX1ddzcQQuaKEFWmBMFzPZ8
      FULgBBu425+lu/DXsNamS1JZa1DdDWRrGRpXkN0NhONhwjbCm0AXzmALS+jCEkIoCPdQzReQ
      9ecR7RVs4zKhDvnkmR/jvolF5oul3nFjZQ+CAMdxKBQKdzQ2ODEK0Gq1aLZaBN1uqgCPB5Ka
      2eWZtqGUn+CtJYXWsSXbs5LnQkFNWi64PXdDSmRP4KWUGB1nMm6mCNbatGN2uuC30elqmL7v
      D6yvcNgxAOZm54DY90/2aWvDvrY0wy7bQcSOzREJgYulrAQVKZiuP85EsIxe/CaeabUwzRVO
      l09R9n2KxSLtdptms5mOeAPn7rmEiQIYY1EqjokEg66LtF3cp/4teuarEc3LiPpzKNcnkiXI
      T2NL54n8JYQ/S6Q1TSR1A3uhpm4FLQPawsM7f8LpcBlbOI0unsEUziCcPNsaGpd/n/NuhD79
      XoyxA9mhWq02cgnd28WJUYD9/X3anTZRGCGVxErF5wKFNoY3FwSfbBiqjuBRX6SrYgJ8PlA8
      4hlkzzUYlX7TWlMsFCmXy6lgJq5E7H5EcToQYKgYlLgWkdbYnntwGDpBm0J4nWD/Cs8VHmTb
      X0K31nAcj0quzFS4TsnxKPoToOP0YmKxnXAb9/Jv0Ln372Ct5boWPNW1vKUgqShoW9DG4DG6
      WJW4M0IIjDZ4LojGZUTzCqp5BdFZR+SnsIDcf4bwnu9BF04j2it4T/8c3Ys/gOysIlvLfLn0
      Jq4UH0RYS1EJysJSllB1FSVhB55RX+lMuih7JBVrV/4b9wSXiS58L8hYadvtNouLi3fUPT0x
      CrC7u0ur1Yr9f0dxRSt2rGSWiFkRIXJ5/qSumVDwlpKD7c0ZuLy3zKnqaaQ1acYhGQmGH3QQ
      BCil4ok3t0izsNZirEX1hExETVTrCnL/GWR7mb2gw5XZ93AxeB4Ki3RL9+F7JdYj6BjLWbef
      +kyENYExBkeE+I//X7Qf/WepQNWNwFz5TRZ3P8WTp74H1d1hceltB67LWjsQCOev/Q7O3pfR
      1QcxxXPY4mm0N4vQbVTzBdznfxVTexjRWuZ/zv4NJIKvefafYqv3Ey68m6B0EemWoBfTJIKd
      XHNW2JN4IRtPAITWsvn8b1HJVymcejdKxFyiubm5WxOMm+DEpEGjnmuTYFrBky3DOV/gSAdM
      xDvKDh+vR/zRbsB9nmQhJ3GJ6CIo9ATeElsobQwIQaICaZBnLUEYIiB9eYdBCIEIdlHtZWTj
      cmwhlcKEHWyuhi2dxSiPJh76wndyX34KeCAONq0FYygJwYa2WIeBLEsS66RW24AWLtZEGBtf
      U82VmPPfRlt8O+eE4H80NAsY+nfFwLGssSDBotDFs6DyyO3Poq7+NiJqoFUR45/CCBc98Rjm
      /Pt5fc9FaU/8DLnH/yVCd0D62Ew2KJsJSp5Xci/ZrFGijEIIPKXYOvVtXLPgNhq8rugNPOtk
      JC6XX9yiiCdCAZKVawCSd1uSlnOexKWf5stbzTdUXDZf+DAbNsenJt+GVWcRTcPbir3hOGoj
      lI/h4IsZQO8FJkogOmuo9gqqcQnR3UQ6HibsIHQbU1hCz34tUWERa0Abjbv5CRpbT2InHsW/
      +I3klIMUAh3FVj5xx3wL7UNGmyRbpJRCSoVQeVSwDd5Mmk1KRgMpJe++9M/pXPh+jDcD1iK7
      G9C8ite8jGxfRbZXUaYdO0lCohe/iWjmbUTnvxujCoS99vP57U+DzKFNP4uELNB9+B+Rf+bn
      8LpbREvvOfDsEiXIuprZ7FHWHTLGkBeWe3MS9eyvcW32ncyVz1Cv1+l2u+zt7XHq1KkXLTsn
      QgGSly2F7D9YYF9DyY1Te6nfbwLmz76b2rU/YvKFn+Xq9LtZKd7PhnVYMPsUvvyPiUr3I6VC
      qyLam8X4C5jCEkYVBxTBbT6Hv/FRjHDTKmc4+3ZkYY7IWBrGwuanKe18lu6VDyPrz6KsZi83
      hZl8PdX7/jaOjV0uv5fqbIQNhOlbegFY+rFENnWajVestZjCErRWsLnpAQELraVpBZ3CBZ7d
      32KlMMNjm7/LuebjmNJ5TOEMZvoNhIVTCOUhW8u4l/4z3fl3p0JLJl2q/UVyzWcxlfv6o4e1
      aBza9/0Y+eXfjPc/+53pdWZTpVl2aPJe4jgp6mfxpKKgLKEQFItLPGsquDicEoK9vT1mZmbY
      3d1FSpmuWnQ7OBExwMbmBsaYgUBuWUsksOT0BTbhmCQvYitqU3/hDyi3r7BeehBn+g2cvfof
      KV18H9pfgqiNbC0j29eRnRVEdxfp5uMFuRHg1Wif/jZAopSiri3LkWClE9Iygge3/5izG/+V
      euVB9t1ZUAWm9z+PP3EfXP9TnHPfgp79eow1uK6L53k0Gg0c5Qy4A5/tWF6XHxTCxG+GvoCF
      6x/Hb1/l0qn34zae46p3D1JKQh1RloLFaJVivko+V8Jm/PBswUpKiTBd/C/8H3Te+NMHLLiU
      Emk6uFd/m+7Z96XfDRe5nLWP4Ox9mdY9P4gVvVQpFiXVwEqi6ahg+4kJISRKSsLWKqK9zlr5
      YUIEz3c0X1t2mCyX2N/fJwgCSqUS3W73tpXg2I8ASZ7YcRwcx4ndAmu5Fgnekh90YxLBMcag
      I82U42Mvfief2u+y1HqKs1sfIQzbdD7/T1k5+71EM29hunQv1ep9MccoY/2TY4VWsBJaXmhG
      dIzlnKd4Q8mlLCyq9k145jLywg9SMRG5p36a8Oy3oEsX8ea+FvvFf4GsPgDeQppPzwp2goqA
      thWUegFwtrIqpUy3L1Tvob35aXJSUCsvMUMc6MucBCw2N4tApJ0zEiHMxhIAQnkY5UPYwEh/
      YNQRQoDKo2w44LJki2oA3el3gD9H4emfpH3fj2JUAWHFgNJlFSD7jpIsUS5XRG1dolR7hP0o
      4lRO8JctzUOdDXKuy8TEBGEYpiS8WyH3JTj2CtBqtXBdt5/NsJYvhQ73qghr+u5DAmssUsg4
      2DOWWRdCoShOPozvPkhOWdwnfpL58gxfMfDphqZlYM6VTDoSX1iUEDQNbISanQimHMGDvmJd
      CwJr8ZuXsP4SWgisjFfXzG19CiYeQZcuYoyhIyfIv/YnaD3zn1AP/RimHY8CUaTxennuRDjK
      ChraUuilMLPpz7SQBtj8LGVH4TkAfuqzD0CQuk2JMGaFOLHOnz/7Qc4Jl6JSYA2itYxqXkG2
      rkKwC63lftasp0DJ78lxw/KD6LMl/Kf+DZ0LP4D25gZGiWSfZPSxloHwXKsiz01/I6cVrIaC
      e/OKTzU09UKFc3knFf5Go0Gn00mrx7eCY60A1lo63e6AT1lH4WEo2whr+xXe7L/GZDIh1qIA
      X/UKPt1NKJzCKZ7lNWgCFI+6gl1tWYkEXQPNyHAmJziVk7y+IMlj2DCWvNEsOJbdtSdZmVng
      vArJqzzYCGf3S7Qu/CDY/nV01SyFez9A48lfgDPvRXmTuG4lFeokyK46gmuhZT4VlL61TZTB
      GINQDuign3YUMnUt+taVA8Ke/IQI9iJNPRLI9irO+u+TzzkYA8ZfwJbvoVN7FKN8/Cv/Lw4B
      RuZT9zN5tlk/3xTP0L337+B/5Wfpnv8AunRhoA6TVWJHqlQZks/aeEhrQUgwhtfmBZ/cazGh
      ikz0XMYEQRAcoI3cDMdaAYIggKwFA54LBQ/lwMEZSBsmQpH8nggOgINlXcOCI1DdbYyKS+1b
      RjKNZspYppXgHhFb5KZwuBbCkowwUYhWDsuh4GHHEAnF+txf5WHX0Nh7AdW6in/51wln3wFC
      IsXgSw/cKYr3fy/Xr3yEQt5HLP5VYLBAlBOCtrYY0w+Cs4Flcj/GGKxbxXb3MU4xVYL4pvvP
      IBC96qw27BtL2N2lKQs40qXQeoFa9R7Oiz32Zt5BbvKBAaHWWiMQ6Pw8tFeheG7geoapE9Za
      Inea9mt+Av/pn6E7/06CiTceuEfoUzKyo7mSCoQg6l1DEcNrfIcXrn0Bf+5+HDfP9vb2bc8f
      eGVygI+IbrcLIkMkC3aYC6+TlwwMr3FqPy72QPygU04N4Au433f48zZI3cY6BS5pxVZkmZMG
      IcWABS0LQ05Ydmz80F+IBGdVrBzPRoLzSoOxlCoXaF78IAgHs/WZtAabBpMq9rsjWWLizDez
      avI80w5SC5gUihwpEVLR7XZTElyn00nJcIngSSlh8hFUdwWpFG0Ea1rwbCT5XAf+tAUfbcFn
      WobVKB75zuYkS6VJHix4vL2kyBeXuMe15EtnEa1rA8IoZRzsO0ohCguo5pU0ZZm16tmYItmn
      5VRZPvd9eM//Kt7qHw+MRNl9sj9KxaN5W1tcCUHvPEsOSMeHax9md3eXXC7H4uLibVEkju0I
      YIyh2WphkoBRwEZkuLD/F3RK34yOdD/rQEb4I9MrdsVZCetYclhq0jLnwNXdBsqZIjKG+5y4
      GJYIfzZwOyMsX44ctOPQtZaKNOwaRQHDQE5NebTPfhdb2tAKYUmNnpaphGB68e2sBoIvhvBY
      HjCkI0UUGZDxAuXFYjHN/2/t7KLKlZgUp6Erz2J2r7NNREFCWVoqEmZyMRVB2kEmqBRQEILl
      EGaE5rHN30PPfwMU5pGrnxxIsw5Y98IZnL0vp1ZcCAFS0jDQ1JJ9Y+loi6sk2mgKUjKZq2Fm
      vgpX7+Fc/XWCe/4mNqMI2ZRo4v6VlKRlIS8EAQK/R6VYqp3luStPcbZ7iclTb7ttesSxVYB6
      vY4UIi1XCSG47sxwX3ctfVFCijjoExmf1JpUGeIdQQjwtj/NQ/tXaNdfoH72A5wXIRaJkmrA
      Z4ZetgLBw67hqUjiWIuQiiuB4LWOSSO57EuZUIoVLTiFHQhE08sQAmsNj3iKjcYq+Wd+ifDB
      n0BLH6UUeSXYwbK2tsW+ho5yEYUiwuapdAxlYakomK8s0KHFY8W+wsZpfIswGgupcCWWNtcr
      tgkhsPlZTPM6tnIfU+3nsVEH03MnEzfLCMmu8HE7bS53IbLxM1QYCgJqDsy6Iq5xCDCmV82w
      OQSG9unvwK59FPfpnye6+P0IodIRIxskW2spSsFaGHOJ6pHFV/Gz8rD4p95F/emfwzv9Fkq3
      mco/lgqQVH6jKEqFrSsknpQYWUAGu0Sqkga6iRVN3I54SVV6AanEaa+g28/Rmv4GzNTXk5eF
      fjbD2DQ1aXQmD68EAsuDruHzgeJzXct5J7aoiQVLXJhY4QwzSnFJS86pw5dydYRmgVY8xH/m
      H/A/H/45OibEiersuR7Vao1Su0VZwVzFodVsUvBdtDZIGRf9mk4hvc5s+ndUEQp6LSXp3a8/
      j9l5nsC/QNmELG9fZctdoC0UTj4PVpATlpKUnLJtHswLJCIdkbQ2OD0mqc7UGoQQSOVgozZS
      SroL7+QyVV7z1E/RvveDaPwDMZuUEs9CiMV3FNc6mjaSRmBpmphX9bA/wZcuP86b7nk0TSXv
      7+8TRRGTk5M3laVjqQCdTgdjY988CWbXtGRBWdpz76Jw7bfZO/WBVAiTQNCYJC/aGxWIrYzb
      uYYu30ukKuk50vSgHbT+CaSUWGNpIygJywVXx+pmY6pDai2T3LiFGSKex6GJomj0ADdmWUts
      /QXur38S7c0Rnv5WIn+JN0tBTjrU9QRXGy1ORW1ELraWzUYjvf/kfEIINtwlFnvXmc2xZ3n/
      2bx/iKCpNc+Hko6YZyb4PM+2Lfcwy97m88zcc5Zr1uGxfD9taq0lnyvR1QEmKXTZQVrDcHAM
      YN0SNthHOSWaE68nLE9QePon6dz/49hcja4VtK2g1a2zbxUN4bMRWhrG0DKw6ArmHfCT0eLs
      t3Lq6Q/x5cIcr5mdTVOiRy2MHVsFyApPzJkRtLUhUlWi0r3k9z9Pt/r6Xolep3NepYpfSDJ1
      UDrgOgXc/S9S3f4cjfn3op0K1li06TMZs0iCV6EE9eY6Z00H6Z6OtxOxNU2EPzvt0mI5IyKu
      bz+DmLiXkpRoC1d1TLI7VzlFd/J9AwqnjMYi8YXAeHnK+UFiWTb9mOzjSUEI5LI8filpGUvD
      CHYjQ8saHKUIoghfSR5e+23EwteT9yvkaOG7Gq2mqIl1lBJcjzJGIakc5yZRwQbGXwL6I5/W
      OjNRZjDdijeJG6yjdJ3K7jIqvApY+Nw/5C8v/O9c887yUF4y07nM+WgHPfs2vtCRPJKXPNmO
      mJLxc9W952yVj3/qXSzvr1LJeUzk3LQVTqvVYmlp6YaydOwUQGs9QPRKsh8VqXg2gHlpCYv3
      4m1+jE7ldX0LmMkAJX8nI0C98jCt4iPIzc+R2/0c7emvi7fJ5s97EELED7733YYzy3xe9ANE
      248zEqXr+RhYbVHScnb/s1ytvYbnupATMOdYJoQh4SxlpxamtAFrEWKwDpAtKGX955KBK5FF
      W2hrcFR8376EmiNYdKHkKLAW48QxglM+jQ3WCXMTaK1xXYfS0sO4ax9hPwwxQUDXK+JlXDzj
      LyCayxhvYUAp06IYoMIdaK1gmtdo6y5P5s7yuid/BjP9JmbCkGjxHUSn3wthi7c+8/N8ZuJd
      nCm/Dlk+jVx5krA3h6HRCzSslGCH6gjF81Rzksc7hkeDBrkeXX1hYeGm8nTsFKDZbMZWPOxX
      EkMh+UIHXqs0WIt//fdoTb89dpMQ/Vw4PcFPhDphmgFOtE9u62Psn//BvsAPJWyE7DV4kr2C
      mja4SFq6n/kx1vS3GREMtxBcO/Xd3C80pzKzE7Mzn7Ivd6BmYAYDxGzVNT5GfMFn2s/Saizj
      LHwDLnEgam0SFPfSlpp0HykltngKtftFTPVBcvkiQoVE/iIi2MXzPGZcSdNYXBGfw3EcKJ1D
      rf0PtAAZbiE617GtFUxnm6axWCEw7gQUl6D6GG5hhodMHdN+M91z7+dyx3IqJyhai5FF2g/8
      fR5+6qdx5Tbh7NchTRtFyEywCnurzHW2EQ64uUmiqTf1lQ7BfbLO7vO/Rn3pm5jJnWZ6evpI
      dYFjpQCJ9Us6iiUCcCUQPOAa8trg730G7S/R9S9wWGZsoDIsINe6jLv2EVr3fB9C5nCjHbzt
      P8cCYf4MYeU1qUXP+tTKtji9/TnE9NdipUgrzFJIrOj7w1jSzzzdZLGzDpV7+hc0xHbO0gqS
      +5ZSUpDQNRaX/ggwTCsAEMVT1LY/Q8eaNBDNuovZwDQ5j/GmUZ2YVBgVzsVrLBQWWffPMaVg
      orPGagS6OAdRk/L2k7i6gVr/GI1OE52fRhSWYOLNCLdGUSmM6ScftNZIICKPE8XNcauupKFD
      yuE6MmwgHYf1+b9OeeX3cPYvEe0/hcovUPKXWC1eoDj9JtYNzKr+ezTG0Nr+LMWdzxEtfCN2
      /VNslc4it7fJ5XKpm1itVkemSo+VAjQacc9P2+lZPG1oSodNDfcogwZkZ41g4k3p3F4SK9nL
      /WcRu0UCv/40wfw3YlWBfP0JvOX/Qv3ijxOJPOXlX0Oi6ZQf6k8YsRZpOhQvfQjOfS+hMWhD
      P8MEaQYqfegClKNwRIUnRJWHBCgTpUoYk9QsRpqUDp0NJIUQVBQ0LUxkDNtwJVUphRV5pA0G
      GJfZbdMqay8VCsQEN9PBbTyL7Czjrn8UEHj7z6Ce3KZSuodnKm9nQgjyuSLe9JvAGmT9aQoX
      3jcwKsUjkk1duIHKu3Shu0vu+h8yb2BdS2RlAePNYAvzeAXB9fwC08F19hsrrFe/hpbIU9r4
      M2b0Gs9Mv4spvzdhXggksFx8jJnqo0xKiROs8OTqn+MvvpXZniu0v79PqVRK45Isjo0CJA8y
      mfgipUQbw+OB4I25KE1RtmfeSfnyh+DUtxN5s0C/64OOskxKgbf1CXLbn+Ji4xpuAfLP/zJR
      7THq9/49QuuBhcap91G+9AsE3ikiVQYDjiMpXPoVmqe/i7CXvksmm2eFIOue9Mv+mgddyZOB
      pKYcXGupCMjbXlBO36pn06kARWAzgpo7OBcA+qNhcn86bA8UlgaIZ0KwHxrqIdSNILQWKQUX
      O01qu1+MG1sFdYKL30fu2X9HNPl6oonXowKoiSQGSXzHAkoYrHQG4pesW5ZNIiiloHSGaO4d
      GFngescwk+spj45pH2x9gaonWD733Uzni8wo+PLEo2DX8Xc+h7dxnS9Mvpu8aXOvXuVMbooo
      AlU6h5l+Cw8/++/5XOsRCgIcAfl8fqTwwzFSgHa7jZtzabXjLmnJC/elwJUCQ5yWtNKnfu4H
      KF/5EO3F9xJ5i73tIReuoiONv/kRAMLKwzQe/Id8aX+Xr258nPr9P0Fke7Tknp9vgcbSd+Cv
      fhipG7Rn3onbfI7u9NsI1US8zVCW6LDPILb0jjW81rXsagis4CkjecSVSNunFUDfoieCVZKC
      K6FOj58lzQ27Q9Kr4naWEd1tVqiy6p/DEpPjXCkoYak4kqWcQBiNlOBWThPMvgPjVvFay3G2
      xV9CNK/CxOsxlj7nqHd/2p2E1irGXxygQw8zRJPRxxiDyc8jWteQxQtoYmOU3IPXXuVM4wsg
      zjNZv0K0/Smkm2OCMqo8g3KL6DPvx+taXqOXkVc+SVB+kM3C/VSlxARtgqVv5r4rv8LV+fdw
      ceaegesaxrFRgCiKcHBSCxdXY0Gmv/eKU0JgpKR5zw9Rev4XaN33ozjNS+Su/T66eA5jNO35
      byZyalgswljIVWnPf1PPX+8XYiB2a1AzNJa+Ayks5cu/jJUerZm3DbhUaVp16KUnSIRVSJEG
      4uVeNqOBQyMylDCgBnPn2WwXQiCkBMwB3394tNDeHO6V30BXH6ZSXWA6LxG2RzlOKsPCgOkH
      z6ZwChVsQH4mLihKCcUziNWPYm1MGWlGlnhuTs/dKi6hOivY4qmB+80q8TDPx/qLyJ0v4YR1
      5vfXcFwQWKw1kKuB8jALXw9OlWudkBJbmL0VwvYaM9tfwtXrVEIJxQrSatT817La9bin8Ry5
      5d/lk2d+hNec+RbC7Wd5qnCa+/zDO3EcCwVI+mF2g9j9sdZitCGQMg60HJGS4iBxeRThwrso
      Pv/viPxTtO79IKaXCTHapDl7BEgGhTUbLFkLSkqUo9CRJiqcJde5jNu9RuSdS5UgSasa3Xvh
      ql9oSoh4VvT97qywTknLppGUhEHQF55Rk+7DIVpGYlUT8ljqhhSWCBGEs1+HYwwYjcnk5JMR
      dCAQ9pdQe49jSg/gYOMJMf4CbvtanGp2oAMxHyd5D4XTOOsfx0yYgWNDP5jP1g8ARPE07rU/
      wMy8hbr/MPv5HEUTQPs6qrPKhnea2Wt/SEH5lLWDLM3i+nPsFl/LzvS7WMgJwv0VrFlDtK7h
      P/+r3NdpkwuvEZ35Vh4t5PjL9jyTC4usrH2RyaXXMXGIbB0LBWi1WvHEh2YjzShYa1nWinNO
      PyOSJVEBhOUH6BbvywSmPSJXkp8HLKKXJuyzErOCYU08w4ze983pb8B95l+hOutI/5409shi
      oPKZ0gD6QjdM/CpazVU8pDL9oD0rMJnRJKZ7SFzBwH1nC2IAunSRy2qR82KQmZm9ruT8aafp
      /CxybT1+Xo6P7K4T5RdBt7EmoohkeygGsW4ZEWwfiEGG3SGIFVqaDrJ9HRE1EVtf4JQ2REic
      nBvPvy6dp1t9E5tSMiO61LeuIOwGU1t/RnTlGjXHw1iYyC/SrV7EqdyPnf0qFp/6twRv/DfI
      1Y+Q3/kcZ6uv5+mO5pHFR/hUvUsh32ap6B94V694BUhe/H59P/1MSolAsB/C/UpgrURHOs2o
      ZIV5GNkXBWD76fqBTsSDxLdk53iH/Yt/j+v159kNFRUhWZB6oH1K/AvpNUmnbxVTqrMZ7Aua
      R9O2Ah8z0Po8y98RQlAUlob5/5l772A5kvvO85OZVdW+n/cO7z08YAyAAWYwhkMOjUSKTiIl
      ipQoespwqLhYOUqxurulNnZDu9q4pU7SySy1S+pEkeJSJEWKXpS4Eo1IDscbDDAABvbhed+2
      uqoy8/6o7n7VDcxoNi7iToV40Y3q6u7qzF/+8me+v+8PekRnCWLSKZZSwmsjjwAAIABJREFU
      oq2gqgod0IWkZk5maFuLMcJhu3CUHmPQ6XFkfRWZn8WqLDLcJZ8aZDHsxO6Di2Bf+7ejS1EJ
      VVuF2jJENaRUGBOBykB2nL2eE2Snf4xUo4Tc/D42O44qX0JtPcCkv0PDCtxUlmP1FaLpN+NM
      /AjB+iPUxl/NZm2HgXAN398gX1/FPf8Rorm3o658hnD27XgX/4KqH3Dv+D0EkeaWjMPpSz+g
      ePBOCulOWsV/8QugWq3iOA5+w+84L6RsDmrYoWGtjXsASCk7qE1aRysx2xIW3wpSUlxndiS1
      OCQ0nrEYPEaKN5Gzml0kj0Yut6cMKqHZoVl446hOPIylE43avK5HSeoipnNpLeKkgCcd4ZKG
      Pi+R3Gteq43BWoOy8XdGtjNx1rq25Y9orYmaBGE60kghuZQ7zu1SQnYUsXYOYyw2O46oryHc
      /ua4tzLiIBqb4G/hrf09NmoglRuPgVuE7Bhm8G4imcFagxvuxOS4e2co1BZxTn8IN/KR9WWi
      8deiczPokZfScHo452sOpSXm2tfYU0PsmH6gwNFnP4wv++nP5pHbjwIRDx76dxzJSBy3l9TZ
      P0LoOgteH3bnUaLeE5S2LhDJNI9sVrh3xMVz9+sG/kUvgNbEBolWOq1zoXLxSGy3TXw/IjZx
      WnCEZKgwtsX3zQyAsoG8BHRn4gk6k0bQfL1ZS4yFvIgd11A6VJEURQLl2Yz7d1c9tTg4k1lo
      qSQ9UrISCUZlp53effTKCLX9JGbwREzehe3ITpOAaXhCEBmLbCbOlFIdRMDJgEIrTJi2goYx
      pJwCMoxpR0gP4Ww/jIjKDOwu4co6Qgq0KmDTQ1ivB9t7FJ0ZR1uDrC8j60uIrUdwaldpEVrY
      9AA6M4nuPUI4+mqUl0cIS/rcn2ByU4jacrw4CBltRFw78C4GU0MMBKuM9s7wxOCLMOm72Sjt
      McIGzuVPEd78qxxNW7zzH0GP/TAi3IvpaSbfgHPtS+R3TnHChixPvZ3l0jIXVwIOTozjNMfh
      X/QCCIKAMIrQTS2VPDY0DDfvvh1dSWzr1sZgtmSVdbdASSlZbliOpS026tSSSahBUhhb/2+Z
      MEIKdCSxWqPt/gJowYshlvO2gy5VO/GVNHMcoBbcOGGVtOGxlpHKE/hDt8dEWsZcv1Ca16ZF
      C626b/q1doDuHELre3MSLgYALgORw+T5DyPCEoQV7Mgr2M3exmAmg0cE5Uuo+hIy2EGe/UO8
      9AB27wJm+MWQHgDbILj519BWoKSF+los5KVzeBs/QAgVJ8aqS4hhge6/A5saACEYP/27uDJA
      qzTlvbOsFO4krK2iV77FUX8Vb/dx/Lv+hPLWUwTFXgbHfxjvqf9A464/RtSu4V75DFcn3ox7
      6ZOMDhxlwHUZ2P0HLmVPsO4qxkbH4vzNC5bG/48PY+LOJN1HSxBKIRx2m/aoNu2a16SwKuf6
      KEprcURRhHZTGGtxTUzAlHQUu8OY3feAjM0wJSUHaxdwowZh9mCHNra2lX22OGq/qCRpXiWd
      4Zg3dB85mVwIsB9KPTXwWuYT9nvraJs61mCEoCAFpciQ65rl5Bi1FnK8MymKxImx+bTi6Zl3
      MugFeJs/wL34cdzlrzJb2yKlJK7yWHQmGe8/wNbMO9hwxzmQUnhXPo3puRn8ddh7FufSJ9EI
      QhSpzHDMkjfyUoTXSyNs4OoSqrGKKF3ACR5BoFnL3kJKZDH1Nbz8FH27D9GfFlxzxihzlJG9
      xwlm34lc/yey469hY3eJvtVv0zj5+6grnyOa/Rk2I8va5hmOLbwDFj+PAs6Mvonq3gVKdU2f
      75PJZP7lLQBr404nLUhtbNt2djORSmJFvH21nTyzr7FbR4cWTpgx9VqdXD7PQ1XNnNIEYafJ
      kfQDWu/pPtra1BgW0/NksAyLWLO2ag0c5ezXJDSFtbvgI/nZkdaA7FgU0BlOFEIQpEexQrRz
      FskaB+Xsh0J7peBSIzaTbgSZSKJNw8hn27psa8NOdYNNPczg9nfJ7vwjujAPJiSaegNVZ5h1
      o5hhl+ruMiZYplC6SNio4qkIGtsIQPce48n5X+dIoUhdR5QrK0xEa8jys8j17yCFQRiJyI5y
      rXgSmR1nsDCOxqFfRCj/EsXyKag6+PVNMktfZrZ8EVW9hH/bv8c6BdT2I3iXP8WhxganR9/E
      bGMPM/0TyHMfZn3mfqa9FPLal4mm3sjmhc/SW4Dp8bt4oBLx6MYu906l/+UsAGst5XIZa227
      lWZr0mJnV7fBZnUk2aatLxAIN6b0NsbETSiaWrgVLYJ9TVuv1xkZHuHyzh75TJZcUEII1WEi
      7H/vje3w1v0CsPc0g5kJejKDCDq5LmGf86YbmXgjMyetBA1iYthuc6z1G6SUuBYqVtBzgyRY
      cpFJoGES4DopqTUbauwFUNaWE8sfI+WvEOYPUxp/E4NSc2TnK4TzP4vjp4nkXdjMKKx8A3X1
      i4xIxWZocLK9ZJ1x6oVZ0iP3cTVI0ecFyI0HkOWLqL1TTFS+heeCQlFzR6E4huk/gc68FiEd
      wvouXrRJurJCtPkQznaAIyQIxWb6AI3sFCPFMU73vYqj4QUymw/g3/bbWCeO5AS5OXKLn8cf
      fgUHcv2krvwd0skgnDRHFz9KOP+zyOwoS1f+lurUm7lp5dOYHcVdfSd5fOU859bU///UiNZa
      tne2qVVr5HK5/XrehOZuCWcQBmDhnHGYdAVFaTs+p4X1AdrVYq3JbwlItVJlbGyMv9+s8pK+
      DH5pr43y7DY5WqZI927QzmoKyXoUkZaKHtUJU046mEm/BOhIWCVt8hUtSAvok/tOazLb2zKB
      1nRchzvhdOYC2ovPWipWUDFwtmHJCYtraqRK59D9J8gLS48TR56E0ShhoLbS5Pdfwqz/E07P
      AjasIcIy0cRrcJe+QjT7doLCIU77mllPsezXmVr9IkW9w2qkGPFcbGoAWbtGNPMWztLHmKvI
      SXimEZusAoN37W9A11F7Z4gmXk+UnWDTeAwWxsEahL9Go7bCXmWVMbPHblChr34ZWTxEY+5d
      QPzbzvma42lYCkJ8PHIionjuj+iZfAU2PYJz9fPgZBFRBdwijdl34Fz5NE9lbyMo3MRFX/+/
      3wFaExiEAelU+gVhsFtHrVZrx/czmUxb+JNp/m6HNJCK0HQKf+sQsglFNvvC2k5ENW37VCrF
      6e0SE9ksrjXs+j7ZXFxD2w3can2GUopWp5SWcBtjmpVmLkGXeZFMprV2gO7d5UYx/IKFTW3p
      V4kMciJs2RqTohJcDi3jUjbZIARlHWt0peLCm4Ky9ChJXsLJrEJGDu7qI0TFXqgto+or0NhC
      SBVjhDLj2MwYeugenh76UQ6mXUzkIy5/mqXCSXoyzzJ+8ePIzAQid5LSyB1M2i0Krkcwdz/r
      viWbkqRsiLf4BSK3n5yGqjZkgVBbREqBFTQm34RSAi58AqsbqNKzjG89hO07itg5hc3PYPuO
      s9n/IsbsGj3nP8KzN/8W88ElvMv/ne3pt3GuYTiWkWgdMe65PNmApUjxslv/FXvnP44z9nJ6
      3Aw6PUY0/hqcje/gXv4k3x35GeY8KFtJhHn+BWCMYXtnmzAMSaczRGGIsaaJI4lBTGEYJswV
      Syrlkc91Qk/jUGaA53ptu74V108KuaPA2EQ63+x3STQW1nFYDQVHUzcQfrGPw7Gykwc0CRbz
      0mkulzX3unXqPhR7ikQ6agt4axG07rV1j0kKQqDdqEIYg2/jZFdLaFuPScHvBqsld5XWYsgI
      QSmKewEkE1t1Y+NmF9UVZtb+hnS4x5YzzePTbyMnoEfBAU+QRSAlhChKkaZqDKaxh1r8NI6U
      qN1TmOwMNjtGWLwJ0gMYG/OO1oylrOMk24627FYj+pTDtAnoU5Le3lmM0gRz74SGZViB9Pqx
      YQVjLFlBXBikHNBx4Xse2PYrOMEWQ6VlxPYOLhor4miWsHG71XD0ldDYxEy8HsfrQ1Qvo/x1
      hnZ/gFt9Cv/oB5GiwLodY8Rbxj/3UW47/HMYHfOTrmqJg+WAJ/lBHSZm34298tfIVB/u2Ksx
      WqOH7uNqA06sf5696Z/mTDmgKO1zLwBjDLu7u2QyGaIowvfrHawIBksrOuk67r6JgMBv+BRT
      RVJeCm0M9XotJrBVThzaDMN2vS2A1DVS5/8YJR2q3iDLPXdy0/bfc37wdVxJH0IKTV7GOPgT
      qedG9iVDla2jbY/bWCg3gLGUIp/ziKKIoBE0cf7NsGSzbri7lVGHcy320YueFeyFhpj6Y39x
      JP2IbnhwcqEkQ6Eq2KandInU1hVE5QrKNrDGcHHyXdjsBAOZfoK592CdLIdP/yeG05KKtpS0
      YVMLtAUwpAVkhSXvKMZzfazP30+/AnX2wywP/wgVbahqi/ABY8ioOGI0oOBASrEVGUILYw54
      ShEQIjKjiLVvYowhDdStJO+kkU2S3KLdI9hbxgmXUXunkZc+Tp+FBnnomYLsOKXCPRSb4WoZ
      7sLOY6jNhzA4qNI5xOVPE6YGWcmfYMqJmN78bzRO/h7W62UKS7h1GrH5AKPjr0Fe/RT+9E+x
      Egm2IsuRtORKEMOpLwQwNvlGihc+RLgzQ9B3goeqmvnRlyB2HmDr/Cd5yeG38Xg5uPECsNay
      u7uLJX7sLiQxxrTraZORltZ7ozBiZ3snEQePw4GtrK6VCkft4+e9ylnKwz9EeuhupLVMArWh
      o4xqTQpJaC0j0mItiGaEJSYl2YcdJCEQ3b/FAkrFgrgeCg44Fr/u7+88TU1vTJNpwtnnqcEE
      CH8PFZaRNkCYICaHDfYQuo5jQsrDr0GI/g4Tp/3dXdEcIQSqsRZ3UyxfitskoTE6gvQg+RDM
      1A8Tjb8OodJYYFjH/P7bOsXVwGIioOc1uA1DjxL0KcGME5NeaQQVY6lo2Ajj5noVKxhUlv7M
      POnyOcZ7DpHxbNwGKqwgqotxY4/6ClLXyNiQevEIduzVWK8XGe5AZgThb+CEWwxVVqC+ghNu
      UKmuk7n4cfq8fq45w9iem9E2QvcdR2fGWCttMxpdpbd0hmj3SVxHYCzg9WLTowg3D1OvQ3t5
      8PoQ0iOq7OCs/h2NW/81cvGL6Ll3UcblfPGlnLQhUihM4SCNy59he/QtHEnHBf+hNeRNmaro
      YaB+hcbNHyB1+j/zdJRlvv8wRSX4RupObi8altcep+jvXb8ArLXs7OwAUK/Vr9N+1sZUIQbb
      TGZaHOEQCMnVSBAh6JGWEQxWR/vQAyW5bDz2glgIMhLmPIHyl8he+SyZW3+ze53FZk2TYQy5
      by61itKvs7FJ8mYaRFjBBrsI7aMIIKpR3N2k36mjdANpA0xUR1qNUB7Sy2GjOjqMKReFk8XK
      FEg3pvdO9ca9bVPDiNwMxilAup+SbxlvxfJbVVBSUdKWge2HcCoXYyGTTeWRGcXkDsRCMv0T
      bf58rCVa/Aan3TnqDYOQceY6JwV5BUOuYMYTKCF4cuA4BRXPx0pkuRzEzBeO1e3rBxyJpwRP
      1zRHM4proy/HWfoC/etfj8dLN7CpQXR2CtNzE2b81VjpIU2d9NkPozPDUFtBXf4rVLoP4a8g
      179HvjDPYs8dFAqDXPYN064h7a8S7S0htx+DyhWWRD81MUQUNTCpAVTPLVwOJMWMwjT2cOqL
      iOoVdrVkq7TK7PbjCKuRxYMs7DxB4+YPYFUWVBpz8ZOcn3gHx7MKk3klcuXvWFf9VNKz3LH5
      OYKpNyMEXA0FR/UuB4tFMuvfx2z9I9+d/TWObXwJZ/gQ365Y5mSVscrTFA/+At+rdPkA1lq2
      t7dBgF/3O863nbjmv1YTOWstdSF4OnKYlwGugF0reVw7eMKhD01oLduRw6g03J2RCAHboeZq
      qCjKPnLH/i1apJvMBwJhI0RjGxWUyWmfRhDg2hIiKiF0DWlCjPYhiulRpJtBSAcd1LAmREgX
      3CwIBy0z4OQR6T5CkWEje5D5Yg6d6kU7uevQi0nHORn56T7XNm2QlHXEohCUTeyICikQJqKg
      BAWVQwy9mGhqDMv1oVBpY8JcAFU5TxhWKDqSQ6mYx78hFJXIUDGWzQhMc/+rGdDGMpNSDDuW
      VDsTnqgjBtD795qTktWeO+ntn8ISN7oQlStQuYLa+C7O0lfaTvHVzAJjKsvOzNvYkkVmPUG6
      9Cwi1YOqr7LtZIlSg1SjBmbjm6j8GNXMNLr/LkR9jenNB4nYYVFvondXSOnH6I0syrFxAz0n
      h6yvkL7pfiaFxM6/DXnxk4jyBRq3/HqseIDd3ALnRsbIRyWkyceZY69Ib+k8vXNvw2wa3Kuf
      4drIm8lJwQU5Q5+11KbfRu3UhzhkNsj038rSs58l33cfR9c/hT/7brwWBCQ5GVtbW1gsgR9c
      Z07Emt9iub7ZWb50ittNHdF7EmsNOWkZF3HzuQoK1xjGm4tDiNhf6JFxeR2ksEohmvays/kA
      onoZhMLILJlUL1YUMKkhhDONUXlkug+DvM5ZbpkcSZKopBBroylVwWRUnB24QdQnueCTR4ig
      bAS7Uewo1o1BCYGyDQ4u/xXR7DsYVJaMB3GFU1NBeLcQ3eAzr8s0a59g8SukB15C+uLHSFPn
      mcHX0shOkhfQ5wimm2FLKSXb2rIaCnpbLA/sh3u7k1wq2MHzl+gvX6JRWsZbr8etR1UanZnE
      5KapDb+YkshR0paygdreBSY2vkmfDkmHNdzsCOgGonoNMfrDOAwx70FJSvYKN1EIVxmqPAw1
      hbIBauMHGG+AlDdOuecl9LhpVmsRE2oPUV+G6jXk9mOkhQCjEeEuor6Czs22E3wlA8/4htvz
      ObzKedTFz2N7DiP2niHlFtDBNuHgPSytOpQbZV5ULHIxsDxY17ziyu9iR15M4dk/xvgb9BUO
      Mxmt4B98HzhZIm0wrQXQMnuUo6hVazcWirjcoyMrCTG2xfQcpbz5IA6SrNh/bwpLiqhdSG7p
      FNJkSLClgRt9dyL672prZeU47PqGUTdZIxvzaLbuIylcz5W1bT5DCeJ2pQmtLqSkHhkiLD3l
      s0gTsOSOsSIHiIipTlIiBs31SJjwBF6zgkkIyWb/HQyrTva47th/8nkyrCvrKzhbP0CVzhCU
      rzA4eAeXR19LsTDETMfuFFevtcYpLwRl3VXcEmzjVBdR1csIfwNpfIwOGVf9hMVpVH6GNXWA
      KWcXW99ABjuoje+zVFrlobFDFJSmqARFCWSH2TKHKQ+8iLnFv6By4O2Y1X+gZ+dB1Pq3GfUD
      XA96ZZqKM4rtGaeaO8ZuOkePMIj6GtHQvXiBj3Pxk3gOzAUhNjuAyI6jizch/VWC2fcg/TVS
      i5/BP/4fEf4G7oWPsTX7Hp4JPW5LWazWRPkF1PYTrG2covemn0MJcK5+jnP9P4zqv4MxIThV
      bjBlAy5qlwvpO8msPYyqLlOd+DEGth8kuOU/YoWHAJxol+HKFZxGo8Ha+hqpdBrduB501hYe
      GwtQMtqzb29bUgN38kykuM3RHe/rhhO07PTrBKELcNZ6tNYSaIvw9s91hBZF3HNXNEoQVZG2
      EXdm9HdRugKmgTQBJvJB+9zm1zk9/34abg+RNmAtroKUABdLb+ks1i3Sk5liyBM4ol0L07Xb
      7Idet4u3MNzVVbL7N7bDvWENt3wWtfsEQvvo9Cjh4ItoTLyBzLnfJxx6Kbu+7ciJdIZPQfmr
      uPVlJrYv45mNuCNlFKLTA5jsNH7fSbR0cfbOQG2JbOk8YuM7WF3jLl1GFA9h+o6gC/PY4fsY
      To/wo95+XzIpJWuqgJ95CQ6wHho2QsNAeoIeY4imf5LtQJFzBWkJ275l1LNkNZQjQ8EBK9MI
      G9KnIqTrUZt5K9uRRLiSPLHCc7x+vPVvorYfpnH4l7Ayhc1OYgbuwJ76EHcc+3VsXJuG3Pg+
      IiwRLfw8T9Y1xzPw9PAbmbj2VxSnX4vxhljbLHFZX+aw20/QM83Azt9Tv+3fU9p8GnHiP7fp
      FB1/GXv1cwQ9r8LZ2NwgnUoTBfuQ4+fSogq5H3lhPwlmsXjEDMjPapeD6gateZqHMRanSR8i
      rEZEZWy9hNI1JBrb2IvRh7qKNA2ECZirxuRM0skglIcJKhijEVIhnCxGuFiVxqgcIt2HVVls
      vpfIyWHdIsIrtHeZp2twMm3JOra5k1iUamVuJdHEjwGQa8MZbgyFSB653SdJVx7DRHUwEVJ5
      SDeLNQ1M2NhfECoFKkuYO0Aw+SZw8u3VZY0FY3BEbMy4SmDLV1H+NWR1ERvsopwUxlhMahCK
      85R6bqMxcpigvs1lk2NbC8pW0AhCXnvld/BUGpGfxo69FJOdxuYm4dInCIdfii4s7P+ARLKt
      Nfc5KdiILLOewM300Cf2sPkxRLiLtpKihKq2pIlNYyEVBQFXg2aG2+sBf5soNUApe5A8gqxs
      LhC3qRB6b8F76Jdo3PtnbZtf1pdQmz+gb+GtyAt/Tjj/bmrVZXKlpwnm3suIVAxUz5N96neZ
      Ofh+MnM/hXPpL2lMvZENHA6EEe7Kp8lbyY6confxyxRu+l+aPEUGx1/CvfYFthd+kb0KOOnU
      c7eUESIOCbZ5MhG4jhvDjJtHZParoaYIWJEuj0Yec46ml05UpbVxVMNd/Tqqvoh1i1jpYmQW
      3Dyk+7Cpfkx2Io4ApHqRymPkzP9JbeEX29q32+6Hbu3cdS4JbxAW/Rz4nn15eGEsD61zW9mb
      ODByWwdLw/PdU1LYTDLjnRlB1JbpbwSI5W8jM6PY/AHC/pNokUJIiW+hFMV2+orw6T37KYbr
      F+id+AlyxcMUpCANcPSD1K3t6DippEJnJqG6iMnNXweJTiJQ09aQKZ3H9B+O+wrXN6AwBzZC
      CU3RcVkLYbC5c/ra4AgImmaaTQ+jGmuQHeVS8S5ul5re+io75SW8aBXjb+LVLtO4+7/gnv8I
      5vC/Qugq7tXPEyy8Dys97ISLOftfuTT9c9wy/3PNEDg8mznMyIH3Mlw6RThwHH/27Zxb/C5T
      +Tso+2nG66uEmVmuTb2Zyf40NEPuTvUi7tXP4t/0qzSsw0zt8edOhDmug+u47Yl24lblcdF2
      uI9wlF3syaMEDDuKq1pxwXr0CMOs0sgEZaDVDYLJH0enhv9Z5xXTpDHgBo7j8wjwc+1iLpbI
      dp5LZovbNbVNRobuhnRtvE3iuruWPkp46P3X+QDPd2/JyFJ7DNIjCF2jkTvEYnacor+EV7nM
      ismy6ExQNpqMFOQlFBUMuB7e+Ctwcm9hUBuEiP0SY/cbe3SPhclNobYeui4x113D6wiJtM0M
      f3Y8dlALC1inB1vfwk0PU9UWXElWSXwEfRLcaAcnXEdUryAql5C7T3FAS4yXJZ0aoO6NYYvD
      uEtfxT/6W7GgL7yP1JnfxWRGCRbux0oXC1zzpqmOvIETy39BePDnMCLF2YbFE9A3ei9mN4+6
      /CkeGP4pZqZeybO1ECPmuTj4PoJ8RK5nENxmorFyCe/qZ2jc9CtY4RIay2T16edeAEk+zeTW
      CAkYQGLyktcqa5iVhjkh2EXxeORyWEXkm7ySwssjdP064bxR5Akpsfp6kyo5gckdpvWYfD0p
      bK6A0O6D3lpaMAk9SPog3c+T72mdl076ugV3o4hPW9CFoGqhri2Z7QeRpXNofwOx+xhbuZvp
      lw55LxPbw5lxRrL9THoKG2lIROE2tWBTD9CnOxkZTLRfH9F6bI9tdhx5baVD8bSdaNEJCFzJ
      3cqAkLE233ki3iGyYziNFaRyKFRWcXZXGK+uoE2AR0S/GsLkh9H9Jzk3/EYOZ7OUA01dStK6
      gll/DGfzURoLvxgLv7VY3SBKj1CWRbJRFev1shxaNiPL0f5ZovTrcJ79KKcn30tKpZhWFq0h
      6jnG2TBHStfZXTuNLhzh7oFenkznOJJRbESGZxqWW/1ncK58msaR38TKFBLw/E0cG+G0afmS
      QvTPmL3JhE+38HcLQi+a447hVAgnzSpOI0SGu7F93CWcSSes9VqsiaP2a92aOCm0SYezLZwJ
      YZVSotAEBpR3g92GzpxH6zOSyM3kde1z0gUT0t1yTRNDjyuBQfsbLKtB3No1fJXj7vXPUhu8
      D5saRk7M43oFvCc+SPHEv4nZ0dgvgmk+aYZX939jT4IoKzl+7d8r5H4RdPMwKgfBXvw8ofW1
      0XFbVdEqzBGkBGwbMOTINKpcqhuGnTFmL34CPfQiDm8/RnjofuzIy7nUkNySNjR2lwnCFbJ7
      TzPg/wDPFcw2Siz33o2b7efWzS+DyiD8TWx2AlVfxF36MsHC/eQaWyyvP0Z9+OWUteVoOs6R
      mOwMUmWZuvJneAffCyJNZOGpmma6Z4Ls2T+mJNLMjN/Gk9WQW9OCtNVMKTgXGtbXHmTwlg8Q
      WQdpLbtGsLdzjp50TzMMSqcmeL6jNcjtoo1YxcTJnKaJFAudaIcJXQH3Xvs4TnoAowqYwgJR
      4TCyKUQtOHB3xKQtyM3ywWQpX/fC6z6SUZjWeyHuCBl2WSc3CqMKLMIGBDaFbwXaQGQFgYUg
      soQmFvAQwYDJsbJXwnd6iIDB3YfZSk/Tq3eo5Q9TVDBt6/SkJYX0BFIqbO/7GEoIrhttI73e
      NvFta3Em77EtxE3BVRai5mLpHr/nrjxTbR5QozJEOkJJBx9FyQqqRjC8/Sgj/jnGtceFsZ9k
      1FEUbINjWYXTO4Opj2F6b+WKHGJ84wdkTYPBUOCkHHrcUaqZMbz+IyyFWYayClV6hqlrX0Vs
      1Gkc/S3Akjrze0Rjr0JuP0pw8H2xL5gZpTY8wtN1zauKTixT1uIufRGbnyaTHsde+TT12Xdx
      qgEH3IDc+f/GE8Nv4ja1w7lrD3Pr+EkyNlaQuyh2jSV14F3sGpj3BOXKChfUCE7/PdSsxmkP
      nNoPRXabF92OXcsZNsYgnOud0iQGv3XOc1KEU28k0tdr3X9OgIWbQ5gQa8UNtfN19jRghSQw
      hsAKjLYEVhJE4Ed1tK7ytBglW79GHZfJ7W+jkTw68pNoYzFWc3wCDCfEAAAcTUlEQVT9s7gY
      Lgy9jtAp4og42+oIcEVcS5pR4AKrY29g3BH0qpimMVMtg1om6D++f4/edNOVUchwB1FdRFav
      xCwJGGzUQMh9YFxr7JMEs8l5EELgyGZNcOL65Fy0Pqv1F1moGIjcQVYrG5TSU0jhQGTJCUFW
      SQaVxB2+g7o9gfW3mag8xZjexK2chbN/iDEaufMkeuBOsukifv5W0ulBluqGVEqyFlnWQksq
      iGnrn7r2ELMbX6Nf7xLc9u+wTkxsG828GffR/43GnX/QtvlXQktVW15ecHi0bjiZEeSWvoh1
      izQGX4oQgu3MHBdXn2JuYIbMuY/xyNCPc2T4AE/UIuZT6/QufoZg8icoC4ezvuHOrMQTcDm0
      rK0/wlTtLLfPvI1/qmoOSoPTou1GCJRIcMsIgcW0M5pJrZychO4juWg67V4HG+yBKlyndTve
      LwQGQWAFkYXQgHF68Na+xU7mENvpCeY3vobRATuql/X0ATYzMxgL2logQgqBEnEEWQKejIXW
      FTBReQJpAqLiGL2pDEp5BIW3kBLwckchjUEIhSn8NNZa7upyzGOhlM1xiX9HgCCnJGk0wgpM
      7gBy6xH8zDzF0uMxD6a/hvB6MVEDmx7A5mcxAyeJJl6PNvFYpp790+s0+Y0UgzGmvRtmpcC3
      kE0U2Wgh2TOxMFUMGNG8b+LwZjY7wYHwGqZ3BqMDnGATUVvBVJZioJ6IS0ydzAjX1DC25xDa
      NNC9RyA7hvvQr7HUfx+NvXMMPf2f+P7Nv0PfytdYHXsleS9LTlpuzzar2nqH2FmXrB35d/Q2
      hV/WFlEr/4PGvR/FO/tHNA6+j2VnlM0mqlMKOJYWLF/6CgeyRXRT+DVwOYTb1z5L+sI5vn3w
      33LL8CzP1EKOZBQFOYYNDmCu/jXPjLyFu3Oy7eTOVx7HXf8q0cBdPOXHiNlBV+JIXSa9+Nd8
      d+jNzG99nYn6syBdIpHBqS8iTQOEQqtsPGnZyTjG6+TRuQPgFvadKCmxCBo6RiVGVhAaQaAF
      GdFLuVanmioQWktd26YJETOvaduMf8u4Cdtk+UkmqqdYGno9GAdhM9SdHrJSsDv8Klw0g9EW
      RaePBU+hYrxz165Ah0YVQkAqzVaUYlhZTKq/CWlu7iiJaFBL2LojKTc6l5ISA0g0onyVa5HG
      2z5Hqfc+CsIjGnoZNjve0ayvM1HWrB1w86AbaLsPxU7a9cmdT0pJ3QqErnPZlzH+qfnbXQl5
      AUUlGHXBESImr6osofxlVP0qcuNbmPK5GOKeHcWmR7CDd6Azo0Si2dbJWrYbljEPbGMH79mP
      QH4WawJssENfcQoKBzmeEqRFCW02iOQU2817ldXLOBc/Qe/RX+XJMAMa+htLuIt/Q2PhfpAe
      jZt+FXHq/2D90Ac5lk21zZ6+5S/hZQp8v/Aybhexd/WED3Pb/0AQ1jg39jO8ZOOveKA4x5Fs
      mkJTV2z13skzcpbDtadwMkdBSNTOYzh7Z/CPfJCNK1/BKZ3jluGbkAYcb/mr+IP3cVs2S/7q
      eYJbP4Bp7CDCKpYQojoyKiMaG4j6Ou76t7DVa8jGFkZl2C0cYb3nDvK2ioPhcv8r8FMjOKKl
      eWNb1Y68koxSFLE4QoAFV0pcKZA2xtV0xM8zxxDiNg5bS2onhckN0pvJN7WuAzhYbxJlTJP0
      dT+UmjySwiOlxMg0RFvXmRXdEaDu5y2/p3sRGGNQVpM/+/t4UqCzU4wM3EV6+Dgjdoug/67m
      1tbJNZT8jnYIOD2C9FcR6cn2d2qgajS71qVioKFDXrT6MS7m7qDUewJHOSgMC03wnCJC+qsx
      itNfxobVOP4vPIzbA9lR9PirENe+QjD3XiIdIWWzXZIxSCuwiVoNbeLWTCI3ge47QTT9JlJR
      hUm9ic4usNR7kn7A5GYQtUVEdirOiVcuNnl7fgVUlpuE5vLeEgPrnyc49P64FssY3NJZbGGW
      mpXUrSUHuMtfRqeGUP13cYuFR/xYhuZqj5NZ/jr/MPuv8TJD7NWOkcFSEBHgsKvhmYbhZN8g
      qa2LyMXPYQvzyL0z+AfexhnfsDnwGu7JKVQzVOzUJt8ST6YxRCMvx7v0cYzKg3CwTgbcIjbV
      h85MYgezWOkhnBzCzWIspKxliv3a1CNd9nlsLsSDSKKzSTPCCcTMCjax3V8Xv/byCBtcZza9
      EO0M+2aZ1hrtFKnLekcEJCnM7QV4A98iaQp2mIUoFg/+KtPu/vdpIlTpLKJ4S3ssbnRvre+T
      USWuNVj8Iqem7idoQqRdLAO6Qj7Tz5gLHi7B/C8wGdVQtXM0ypfZrm6SlvUYoO4WMJkxTGYM
      3X8Mo7IELdOoVdVmAlSwmygUMjFfUeteMOxFmj3rsGvgEd+SocgtUT3OA2XGEdUrUDzM5fzt
      9GPQuSnUzmMAjPsX0Vc/RXjrr2CdPAJI+ysc3fg8j069jynr0aMscvNB5O4pGrPv5Hbh8Ejd
      8KLtr2K9PGETD5YVIC2EpfP0Lf4l35j7X+nJDSGM4cjQHIXaJcKrT1KbeD1nAsmdmdjs0QN3
      oUrn2Fp/hMLhn+e0b9gODXfnHTwBNHtHO0mt5vfdhR257zmzlx3gLst10ZvukGHnNi+uuy6p
      BZ/rvcYYjNsLQalDUJPCfqNzSV+kJaxSSqrZSa6qScZFZ5g0+Tx5rrvGt/uIw4VxHYS1sUAJ
      IbC5GcTG9zquVcKi/FVUfQlRvYqor+J7/UQW8taH9BACwZGsA01WOxP5iHADb+U7CH8j/mwd
      YL0iNjuF03OIqz0vZTif6TCXjDFxGNSY68baShcpwLVVbG0ZUb2K8tcgqjZfT1Mb+hGy2VEm
      XRh0Bb3CxdNlGtaiM1Mxi7QxHCt9DzVwAp2b4ZQzzfHqRcYXP8ljc7/MIDlGAFm7hnvtbwgW
      3s/NwuMp33C4/CDF8hmC2XeBUHgYRmTIo5lj3Nw3RUbEUbYnfFiwq/Rf+wjbqkjWSyOt5WhW
      xWZPfhY/Cji9dpaTE0eayCFwNr8PJmBn9md5ZnuVmjvIPTmHVGIKwzDEsc1Mq1LXO1w3Cg/+
      z5zr/ktORPf3JDVkR8RJCISTgdrydcCwG4VNk+e6Fy3EznCcCe6MmSfvpVvAn+ueW/eYsyEL
      W/8DPfrKOAQpLJQvIcvnSV39FLK+inIzRGEdUv3ozAS69xhi+sfBxBElHxBo6uf/grN1iyfh
      wPrXSDkeMh0nlmxuotkQu5MQK6h3ZnSTXeABAgQVKyiFIQvLn8SxAbK+inPxE0SFm9H5eczo
      D6HtvpIaMAYpDFpCKWwC3JxCvEvlJ5GrXwcseV2CvSdxwgqTu5dQ4RrhLR/gZifHEzWDU1tk
      fPVLBIfejxUuCsuJ6kOsbZ8mXHg3RaViU2j5a8ylhmj038VjDcuRlOB8wzITXMZb/CLfm/9N
      Dqldeja+w9Ts68g1va4dDWe9Q8zl4ZlayK1ZB2/3CWTpHMHce6g2oHfnYe6Ru5jCO9pzZoyh
      p6enlQjrrFXt/msNbHeyJamxk3/d2dVuLdo9gd2auPs6IzxUVLtOKF/oYkwKrGrmAeLPF0jT
      IAgDak6eyAo0gkZgaZgYM6QROI1tjl77c5Z7bmdx8BVIIYkiTdSkQjTWcs/at8iVTiOUi7EC
      mx3HItBjP0KUGuygMGzF5mMq0UQ4WDr0Ss3t2WYXlolXx9EPrYmkBG065qk1Rq60aKkIjaHU
      5Pyp6RgFEGhNRkCvqxhyHfTcO9GAq3JxWWHPcYSUCNvpL7WOvBJsaRu3Ow3LeJf/EhHsoLYe
      Jn32DwCJTfUjclMUqxc4e/P/zgGVRVjLCZbYvvoFrh26nyHhAha1+RBy9xR9C+/iqUCwkLL0
      LX8VrXJEvSfwMBxNSU6tPM5CtIyuLLI0fz+3pz0eq/cyPTOHe/VzqOnXsaMzPNMw3JmJITnS
      UyyuPMKhxhkac+/idN2yGhrumX09cvVruBc+gnP0lwjCkGw2i+d5OI5ScQKrS7i7sewtgeoW
      8qQGTmJ5ugcy+f7u45+9zskhmriU1v1IYRFhBcIyysQljkJXsY1dhK6jTB0b+RCWwYRI5SCc
      FOX0HFOVHVLRFaSTASdHKXeYtd4X4Ym4yXRGxrZnSgk8AV5qgOCWD9CnNQMyxtvgxPXJsRJQ
      +EP3IaZe1/Y1pJSkwxI21d/BDdoap+faWYRKYU1Eq61pMqkV/+4YMSlr12IzqrHNvOzh4fG3
      MqBiupgJZci4AmsjcJrf2Sw7i5qU7So7hWhsxWPdzCUkF1bruYfm8NnfwSvOYoWDSQ1hDrw1
      xgYdeGu8GK78NbZyCef4v8HoHM8GlkPREt61L9B3y/t5oqEgsozuPYzce5rG7DtRQnE0BRuX
      v0gqU0QNvxSMJjCG837A3O4D5EuPUz/+29zq1JHP/Am3L/wiaTeLHDqBOPN7nJ39De7Mum2c
      2VjpUZzdf8RYwelayKqWvCiv8KwhGn8dwbWvYq58CzlwR0zlEwQ4qZ0HCAdffJ2AJx22F+Js
      /nPnkruCEHFGNdSWCIFGEoZx7W/Y1LraQtiIMS1pehitV1ip7nF88aMgHYSTxqocRqYQTiam
      4/aK2OwkWqYwXhHjFkBlOqI3aWO4UoWDuf1FngUOt02mVrFNTDHSgkRbOvFAnQIsqLl9pBJ+
      B8BGzx2kQ5+Um33OuH631jVeL8pfx2bHKZsm34+BQINSUKwvsVB9ApOfJRp7LXhFaiGMWcuM
      Gwu4MYZQ7y80azthKlLKGHm6t/2ciqf1XEqF5xUIe4/j7DyGs/EdbOVZZGMT5/KnsCqFrC3G
      QDnhcMCxnA0t68vfZmjhfoR0OZaGqys/oFE9hXPw3QgU1hgyK19lNNfPo/l7WUCRVZJzu2sc
      vPhH1MZfj7fw0/Se/X2s8Ajm30vajfmbtjJzrIz+VFuxCCFwtx9GVi7g3/zrrCx/n9FzH2L2
      1l/DszGKIJVKUR1+Obmnfgu9+wQIga6u4ajNhwgHXxz/WNHZZifJhdOyK8MoomEhtKCRaCPw
      I0OAIAK0lc24vkVIiSMlwgoajTg97UiJI+Nid0fGndLTUuAKS0rta103YS44Ko9HhZ58L41b
      fv06bE63Aw3ETZqNQXZNaAzViF9/IUdSCTzXOWNhrf9eBmQnwtIv3koVGH2eCFADQUlbdiJL
      1QhyahJn5xp1OUoOS48jmXD3G9kZd4JGcaL9PdIY8gIWI9p8Qt3NN5J+Veuew9wc550Zbmop
      KaBqoKIFVSuoGU2ufoVyZo4FMvTVLmP6j4NQhLNvx7383xFRGVG5in/H7yLryzjP/jmV+Z+l
      blx2pt/Gbmg5mAJ36wEO1k7x6MS7GNMOQ8rirXwZ4w3A4L0cRfBkPcDx11g4/yH88R9ldOJe
      qK/HvcqsD07c3WVXW841LHcMHqQUGR72LS+qPYisXaEx81aerhs2CnfyMiqkn/0Tgpt+mXQ6
      ze7uLrlcAZkdobHw87FMbz6Ig7/JpUATCpfAQsNojBAoCZJ4MbTs16yKayglMaYmpeKKoIyM
      eWVaJoQjJFEUxYLWtJNlSiU0bIzQut5RjbWu1hqbcGitjRGDyZ3lRlGj54vptw5BTKob2ThL
      3B0OTaJLX8g5IWLw2Gj5SUzfrW3BVErRq+LM5YQnKWtLObKUjKWkLVbEbV6zMk5YDSjBfFrh
      OTM469+l4RE7vAKsjotOkgKc5BPKS6gGCZ+KTm3vqH2ISmRjkq2KsaxpRd23WBHXZGeVICeg
      X8GMC2rjUezAAlFxnmv5w+ymJhjnPDljsCqLWv1HbM9hsBFR4TBubZmlK9/gyOxrcazhSiRZ
      Xn2I2copgvn3cCsOT9U1hY0v4WT60cMvQQLSWCJjmL34X6gM3MvIzKtjCpZLnyCYfTtCpUid
      /UPWFn6JM6YntvmNoU8JjlceQPpLNKZ/mlN1zXZkuSenIPdDmMwAmYsfoTz1bvL5PFEU8fDI
      W7m1OU4mM4ZDeogRW0J4g7Hw2lYEZt/x3YdD7KMR49eaBeAxHq5ZfCKw12U6X5ij2p7AG5yT
      N9Bo+/d3vQPfnbTqwNdYQWgg5Vzfab07/PtCzgGMrX+DxuCxuFjFCkoBjK58BU+HfG/0jRQU
      FCQMO5J5FxwJrYq0Vn5EaIuWBZS/2fYVkr5V615btQodWC1EW7kIIdBSUokMVR3vMDVtQVqk
      jWlWCkowHCxzuG8CaS0iLCHqK0RBiTOFu/CtYqG0yDU/YsgdJuuvUcxPUjRl2HkQZ/lvsU38
      vnf+vxKNvRJVOs3AgV/gaR+OpgRpYbiaXsDvPc6ccFDWcnLrS1yUvVT672OQmOP0Cd/g7j6B
      JwRPDr+BVHWdoUv/N+HMT2My8W5Xm34L1bN/xu23/Qay2WDc3XqAlH+NxvRbOFMP2daSe3IK
      l9j6MIMnaaDIXf4Ievg+nLCMWzeEfVO4AqzXgyNTvfTqEpEYaDcteSHO6wsV3OR7k4/dkaSk
      Ju7OQ1gp+d7cb3BbQhO3nMMbRY2e61xb2MX1RTHdv+/5nPXIavasS3brEWis89TAazmsJWdK
      AXlhKUgYwJAdfxWptW8wm0uQ4DYVRTeLQzvkK7z28+TOkxyfVnRNCEGjCXCzjW3O2RR7IoMS
      AgdNVkDBEUx7kgwGJYgb2tVWEPVV5le/jtmcxwqJ8foxqSFkZoJ5l3hnT6XpZRfywzhbDxE0
      p1de/BT+8d8mdeo/gHTR468m9ehvUr/7w/Q7LlbAY5UKWS/PncUilwNNsPEgeX8Z6/UyMfwy
      nqjHzfGWg5jxe2rrmzw7/EZEWCa4+FH2Dr6DTDYW/pKxbAaS7M2/zMPlgHuLLu7G95C1WPgv
      lbeZXfkCB+fegbIgmkTFRhtk/1FY/ltE6RxW5dCyn5AYxIhQOAQ7MUXGDYS222a9UeVU0sl9
      vnPPVeTd+r4bxfJb96FaWJtEyPVGDttzLbzu824zyXIjAZdSghCEFiraUjOiSUALjqlx16U/
      oNR7NzuDLyedGcct3sSd0TLpTIG0G7V7AMfjpjg98BpOin2YeLd5lhzrtpYPK0gBQu2bjVLX
      EdWYUW6LPBcKt2OFIEWs0VNujsGUYsFRYEJUYxNRW95nfSbmdCU9iE6PY3sOo0WELt5CmJnu
      iN55tolsSo/GnSIz04j6Ek75HHLvGYJjHyRUPThef8wntPpN/Hv+FO/Cx2gc/HlGq1fo2TvP
      6dGfwiKZ9QSp1b9jte9e+odfBsZwswd/X9UoAXMeFBorzNSeYLD0jwQLb+cxMc7NVhBZy4V6
      g2MDh/CkZCeKuHT1n7jJLhNMv4VLlRKjS58lM/8zcTKSuPlJykshhEGd+VPCA28lTE8ihKBc
      twQWsgIQLo6VHhbZoWm6J6UlGC1B7Y7bJ7VuS0MltW7yuudbZB1RKDppFyPz/AXq7QUjJD6Q
      qi2hdIX1/E1kKlfoK5+KcU024FC9TMFUSNsG54Z/lM3iEe698n9howZYzbmRHydE4QgLhUP0
      S8uMBzZy2Dv4AVwBB6jjVs7h1C6jgm0qM+9t9whuLSYdxdSOFW3I0umIJn2V1sI21tIQEu0O
      EK49wLPFuxndfZDJ3e+j3X7C/Cw2PUQ+M8kdKUmIgMoy6fJFtitruLpKWjTQOJAexGbG0X3H
      MdkxtN0fy5bfVbcONW3oaY5h637arVRzU8jqVcgvUNOa3Nk/pnHrb2LcPoS1VAbvpXDuo/h3
      fAjtDaMXfpHs6d9BFw7hzr2HCaN40tec3PoyZvg+NntfSjmEcSV4qmE5+f8Udja/cV1lGP+9
      537MzJ2xPZPx2B7bsZ3YdVyljQk0UKgaqVHUoEqwqCgFFoUNSCCkLvgH+B/YZBOBELvwtamE
      CmRRxAJFwYWEJk6akvgrseuPGc/HvTP3nnNY3PHEdgVsr3Slq3Pez+c+7/MGDo+7lrJn8eI6
      Y42P0Gd/gpMdZ1EUf2/FeCbkXKHQX4ayGN5iI1rl1sRbnLaCt3mDYOpraBXgKEUYRZSKRZKk
      g3PvKsn4lb7xK6XwRNPRBiuCFRcX8XD276FzE//zj+rxiHu82RSRfqOmDhvkMQP/b8+QFEXy
      2+vEBvZzE5Qad/HCde6WLpGp3Sa7ucTy4Cs8yZzGimaqdYedwgId8UiMRaeb7rAWpnbvYeM2
      9+Q5SjrHqD9DLsjie3lu6wKfK+SJdUxFG0aIaU28jde8i3RrzLXv4IRrWGOIzVeIh14gNpm+
      7LoSKPz7GvHoa8TDbxGJj46THlh6NPsMKqGpIe8+o2NYnmWXRqJpdjQxQiHeI/GLOMWLFAmZ
      9S3+yAV2K1+kaSxtk5Y7nVSsCM8aZjp1sm4ORr7MilclyBzlMfUJboec7uBencIkTyPdd4Dj
      GdMEU7h7t/Fa98nV/4nkRkGl/YgXrsDGn9itfpVCUMUmCU57FRNMItEWKq5R8U9Q2H6Px1Kk
      WrnInDUsx8JSc5uZwQqjrjDiCkuhxs2MIQs/QOUmUCKEGlwbs7h5Hcl+E/EKeDt/Q7XXGD3z
      HVYaXZb2W7xs99PZciWEYUi5XCYKm7gf/5xk7DLd3HTap/aEnTMCXfssaLrWH0KirSOR9OAw
      /l/z2r9opejYVGZbi6JS/xeb2WkaKo/q1Gj7JRILfrjBrl9FIbg9DfxEW4xNMO0n5PNjvPT0
      zyTZk+yoEYIkRtwSQ8SU9RZ3ym8wGJSZR0BrckMLlK3BSsw/tEuCJWstWUdoV14jq+C8EqBC
      qIepoQiNZcaHnNUk2qBMxMDKL8DJoMsvobNjaJWhW7mIcQLc1iMya78jp1vEwRzxiQsEq7+h
      W71CNz/Xc4hUPSOJkyOGJEoYcOBR0oMYozqxN4i1aZ+QVULRgUkPHAyRX6Rh4FO/zEq0h4rA
      kZRrVHCEIRfGHUVGwB5A1ZkzxCJkEfajzy74OJxhDvdgWqdqHqd2b2BHLx0pdfuOmimj9pdx
      Nj9Az3+fZOgs2eWfsTX7Q2rtfRqnfoSET5i3Fs+28J6+T3TmXSTeJ/PgKiY/jZufonHiVW5H
      mnN+KjR8rv4XBjpDJNXXiUkn7TpDZ9lxy1SAmoG7HcOFQoDMvsPNUPH5+k0y7cd0p9/Gas1i
      4PLB9g4mM4wrQrPZpFqt0tyvkfn4Gkn1MlF2GrEGeNZjZVTqAAfn4ZrsKE53G2mvsZOb6o/9
      Jd0IZULmt//Aav55PimcxxoYaX/Ei5vX+aTyBg8LX0hH1pTgSzotJSam2NxAvHECZahs/Jr2
      7Dtk3Bx+cBJrDpTg0v2+eKAweE/ep1H4No3qNxARThJDMEdHhEFr0MOvglHsdg2l1n2Ka9fZ
      KLxI2dRoFxYISi9zIWMR08Hd+xB3bwnVrWHFISkuElUuphTcHlvaGsE3NfIPrxKd/i46mO4b
      R59Xow1xcAabm0cEvNZDsuu/xYl34dO/pvIiA8/BwDTWpruKU8i2lz1FccI2CB/8kvunfsz5
      QpEAQ8sIbZvqiO4kpIiFTTn8gaOY8S3Da9eJF979DGAgxvb/cRw2WM9CAn0k6Pjm+P77h8AB
      ESGofUh79NKRyH9wBm7jATbcZG/kMqWNP+Lt3QF/iO7qe7iz32PQWtYz4zQNVFZ/T3f6Wxgr
      OH4JG0zg7t0imvw6Iy6INdSXr/F89RXM9JuET2+wEnXZ0g4v5BzqJ9/kZsdj0YWNOKU3uL06
      /UudW/iPfkWy+NP+93lKqHqK9XrCpDFUq1X267vkHl5Dj18hzs2kcpu9hSkHlY3fWxyoepns
      P98aQ5AJb1SsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SFCTA &amp; OSM Name Match' width='192'>
      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
      u5TO8/8BC2OIPens68wAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
