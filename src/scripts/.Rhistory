packages_vector <- c("tidyverse",
"sf")
need_to_install <- packages_vector[!(packages_vector %in% installed.packages()[,"Package"])]
if (length(need_to_install)) install.packages(need_to_install)
for (package in packages_vector) {
library(package, character.only = TRUE)
}
transit_dir <- "../../data/processed/version_01/"
output_file_name <- "../../data/interim/transit_for_tableau.csv"
routes_df <- read_csv(paste0(transit_dir, "routes.txt"), col_types = "icccciccc")
freq_df <- read_csv(paste0(transit_dir, "frequencies.txt"), col_types = "iitt")
trips_df <- read_csv(paste0(transit_dir, "trips.txt"), col_types = "iiiciii")
stops_df <- read_csv(paste0(transit_dir, "stops.txt"), col_types  = "iccddicccc")
shapes_df <- read_csv(paste0(transit_dir, "shapes.txt"), col_types = "iiccc")
stop_times_df <- read_csv(paste0(transit_dir, "stop_times.txt"), col_types = "ittiicccn")
nodes_sf <- st_read(paste0(transit_dir, "sf_node.geojson"))
packages_vector <- c("tidyverse",
"sf")
need_to_install <- packages_vector[!(packages_vector %in% installed.packages()[,"Package"])]
if (length(need_to_install)) install.packages(need_to_install)
for (package in packages_vector) {
library(package, character.only = TRUE)
}
transit_dir <- "../../data/processed/version_01/"
output_file_name <- "../../data/interim/transit_for_tableau.csv"
routes_df <- read_csv(paste0(transit_dir, "routes.txt"), col_types = "icccciccc")
freq_df <- read_csv(paste0(transit_dir, "frequencies.txt"), col_types = "iitt")
trips_df <- read_csv(paste0(transit_dir, "trips.txt"), col_types = "iiiciii")
stops_df <- read_csv(paste0(transit_dir, "stops.txt"), col_types  = "iccddicccc")
shapes_df <- read_csv(paste0(transit_dir, "shapes.txt"), col_types = "iiccc")
stop_times_df <- read_csv(paste0(transit_dir, "stop_times.txt"), col_types = "ittiicccn")
nodes_sf <- st_read(paste0(transit_dir, "sf_node.geojson"))
nodes_df <- bind_cols(tibble(model_node_id = nodes_sf$model_node_id), as_tibble(st_coordinates(nodes_sf))) %>%
mutate(model_node_id = paste0(model_node_id)) %>%
rename(lng = X, lat = Y)
output_stops_df <- select(routes_df, route_id, agency_id, route_short_name, route_long_name) %>%
left_join(select(trips_df, route_id, service_id, trip_id, trip_headsign, direction_id, shape_id),
., by = c("route_id")) %>%
left_join(., freq_df, by = c("trip_id")) %>%
left_join(select(stop_times_df, trip_id, stop_id, stop_sequence), ., by = c("trip_id")) %>%
left_join(., select(stops_df, stop_id, stop_name, stop_lat, stop_lon), by = c("stop_id")) %>%
mutate(summary = "stops")
output_shapes_df <- select(routes_df, route_id, agency_id, route_short_name, route_long_name) %>%
left_join(select(trips_df, route_id, service_id, trip_id, trip_headsign, direction_id, shape_id),
., by = c("route_id")) %>%
left_join(., freq_df, by = c("trip_id")) %>%
left_join(., select(shapes_df, shape_id, shape_pt_sequence, shape_model_node_id), by = c("shape_id")) %>%
left_join(., nodes_df, by = c("shape_model_node_id" = "model_node_id")) %>%
mutate(summary = "shapes")
output_df <- bind_rows(output_stops_df, output_shapes_df)
View(output_df)
View(output_df)
packages_vector <- c("tidyverse",
"sf")
need_to_install <- packages_vector[!(packages_vector %in% installed.packages()[,"Package"])]
if (length(need_to_install)) install.packages(need_to_install)
for (package in packages_vector) {
library(package, character.only = TRUE)
}
interim_dir <- "../../data/interim/"
processed_dir <- "../../data/processed/"
input_file_name <- paste0(processed_dir, "version_00/network_links.shp")
output_file_name <- paste0(interim_dir, "version-00-network-links.csv")
frc_dict_df <- tibble(code = seq(-1, 8),
label = c("Not Applicable",
"Motorway, Freeway, or Other Major Road",
"Major Road Less Important than a Motorway",
"Other Major Road",
"Secondary Road",
"Local Connecting Road",
"Local Road of High Importance",
"Local Road",
"Local Road of Minor Importance",
"Other Road"))
ft_dict_df <- tibble(code = seq(0, 7),
label = c("Connector",
"Freeway to Freeway",
"Freeway",
"Expressway",
"Collector",
"Ramp",
"Special Facility",
"Major Arterial"))
links_sf <- st_read(input_file_name)
output_df <- links_sf %>%
st_geometry(NULL) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label)
output_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label)
output_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label) %>%
group_by(FRC, frc_label, FT, ft_label) %>%
summarise(count = n()) %>%
ungroup()
output_df
write_csv(output_df, path = output_file_name)
output_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT,
tomtom_lanes = LANES,
model_lanes = NUMLANES) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label) %>%
group_by(FRC, frc_label, FT, ft_label) %>%
summarise(count = n()) %>%
ungroup()
output_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT,
tomtom_lanes = links_sf$LANES,
model_lanes = links_sf$NUMLANES) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label) %>%
group_by(FRC, frc_label, FT, ft_label) %>%
summarise(count = n()) %>%
ungroup()
output_df
write_csv(output_df, path = output_file_name)
working_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT,
tomtom_lanes = links_sf$LANES,
model_lanes = links_sf$NUMLANES) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label)
ft_df <- working_df %>%
group_by(FRC, frc_label, FT, ft_label) %>%
summarise(count = n()) %>%
ungroup() %>%
select(TomTom = frc_label, TM2 = ft_label, count)
mutate(measure = "Facility Type")
working_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT,
tomtom_lanes = links_sf$LANES,
model_lanes = links_sf$NUMLANES) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label)
ft_df <- working_df %>%
group_by(FRC, frc_label, FT, ft_label) %>%
summarise(count = n()) %>%
ungroup() %>%
select(TomTom = frc_label, TM2 = ft_label, count) %>%
mutate(measure = "Facility Type")
lanes_df <- working_df %>%
group_by(tomtom_lanes, model_lanes) %>%
summarise(count = n()) %>%
ungroup() %>%
select(TomTom = tomtom_lanes, TM2 = model_lanes, count) %>%
mutate(measure = "Lanes")
output_df <- bind_rows(ft_df, lanes_df)
working_df <- tibble(A = links_sf$A,
B = links_sf$B,
FRC = links_sf$FRC,
FT = links_sf$FT,
tomtom_lanes = links_sf$LANES,
model_lanes = links_sf$NUMLANES) %>%
left_join(., frc_dict_df, by = c("FRC" = "code")) %>%
rename(frc_label = label) %>%
left_join(., ft_dict_df, by = c("FT" = "code")) %>%
rename(ft_label = label)
ft_df <- working_df %>%
group_by(FRC, frc_label, FT, ft_label) %>%
summarise(count = n()) %>%
ungroup() %>%
select(TomTom = frc_label, TM2 = ft_label, count) %>%
mutate(measure = "Facility Type")
lanes_df <- working_df %>%
group_by(tomtom_lanes, model_lanes) %>%
summarise(count = n()) %>%
ungroup() %>%
select(TomTom = tomtom_lanes, TM2 = model_lanes, count) %>%
mutate(TomTom = paste0(TomTom),
TM2 = paste0(TM2)) %>%
mutate(measure = "Lanes")
output_df <- bind_rows(ft_df, lanes_df)
write_csv(output_df, path = output_file_name)
packages_vector <- c("tidyverse",
"tidyselect",
"arrow",
"sf",
"stringdist")
need_to_install <- packages_vector[!(packages_vector %in% installed.packages()[,"Package"])]
if (length(need_to_install)) install.packages(need_to_install)
for (package in packages_vector) {
library(package, character.only = TRUE)
}
external_dir <- "../../data/external/"
interim_dir <- "../../data/interim/"
processed_dir <- "../../data/processed/"
managed_file_name <- paste0(interim_dir, "Managed_Lanes_Database.csv")
links_file_name <- paste0(interim_dir, "step5_tidy_roadway/link.feather")
shape_file_name <- paste0(interim_dir, "simple_shape.RDS")
output_file_name <- paste0(interim_dir, "managed-lane-viewer.geojson")
shapes_sf <- readRDS(shape_file_name)
links_df <- read_feather(links_file_name)
managed_df <- read_csv(managed_file_name)
managed_df <- read_csv(managed_file_name, col_types = cols(.default = col_character()))
links_join_df <- links_df %>%
select(shstReferenceId = id, shstGeometryId, roadway) %>%
filter(roadway %in% c("motorway", "motorway_link", "trunk", "trunk_link"))
output_sf <- managed_df %>%
select(shstGeometryId, corridor_name = roadName, managed_type = roadType, tom_rtedir = tomtom_rtedir) %>%
left_join(links_join_df, ., by = c("shstGeometryId")) %>%
left_join(., shapes_sf, by = c("shstGeometryId"))
st_write(output_sf, output_file_name, delete_dsn = TRUE)
packages_vector <- c("tidyverse",
"sf")
need_to_install <- packages_vector[!(packages_vector %in% installed.packages()[,"Package"])]
if (length(need_to_install)) install.packages(need_to_install)
for (package in packages_vector) {
library(package, character.only = TRUE)
}
interim_dir <- "../../data/interim/"
processed_dir <- "../../data/processed/"
output_file_name <- paste0(interim_dir, "transit_for_tableau.csv")
VERSION <- "version_01"
routes_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "routes.txt"), col_types = "ccccciccccccccci")
freq_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "frequencies.txt"), col_types = "iitt")
trips_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "trips.txt"), col_types = "cciciiccccccccccciii")
stops_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "stops.txt"), col_types  = "icccddcccci")
shapes_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "shapes.txt"), col_types = "iinci")
stop_times_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "stop_times.txt"), col_types = "tticncddcccccccccccii")
nodes_sf <- st_read(paste0(interim_dir, "step6_gtfs/", "node.geojson"))
packages_vector <- c("tidyverse",
"sf")
need_to_install <- packages_vector[!(packages_vector %in% installed.packages()[,"Package"])]
if (length(need_to_install)) install.packages(need_to_install)
for (package in packages_vector) {
library(package, character.only = TRUE)
}
interim_dir <- "../../data/interim/"
processed_dir <- "../../data/processed/"
output_file_name <- paste0(interim_dir, "transit_for_tableau.csv")
VERSION <- "version_01"
routes_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "routes.txt"), col_types = "ccccciccccccccci")
freq_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "frequencies.txt"), col_types = "iitt")
trips_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "trips.txt"), col_types = "cciciiccccccccccciii")
stops_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "stops.txt"), col_types  = "icccddcccci")
shapes_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "shapes.txt"), col_types = "iinci")
stop_times_df <- read_csv(paste0(interim_dir, "step6_gtfs/", "stop_times.txt"), col_types = "tticncddcccccccccccii")
nodes_sf <- st_read(paste0(interim_dir, "step5_tidy_roadway/", "node.geojson"))
nodes_df <- bind_cols(tibble(model_node_id = nodes_sf$model_node_id), as_tibble(st_coordinates(nodes_sf))) %>%
rename(lng = X, lat = Y)
nodes_df <- bind_cols(tibble(model_node_id = nodes_sf$model_node_id), as_tibble(st_coordinates(nodes_sf))) %>%
rename(lng = X, lat = Y)
donkey = tibble(model_node_id = nodes_sf$model_node_id)
nodes_sf <- st_read(paste0(interim_dir, "step6_gtfs/", "node.geojson"))
nodes_df <- bind_cols(tibble(model_node_id = nodes_sf$model_node_id), as_tibble(st_coordinates(nodes_sf))) %>%
rename(lng = X, lat = Y)
names(trips_df)
table(routes_df$route_type)
nodes_df <- bind_cols(tibble(model_node_id = nodes_sf$model_node_id), as_tibble(st_coordinates(nodes_sf))) %>%
rename(lng = X, lat = Y)
names(trips_df)
output_stops_df <- select(routes_df, route_id_original, route_id, agency_id, route_short_name, route_long_name, agency_raw_name) %>%
left_join(select(trips_df, route_id, service_id, trip_id, trip_headsign, direction_id, shape_id),
., by = c("route_id")) %>%
left_join(., freq_df, by = c("trip_id")) %>%
left_join(select(stop_times_df, trip_id, stop_id, stop_sequence), ., by = c("trip_id")) %>%
left_join(., select(stops_df, stop_id, stop_name, stop_lat, stop_lon), by = c("stop_id")) %>%
mutate(summary = "stops")
output_shapes_df <- select(routes_df, route_id_original, route_id, agency_id, route_short_name, route_long_name, agency_raw_name) %>%
left_join(select(trips_df, route_id, service_id, trip_id, trip_headsign, direction_id, shape_id),
., by = c("route_id")) %>%
left_join(., freq_df, by = c("trip_id")) %>%
left_join(., select(shapes_df, shape_id, shape_pt_sequence, shape_model_node_id), by = c("shape_id")) %>%
left_join(., nodes_df, by = c("shape_model_node_id" = "model_node_id")) %>%
mutate(summary = "shapes")
output_df <- bind_rows(output_stops_df, output_shapes_df)
nodes_df <- bind_cols(tibble(model_node_id = nodes_sf$model_node_id), as_tibble(st_coordinates(nodes_sf))) %>%
rename(lng = X, lat = Y)
names(trips_df)
output_stops_df <- select(routes_df, route_id_original, route_id, agency_id, route_type, route_short_name, route_long_name, agency_raw_name) %>%
left_join(select(trips_df, route_id, service_id, trip_id, trip_headsign, direction_id, shape_id),
., by = c("route_id")) %>%
left_join(., freq_df, by = c("trip_id")) %>%
left_join(select(stop_times_df, trip_id, stop_id, stop_sequence), ., by = c("trip_id")) %>%
left_join(., select(stops_df, stop_id, stop_name, stop_lat, stop_lon), by = c("stop_id")) %>%
mutate(summary = "stops")
output_shapes_df <- select(routes_df, route_id_original, route_id, agency_id, route_short_name, route_long_name, agency_raw_name) %>%
left_join(select(trips_df, route_id, service_id, trip_id, trip_headsign, direction_id, shape_id),
., by = c("route_id")) %>%
left_join(., freq_df, by = c("trip_id")) %>%
left_join(., select(shapes_df, shape_id, shape_pt_sequence, shape_model_node_id), by = c("shape_id")) %>%
left_join(., nodes_df, by = c("shape_model_node_id" = "model_node_id")) %>%
mutate(summary = "shapes")
output_df <- bind_rows(output_stops_df, output_shapes_df)
write_csv(output_df, path = output_file_name, na = "")
table(trips_df$direction_id)
